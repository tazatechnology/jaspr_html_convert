// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.3.1.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded. The loadPriority argument is the priority the
//    library should be loaded with as specified in the code via the
//    load-priority annotation (0: normal, 1: high).
// dartDeferredLibraryMultiLoader(uris, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of every URI in `uris`,
//    and call successCallback. If it fails to do so, it should call
//    errorCallback with an error. The loadId argument is the deferred import
//    that resulted in this uri being loaded. The loadPriority argument is the
//    priority the library should be loaded with as specified in the code via
//    the load-priority annotation (0: normal, 1: high).
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key)) {
        to[key] = from[key];
      }
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(Object.getPrototypeOf(object) && Object.getPrototypeOf(object).p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        Object.setPrototypeOf(cls.prototype, sup.prototype);
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++) {
      inherit(classes[i], sup);
    }
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazyOld(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        A.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else {
          result = holder[name];
        }
      } finally {
        if (result === sentinelInProgress) {
          holder[name] = null;
        }
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        holder[name] = initializer();
      }
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel) {
          A.throwLateFieldADI(name);
        }
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i) {
      convertToFastObject(arrayOfObjects[i]);
    }
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number") {
      funType += typesOffset;
    }
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$allocateGrowable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      return J.JSArray_markFixedList(A._setArrayType(allocation, $E._eval$1("JSArray<0>")), $E);
    },
    JSArray_markFixedList(list, $T) {
      list.fixed$length = Array;
      return list;
    },
    JSArray__compareAny(a, b) {
      var t1 = type$.Comparable_dynamic;
      return J.compareTo$1$ns(t1._as(a), t1._as(b));
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = string.charCodeAt(index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var t1, index0, codeUnit;
      for (t1 = string.length; index > 0; index = index0) {
        index0 = index - 1;
        if (!(index0 < t1))
          return A.ioore(string, index0);
        codeUnit = string.charCodeAt(index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ns(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$length$asx(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    set$text$x(receiver, value) {
      return J.getInterceptor$x(receiver).set$text(receiver, value);
    },
    set$value$x(receiver, value) {
      return J.getInterceptor$x(receiver).set$value(receiver, value);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$nodes$x(receiver) {
      return J.getInterceptor$x(receiver).get$nodes(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    get$sync$x(receiver) {
      return J.getInterceptor$x(receiver).get$sync(receiver);
    },
    get$target$x(receiver) {
      return J.getInterceptor$x(receiver).get$target(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (Array.isArray(receiver) || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    _addEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._addEventListener$3(receiver, a0, a1, a2);
    },
    _removeAttribute$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver)._removeAttribute$1(receiver, a0);
    },
    _removeChild$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver)._removeChild$1(receiver, a0);
    },
    _removeEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._removeEventListener$3(receiver, a0, a1, a2);
    },
    _replaceChild$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    allMatches$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
    },
    allMatches$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).allMatches$2(receiver, a0, a1);
    },
    append$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).append$1(receiver, a0);
    },
    cast$2$0$ax(receiver, $T1, $T2) {
      return J.getInterceptor$ax(receiver).cast$2$0(receiver, $T1, $T2);
    },
    clear$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).clear$0(receiver);
    },
    close$0$z(receiver) {
      return J.getInterceptor$z(receiver).close$0(receiver);
    },
    codeUnitAt$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
    },
    compareTo$1$ns(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    endsWith$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).endsWith$1(receiver, a0);
    },
    insertBefore$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).insertBefore$2(receiver, a0, a1);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    matchAsPrefix$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
    },
    remove$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    replaceWith$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    sort$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
    },
    take$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).take$1(receiver, a0);
    },
    toList$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    where$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).where$1(receiver, a0);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JavaScriptBigInt: function JavaScriptBigInt() {
    },
    JavaScriptSymbol: function JavaScriptSymbol() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _.__interceptors$_length = t1;
      _._index = 0;
      _.__interceptors$_current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  A = {JS_CONST: function JS_CONST() {
    },
    CastIterable_CastIterable(source, $S, $T) {
      if ($S._eval$1("EfficientLengthIterable<0>")._is(source))
        return new A._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new A.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$localNI(localName) {
      return new A.LateError("Local '" + localName + "' has not been initialized.");
    },
    hexDigitValue(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    SystemHash_combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    isToStringVisiting(object) {
      var t1, i;
      for (t1 = $.toStringVisiting.length, i = 0; i < t1; ++i)
        if (object === $.toStringVisiting[i])
          return true;
      return false;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      A.ArgumentError_checkNotNull(takeCount, _s9_, type$.int);
      A.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new A.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        A.ArgumentError_checkNotNull(count, _s5_, type$.int);
        A.RangeError_checkNotNegative(count, _s5_);
        return new A.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      A.ArgumentError_checkNotNull(count, _s5_, type$.int);
      A.RangeError_checkNotNegative(count, _s5_);
      return new A.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    IterableElementError_tooMany() {
      return new A.StateError("Too many elements");
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    Sort__doSort(a, left, right, compare, $E) {
      if (right - left <= 32)
        A.Sort__insertionSort(a, left, right, compare, $E);
      else
        A.Sort__dualPivotQuicksort(a, left, right, compare, $E);
    },
    Sort__insertionSort(a, left, right, compare, $E) {
      var i, t1, el, j, t2, j0;
      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          if (j > left) {
            t2 = compare.call$2(t1.$index(a, j - 1), el);
            if (typeof t2 !== "number")
              return t2.$gt();
            t2 = t2 > 0;
          } else
            t2 = false;
          if (!t2)
            break;
          j0 = j - 1;
          t1.$indexSet(a, j, t1.$index(a, j0));
          j = j0;
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort(a, left, right, compare, $E) {
      var t0, less, great, k, ak, comp, great0, less0, pivots_are_equal,
        sixth = B.JSInt_methods._tdivFast$1(right - left + 1, 6),
        index1 = left + sixth,
        index5 = right - sixth,
        index3 = B.JSInt_methods._tdivFast$1(left + right, 2),
        index2 = index3 - sixth,
        index4 = index3 + sixth,
        t1 = J.getInterceptor$asx(a),
        el1 = t1.$index(a, index1),
        el2 = t1.$index(a, index2),
        el3 = t1.$index(a, index3),
        el4 = t1.$index(a, index4),
        el5 = t1.$index(a, index5),
        t2 = compare.call$2(el1, el2);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el4, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t2 = compare.call$2(el1, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el2, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el1, el4);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el3, el4);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      t2 = compare.call$2(el2, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el2, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el4, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t1.$indexSet(a, index1, el1);
      t1.$indexSet(a, index3, el3);
      t1.$indexSet(a, index5, el5);
      t1.$indexSet(a, index2, t1.$index(a, left));
      t1.$indexSet(a, index4, t1.$index(a, right));
      less = left + 1;
      great = right - 1;
      if (J.$eq$(compare.call$2(el2, el4), 0)) {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp = compare.call$2(ak, el2);
          if (comp === 0)
            continue;
          if (comp < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else
            for (; true;) {
              comp = compare.call$2(t1.$index(a, great), el2);
              if (comp > 0) {
                --great;
                continue;
              } else {
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
        pivots_are_equal = true;
      } else {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) > 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) > 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        pivots_are_equal = false;
      }
      t2 = less - 1;
      t1.$indexSet(a, left, t1.$index(a, t2));
      t1.$indexSet(a, t2, el2);
      t2 = great + 1;
      t1.$indexSet(a, right, t1.$index(a, t2));
      t1.$indexSet(a, t2, el4);
      A.Sort__doSort(a, left, less - 2, compare, $E);
      A.Sort__doSort(a, great + 2, right, compare, $E);
      if (pivots_are_equal)
        return;
      if (less < index1 && great > index5) {
        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
          ++less;
        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) === 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) === 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) === 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        A.Sort__doSort(a, less, great, compare, $E);
      } else
        A.Sort__doSort(a, less, great, compare, $E);
    },
    CastConverter: function CastConverter(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    _CastListBase_sort_closure: function _CastListBase_sort_closure(t0, t1) {
      this.$this = t0;
      this.compare = t1;
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap: function CastMap(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap_forEach_closure: function CastMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CastMap_entries_closure: function CastMap_entries_closure(t0) {
      this.$this = t0;
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this.__internal$_string = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    SentinelValue: function SentinelValue() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterable: function ExpandIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterator: function ExpandIterator(t0, t1, t2, t3) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._currentExpansion = t2;
      _.__internal$_current = null;
      _.$ti = t3;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipWhileIterable: function SkipWhileIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    SkipWhileIterator: function SkipWhileIterator(t0, t1, t2) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._hasSkipped = false;
      _.$ti = t2;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator(t0) {
      this.$ti = t0;
    },
    WhereTypeIterable: function WhereTypeIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    WhereTypeIterator: function WhereTypeIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      if (3 >= match.length)
        return A.ioore(match, 3);
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((digitsPart.charCodeAt(i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_objectTypeName(object) {
      return A.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_safeToString(object) {
      if (object == null || typeof object == "number" || A._isBool(object))
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      if (object instanceof A.Closure)
        return object.toString$0(0);
      if (object instanceof A._Record)
        return object._toString$1(true);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Primitives_currentUri() {
      if (!!self.location)
        return self.location.href;
      return null;
    },
    Primitives__fromCharCodeApply(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints(codePoints) {
      var t1, _i, i,
        a = A._setArrayType([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, A.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i <= 65535)
          B.JSArray_methods.add$1(a, i);
        else if (i <= 1114111) {
          B.JSArray_methods.add$1(a, 55296 + (B.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          B.JSArray_methods.add$1(a, 56320 + (i & 1023));
        } else
          throw A.wrapException(A.argumentErrorValue(i));
      }
      return A.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i < 0)
          throw A.wrapException(A.argumentErrorValue(i));
        if (i > 65535)
          return A.Primitives_stringFromCodePoints(charCodes);
      }
      return A.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._core$_value);
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0;
      return t1;
    },
    Primitives_getMonth(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1;
      return t1;
    },
    Primitives_getDay(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0;
      return t1;
    },
    Primitives_getHours(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0;
      return t1;
    },
    Primitives_getMinutes(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0;
      return t1;
    },
    Primitives_getSeconds(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0;
      return t1;
    },
    Primitives_getMilliseconds(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0;
      return t1;
    },
    iae(argument) {
      throw A.wrapException(A.argumentErrorValue(argument));
    },
    ioore(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = A._asInt(J.get$length$asx(indexable));
      if (index < 0 || index >= $length)
        return A.IndexError$withLength(index, $length, indexable, null, _s5_);
      return A.RangeError$value(index, _s5_);
    },
    diagnoseRangeError(start, end, $length) {
      if (start < 0 || start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    wrapException(ex) {
      return A.initializeExceptionWrapper(new Error(), ex);
    },
    initializeExceptionWrapper(wrapper, ex) {
      var t1;
      if (ex == null)
        ex = new A.TypeError();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex) {
      throw A.wrapException(ex);
    },
    throwExpressionWithWrapper(ex, wrapper) {
      throw A.initializeExceptionWrapper(wrapper, ex);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      var t1;
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace) {
        t1 = ex.dartException;
        return A.saveStackTrace(ex, t1 == null ? type$.Object._as(t1) : t1);
      }
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              A.S(message);
              return A.saveStackTrace(ex, new A.NullError());
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
          } else if (nullCall.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefCall.matchTypeError$1(message) != null || undefLiteralCall.matchTypeError$1(message) != null || nullProperty.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefProperty.matchTypeError$1(message) != null || undefLiteralProperty.matchTypeError$1(message) != null) {
            A._asString(message);
            return A.saveStackTrace(ex, new A.NullError());
          }
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, null, null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      trace = new A._StackTrace(exception);
      if (typeof exception === "object")
        exception.$cachedTrace = trace;
      return trace;
    },
    objectHashCode(object) {
      if (object == null)
        return J.get$hashCode$(object);
      if (typeof object == "object")
        return A.Primitives_objectHashCode(object);
      return J.get$hashCode$(object);
    },
    constantHashCode(key) {
      if (typeof key == "number")
        return B.JSNumber_methods.get$hashCode(key);
      if (key instanceof A._Type)
        return A.Primitives_objectHashCode(key);
      if (key instanceof A._Record)
        return key.get$hashCode(key);
      return A.objectHashCode(key);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    fillLiteralSet(values, result) {
      var index,
        $length = values.length;
      for (index = 0; index < $length; ++index)
        result.add$1(0, values[index]);
      return result;
    },
    _invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (A._asInt(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(new A._Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = A.convertDartClosureToJSUncached(closure, arity);
      closure.$identity = $function;
      return $function;
    },
    convertDartClosureToJSUncached(closure, arity) {
      var entry;
      switch (arity) {
        case 0:
          entry = closure.call$0;
          break;
        case 1:
          entry = closure.call$1;
          break;
        case 2:
          entry = closure.call$2;
          break;
        case 3:
          entry = closure.call$3;
          break;
        case 4:
          entry = closure.call$4;
          break;
        default:
          entry = null;
      }
      if (entry != null)
        return entry.bind(closure);
      return function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A._invokeClosure);
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      $constructor = isStatic ? function static_tear_off() {
        this.$initialize();
      } : function tear_off(a, b) {
        this.$initialize(a, b);
      };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      return A.Closure_cspForwardCall($function.length, needsDirectAccess, stubName, $function);
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var t1, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template), type$.nullable_Object);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    boolConversionCheck(value) {
      if (value == null)
        A.assertThrow("boolean expression must not be null");
      return value;
    },
    assertThrow(message) {
      throw A.wrapException(new A._AssertionError(message));
    },
    throwCyclicInit(staticName) {
      throw A.wrapException(new A._CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    LinkedHashMapKeyIterator$(_map, _modifications, $E) {
      var t1 = new A.LinkedHashMapKeyIterator(_map, _modifications, $E._eval$1("LinkedHashMapKeyIterator<0>"));
      t1._cell = _map._first;
      return t1;
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = A._asString($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = A._asStringQ($.alternateTagFunction.call$2(obj, tag));
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (Array.isArray(transformers))
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    createRecordTypePredicate(shape, fieldRtis) {
      var $length = fieldRtis.length,
        $function = init.rttc["" + $length + ";" + shape];
      if ($function == null)
        return null;
      if ($length === 0)
        return $function;
      if ($length === $function.length)
        return $function.apply(null, fieldRtis);
      return $function(fieldRtis);
    },
    JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1;
      if (typeof other == "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else if (other instanceof A.JSSyntaxRegExp) {
        t1 = B.JSString_methods.substring$1(receiver, startIndex);
        return other._nativeRegExp.test(t1);
      } else
        return !J.allMatches$1$s(other, B.JSString_methods.substring$1(receiver, startIndex)).get$isEmpty(0);
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    stringReplaceFirstRE(receiver, regexp, replacement, startIndex) {
      var match = regexp._execGlobal$2(receiver, startIndex);
      if (match == null)
        return receiver;
      return A.stringReplaceRangeUnchecked(receiver, match._match.index, match.get$end(), replacement);
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var nativeRegexp;
      if (typeof pattern == "string")
        return A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      if (pattern instanceof A.JSSyntaxRegExp) {
        nativeRegexp = pattern.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, A.escapeReplacement(replacement));
      }
      return A.stringReplaceAllGeneral(receiver, pattern, replacement);
    },
    stringReplaceAllGeneral(receiver, pattern, replacement) {
      var t1, startIndex, t2, match;
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), startIndex = 0, t2 = ""; t1.moveNext$0();) {
        match = t1.get$current();
        t2 = t2 + receiver.substring(startIndex, match.get$start(match)) + replacement;
        startIndex = match.get$end();
      }
      t1 = t2 + receiver.substring(startIndex);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        t1 = "" + replacement;
        for (i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      if (receiver.indexOf(pattern, 0) < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    _stringIdentity(string) {
      return string;
    },
    stringReplaceAllFuncUnchecked(receiver, pattern, onMatch, onNonMatch) {
      var t1, t2, startIndex, t3, match, t4, t5;
      for (t1 = pattern.allMatches$1(0, receiver), t1 = new A._AllMatchesIterator(t1._re, t1._string, t1.__js_helper$_start), t2 = type$.RegExpMatch, startIndex = 0, t3 = ""; t1.moveNext$0();) {
        match = t1.__js_helper$_current;
        if (match == null)
          match = t2._as(match);
        t4 = match._match;
        t5 = t4.index;
        t3 = t3 + A.S(A._stringIdentity(B.JSString_methods.substring$2(receiver, startIndex, t5))) + A.S(onMatch.call$1(match));
        startIndex = t5 + t4[0].length;
      }
      t1 = t3 + A.S(A._stringIdentity(B.JSString_methods.substring$1(receiver, startIndex)));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceFirstUnchecked(receiver, pattern, replacement, startIndex) {
      var index, t1, matches, match;
      if (typeof pattern == "string") {
        index = receiver.indexOf(pattern, startIndex);
        if (index < 0)
          return receiver;
        return A.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
      }
      if (pattern instanceof A.JSSyntaxRegExp)
        return startIndex === 0 ? receiver.replace(pattern._nativeRegExp, A.escapeReplacement(replacement)) : A.stringReplaceFirstRE(receiver, pattern, replacement, startIndex);
      t1 = J.allMatches$2$s(pattern, receiver, startIndex);
      matches = t1.get$iterator(t1);
      if (!matches.moveNext$0())
        return receiver;
      match = matches.get$current();
      return B.JSString_methods.replaceRange$3(receiver, match.get$start(match), match.get$end(), replacement);
    },
    stringReplaceRangeUnchecked(receiver, start, end, replacement) {
      return receiver.substring(0, start) + replacement + receiver.substring(end);
    },
    _Record_2: function _Record_2(t0, t1) {
      this._0 = t0;
      this._1 = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2) {
      this._jsIndex = t0;
      this._values = t1;
      this.$ti = t2;
    },
    _KeysOrValues: function _KeysOrValues(t0, t1) {
      this.__js_helper$_elements = t0;
      this.$ti = t1;
    },
    _KeysOrValuesOrElementsIterator: function _KeysOrValuesOrElementsIterator(t0, t1, t2) {
      var _ = this;
      _.__js_helper$_elements = t0;
      _.__js_helper$_length = t1;
      _.__js_helper$_index = 0;
      _.__js_helper$_current = null;
      _.$ti = t2;
    },
    GeneralConstantMap: function GeneralConstantMap(t0, t1) {
      this._jsData = t0;
      this.$ti = t1;
    },
    Instantiation: function Instantiation() {
    },
    Instantiation1: function Instantiation1(t0, t1) {
      this._genericClosure = t0;
      this.$ti = t1;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError() {
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    _CyclicInitializationError: function _CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    _AssertionError: function _AssertionError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _.__js_helper$_nums = _.__js_helper$_strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    JsLinkedHashMap_addAll_closure: function JsLinkedHashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    JsConstantLinkedHashMap: function JsConstantLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _.__js_helper$_nums = _.__js_helper$_strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    _Record: function _Record() {
    },
    _Record2: function _Record2() {
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _AllMatchesIterable: function _AllMatchesIterable(t0, t1, t2) {
      this._re = t0;
      this._string = t1;
      this.__js_helper$_start = t2;
    },
    _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._regExp = t0;
      _._string = t1;
      _._nextIndex = t2;
      _.__js_helper$_current = null;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {
      this._input = t0;
      this._pattern = t1;
      this.__js_helper$_index = t2;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    throwLateFieldNI(fieldName) {
      A.throwExpressionWithWrapper(new A.LateError("Field '" + fieldName + "' has not been initialized."), new Error());
    },
    throwLateFieldAI(fieldName) {
      A.throwExpressionWithWrapper(new A.LateError("Field '" + fieldName + "' has already been initialized."), new Error());
    },
    throwLateFieldADI(fieldName) {
      A.throwExpressionWithWrapper(new A.LateError("Field '" + fieldName + "' has been assigned during initialization."), new Error());
    },
    _Cell$named(_name) {
      var t1 = new A._Cell(_name);
      return t1._value = t1;
    },
    _Cell: function _Cell(t0) {
      this.__late_helper$_name = t0;
      this._value = null;
    },
    _checkViewArguments(buffer, offsetInBytes, $length) {
    },
    _ensureNativeList(list) {
      return list;
    },
    NativeByteData_NativeByteData$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new DataView(buffer, offsetInBytes) : new DataView(buffer, offsetInBytes, $length);
    },
    NativeInt8List__create1(arg) {
      return new Int8Array(arg);
    },
    NativeUint8List_NativeUint8List($length) {
      return new Uint8Array($length);
    },
    NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
      var t1;
      A._checkViewArguments(buffer, offsetInBytes, $length);
      t1 = new Uint8Array(buffer, offsetInBytes, $length);
      return t1;
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 12 || kind === 13;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    instantiatedGenericFunctionType(genericFunctionRti, instantiationRti) {
      var t1, cache, key, probe, rti;
      if (genericFunctionRti == null)
        return null;
      t1 = instantiationRti._rest;
      cache = genericFunctionRti._bindCache;
      if (cache == null)
        cache = genericFunctionRti._bindCache = new Map();
      key = instantiationRti._canonicalRecipe;
      probe = cache.get(key);
      if (probe != null)
        return probe;
      rti = A._substitute(init.typeUniverse, genericFunctionRti._primary, t1, 0);
      cache.set(key, rti);
      return rti;
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, t1, fields, substitutedFields, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          t1 = rti._primary;
          fields = rti._rest;
          substitutedFields = A._substituteArray(universe, fields, typeArguments, depth);
          if (substitutedFields === fields)
            return rti;
          return A._Universe__lookupRecordRti(universe, t1, substitutedFields);
        case 12:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 13:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 14:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      if (object instanceof A.Object)
        return A._instanceType(object);
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? Object.getPrototypeOf(Object.getPrototypeOf(instance)).constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeTypeOfDartObject(object) {
      return A.createRuntimeType(A._instanceType(object));
    },
    getRuntimeTypeOfClosure(closure) {
      var rti = A.closureFunctionType(closure);
      return A.createRuntimeType(rti == null ? A.instanceType(closure) : rti);
    },
    _structuralTypeOf(object) {
      var functionRti;
      if (object instanceof A._Record)
        return object._getRti$0();
      functionRti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      if (functionRti != null)
        return functionRti;
      if (type$.TrustedGetRuntimeType._is(object))
        return J.get$runtimeType$(object)._rti;
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A.instanceType(object);
    },
    createRuntimeType(rti) {
      var t1 = rti._cachedRuntimeType;
      return t1 == null ? rti._cachedRuntimeType = A._createRuntimeType(rti) : t1;
    },
    _createRuntimeType(rti) {
      var starErasedRti, t1,
        s = rti._canonicalRecipe,
        starErasedRecipe = s.replace(/\*/g, "");
      if (starErasedRecipe === s)
        return rti._cachedRuntimeType = new A._Type(rti);
      starErasedRti = A._Universe_eval(init.typeUniverse, starErasedRecipe, true);
      t1 = starErasedRti._cachedRuntimeType;
      return t1 == null ? starErasedRti._cachedRuntimeType = A._createRuntimeType(starErasedRti) : t1;
    },
    evaluateRtiForRecord(recordRecipe, valuesList) {
      var bindings, i,
        values = valuesList,
        $length = values.length;
      if ($length === 0)
        return type$.Record_0;
      if (0 >= $length)
        return A.ioore(values, 0);
      bindings = A._Universe_evalInEnvironment(init.typeUniverse, A._structuralTypeOf(values[0]), "@<0>");
      for (i = 1; i < $length; ++i) {
        if (!(i < values.length))
          return A.ioore(values, i);
        bindings = A._Universe_bind(init.typeUniverse, bindings, A._structuralTypeOf(values[i]));
      }
      return A._Universe_evalInEnvironment(init.typeUniverse, bindings, recordRecipe);
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var t1, unstarred, unstarredKind, isFn, $name, predicate, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (!A.isSoundTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return A._finishIsFn(testRti, object, A._isTop);
      t1 = testRti._kind;
      if (t1 === 7)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      if (t1 === 1)
        return A._finishIsFn(testRti, object, A._isNever);
      unstarred = t1 === 6 ? testRti._primary : testRti;
      unstarredKind = unstarred._kind;
      if (unstarredKind === 8)
        return A._finishIsFn(testRti, object, A._isFutureOr);
      if (unstarred === type$.int)
        isFn = A._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = A._isNum;
      else if (unstarred === type$.String)
        isFn = A._isString;
      else
        isFn = unstarred === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (unstarredKind === 9) {
        $name = unstarred._primary;
        if (unstarred._rest.every(A.isDefinitelyTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (unstarredKind === 11) {
        predicate = A.createRecordTypePredicate(unstarred._primary, unstarred._rest);
        return A._finishIsFn(testRti, object, predicate == null ? A._isNever : predicate);
      }
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var t1, testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (!A.isSoundTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else {
        t1 = A.isNullable(testRti);
        if (t1)
          asFn = A._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs(testRti) {
      var t1,
        kind = testRti._kind;
      if (!A.isSoundTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              if (!(kind === 6 && A._nullIs(testRti._primary)))
                t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      return A.isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), testRti);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var testRti = this;
      if (object == null) {
        if (A.isNullable(testRti))
          return object;
      } else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _failedAsCheck(object, testRti) {
      throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A._rtiToString(testRti, null))));
    },
    checkTypeBound(type, bound, variable, methodName) {
      if (A.isSubtype(init.typeUniverse, type, bound))
        return type;
      throw A.wrapException(A._TypeError$fromMessage("The type argument '" + A._rtiToString(type, null) + "' is not a subtype of the type variable bound '" + A._rtiToString(bound, null) + "' of type variable '" + variable + "' in '" + methodName + "'."));
    },
    _Error_compose(object, checkedTypeDescription) {
      return A.Error_safeToString(object) + ": type '" + A._rtiToString(A._structuralTypeOf(object), null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, type));
    },
    _isFutureOr(object) {
      var testRti = this,
        unstarred = testRti._kind === 6 ? testRti._primary : testRti;
      return unstarred._primary._is(object) || A.Rti__getFutureFromFutureOr(init.typeUniverse, unstarred)._is(object);
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isNever(object) {
      return false;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _recordRtiToString(recordType, genericContext) {
      var fieldCount, names, namesIndex, s, comma, i,
        partialShape = recordType._primary,
        fields = recordType._rest;
      if ("" === partialShape)
        return "(" + A._rtiArrayToString(fields, genericContext) + ")";
      fieldCount = fields.length;
      names = partialShape.split(",");
      namesIndex = names.length - fieldCount;
      for (s = "(", comma = "", i = 0; i < fieldCount; ++i, comma = ", ") {
        s += comma;
        if (namesIndex === 0)
          s += "{";
        s += A._rtiToString(fields[i], genericContext);
        if (namesIndex >= 0)
          s += " " + names[namesIndex];
        ++namesIndex;
      }
      return s + "})";
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, t3, t4, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = A._setArrayType([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          B.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          t3 = genericContext.length;
          t4 = t3 - 1 - i;
          if (!(t4 >= 0))
            return A.ioore(genericContext, t4);
          typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[t4]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            if (!(boundRti === t2))
              t3 = false;
            else
              t3 = true;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var questionArgument, s, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6)
        return A._rtiToString(rti._primary, genericContext);
      if (kind === 7) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 12 || argumentKind === 13 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return A._recordRtiToString(rti, genericContext);
      if (kind === 12)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 13)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 14) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (!(t1 >= 0 && t1 < t2))
          return A.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isSoundTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isSoundTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && A.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
            return starArgument;
          else
            return A.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (A.isSoundTopType(baseType) || baseType === type$.Object || baseType === type$.legacy_Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 14;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupRecordRti(universe, partialShapeTag, fields) {
      var rti, t1,
        key = "+" + (partialShapeTag + "(" + A._Universe__canonicalRecipeJoin(fields) + ")"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = partialShapeTag;
      rti._rest = fields;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, end, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              A._Parser_handleTypeArguments(parser, t1);
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(-3);
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              A._Parser_handleArguments(parser, t1);
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            case 43:
              end = source.indexOf("(", i);
              t1.push(source.substring(i, end));
              t1.push(-4);
              t1.push(parser.p);
              parser.p = t1.length;
              i = end + 1;
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleTypeArguments(parser, stack) {
      var base,
        t1 = parser.u,
        $arguments = A._Parser_collectArray(parser, stack),
        head = stack.pop();
      if (typeof head == "string")
        stack.push(A._Universe__lookupInterfaceRti(t1, head, $arguments));
      else {
        base = A._Parser_toType(t1, parser.e, head);
        switch (base._kind) {
          case 12:
            stack.push(A._Universe__lookupGenericFunctionRti(t1, base, $arguments, parser.n));
            break;
          default:
            stack.push(A._Universe__lookupBindingRti(t1, base, $arguments));
            break;
        }
      }
    },
    _Parser_handleArguments(parser, stack) {
      var optionalPositional, named, requiredPositional, returnType, parameters, _null = null,
        t1 = parser.u,
        head = stack.pop();
      if (typeof head == "number")
        switch (head) {
          case -1:
            optionalPositional = stack.pop();
            named = _null;
            break;
          case -2:
            named = stack.pop();
            optionalPositional = _null;
            break;
          default:
            stack.push(head);
            named = _null;
            optionalPositional = named;
            break;
        }
      else {
        stack.push(head);
        named = _null;
        optionalPositional = named;
      }
      requiredPositional = A._Parser_collectArray(parser, stack);
      head = stack.pop();
      switch (head) {
        case -3:
          head = stack.pop();
          if (optionalPositional == null)
            optionalPositional = t1.sEA;
          if (named == null)
            named = t1.sEA;
          returnType = A._Parser_toType(t1, parser.e, head);
          parameters = new A._FunctionParameters();
          parameters._requiredPositional = requiredPositional;
          parameters._optionalPositional = optionalPositional;
          parameters._named = named;
          stack.push(A._Universe__lookupFunctionRti(t1, returnType, parameters));
          return;
        case -4:
          stack.push(A._Universe__lookupRecordRti(t1, stack.pop(), requiredPositional));
          return;
        default:
          throw A.wrapException(A.AssertionError$("Unexpected state under `()`: " + A.S(head)));
      }
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_collectArray(parser, stack) {
      var array = stack.splice(parser.p);
      A._Parser_toTypes(parser.u, parser.e, array);
      parser.p = stack.pop();
      return array;
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number") {
        environment.toString;
        return A._Parser_indexToType(universe, environment, item);
      } else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    isSubtype(universe, s, t) {
      var result,
        sCache = s._isSubtypeCache;
      if (sCache == null)
        sCache = s._isSubtypeCache = new Map();
      result = sCache.get(t);
      if (result == null) {
        result = A._isSubtype(universe, s, null, t, null, false) ? 1 : 0;
        sCache.set(t, result);
      }
      if (0 === result)
        return false;
      if (1 === result)
        return true;
      return true;
    },
    _isSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var t1, sKind, leftTypeVariable, tKind, t2, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!A.isSoundTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isSoundTopType(s))
        return false;
      if (s._kind !== 1)
        t1 = false;
      else
        t1 = true;
      if (t1)
        return true;
      leftTypeVariable = sKind === 14;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv, false))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv, false);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
        if (sKind === 6)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
        return sKind !== 7;
      }
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
      if (tKind === 6) {
        t1 = A.Rti__getQuestionFromStar(universe, t);
        return A._isSubtype(universe, s, sEnv, t1, tEnv, false);
      }
      if (sKind === 8) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv, false))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv, false);
      }
      if (sKind === 7) {
        t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv, false);
        return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
      }
      if (tKind === 8) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv, false))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv, false);
      }
      if (tKind === 7) {
        t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv, false);
        return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv, false);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 12;
      if ((!t1 || sKind === 13) && t === type$.Function)
        return true;
      t2 = sKind === 11;
      if (t2 && t === type$.Record)
        return true;
      if (tKind === 13) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 13)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv, false) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv, false))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv, false);
      }
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv, false);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv, false);
      }
      if (t2 && tKind === 11)
        return A._isRecordSubtype(universe, s, sEnv, t, tEnv, false);
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv, false))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv, false))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv, false))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv, false))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv, false))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var rule, recipes, $length, supertypeArgs, i,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv, false);
      }
      return A._areArgumentsSubtypes(universe, s._rest, null, sEnv, t._rest, tEnv, false);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv, isLegacy) {
      var i,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i)
        if (!A._isSubtype(universe, sArgs[i], sEnv, tArgs[i], tEnv, false))
          return false;
      return true;
    },
    _isRecordSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var i,
        sFields = s._rest,
        tFields = t._rest,
        sCount = sFields.length;
      if (sCount !== tFields.length)
        return false;
      if (s._primary !== t._primary)
        return false;
      for (i = 0; i < sCount; ++i)
        if (!A._isSubtype(universe, sFields[i], sEnv, tFields[i], tEnv, false))
          return false;
      return true;
    },
    isNullable(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isSoundTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && A.isNullable(t._primary)))
              t1 = kind === 8 && A.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isDefinitelyTopType(t) {
      var t1;
      if (!A.isSoundTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isSoundTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._isSubtypeCache = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.Duration_0, type$.void_Function._as(callback));
    },
    Timer__createTimer(duration, callback) {
      return A._TimerImpl$(duration._duration / 1000 | 0, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl();
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (object instanceof A._Future)
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true) {
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
          }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new A._wrapJsFunctionForAsync_closure($protected), type$.void, type$.int, type$.dynamic);
    },
    _SyncStarIterator__terminatedBody(_1, _2, _3) {
      return 0;
    },
    AsyncError$(error, stackTrace) {
      var t1 = A.checkNotNullable(error, "error", type$.Object);
      return new A.AsyncError(t1, stackTrace == null ? A.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B._StringStackTrace_3uE;
    },
    Future_Future$microtask(computation, $T) {
      var result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.scheduleMicrotask(new A.Future_Future$microtask_closure(result, computation));
      return result;
    },
    Future_Future$delayed(duration, computation, $T) {
      var result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.Timer_Timer(duration, new A.Future_Future$delayed_closure(computation, result, $T));
      return result;
    },
    _completeWithErrorCallback(result, error, stackTrace) {
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      result._completeError$2(error, stackTrace);
    },
    _Future__chainCoreFutureSync(source, target) {
      var t1, t2, listeners;
      for (t1 = type$._Future_dynamic; t2 = source._state, (t2 & 4) !== 0;)
        source = t1._as(source._resultOrListeners);
      if ((t2 & 24) !== 0) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        A._Future__propagateToListeners(target, listeners);
      } else {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._setChained$1(source);
        source._prependListeners$1(listeners);
      }
    },
    _Future__chainCoreFutureAsync(source, target) {
      var t2, t3, listeners, _box_0 = {},
        t1 = _box_0.source = source;
      for (t2 = type$._Future_dynamic; t3 = t1._state, (t3 & 4) !== 0; t1 = source) {
        source = t2._as(t1._resultOrListeners);
        _box_0.source = source;
      }
      if ((t3 & 24) === 0) {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._setChained$1(t1);
        _box_0.source._prependListeners$1(listeners);
        return;
      }
      if ((t3 & 16) === 0 && target._resultOrListeners == null) {
        target._cloneResult$1(t1);
        return;
      }
      target._state ^= 2;
      A._rootScheduleMicrotask(null, null, target._zone, type$.void_Function._as(new A._Future__chainCoreFutureAsync_closure(_box_0, target)));
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, t3, t4, _box_0, t5, t6, hasError, asyncError, nextListener, nextListener0, sourceResult, t7, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$.nullable__FutureListener_dynamic_dynamic, t4 = type$.Future_dynamic; true;) {
        _box_0 = {};
        t5 = t1._state;
        t6 = (t5 & 16) === 0;
        hasError = !t6;
        if (listeners == null) {
          if (hasError && (t5 & 1) === 0) {
            asyncError = t2._as(t1._resultOrListeners);
            A._rootHandleError(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t5 = _box_1.source;
        sourceResult = t5._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t6) {
          t7 = t1.state;
          t7 = (t7 & 1) !== 0 || (t7 & 15) === 8;
        } else
          t7 = true;
        if (t7) {
          zone = t1.result._zone;
          if (hasError) {
            t5 = t5._zone === zone;
            t5 = !(t5 || t5);
          } else
            t5 = false;
          if (t5) {
            t2._as(sourceResult);
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t6) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t1 instanceof A._Future) {
            t5 = _box_0.listener.$ti;
            t5 = t5._eval$1("Future<2>")._is(t1) || !t5._rest[1]._is(t1);
          } else
            t5 = false;
          if (t5) {
            t4._as(t1);
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = t3._as(result._resultOrListeners);
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFutureSync(t1, result);
            return;
          }
        }
        result = _box_0.listener.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t5 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t5);
          result._state = 8;
          result._resultOrListeners = t5;
        } else {
          t2._as(t5);
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t5;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      var t1;
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);
      t1 = type$.dynamic_Function_Object;
      if (t1._is(errorHandler))
        return t1._as(errorHandler);
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var t1, _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      t1 = false;
      if (t1) {
        A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(callback));
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(currentZone.bindCallbackGuarded$1(callback)));
    },
    StreamIterator_StreamIterator(stream, $T) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator($T._eval$1("_StreamIterator<0>"));
    },
    Timer_Timer(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return A.Timer__createTimer(duration, type$.void_Function._as(callback));
      return A.Timer__createTimer(duration, type$.void_Function._as(t1.bindCallbackGuarded$1(callback)));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f, $R) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg, $R, $T) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      type$.void_Function._as(f);
      if (B.C__RootZone !== zone)
        f = zone.bindCallbackGuarded$1(f);
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl() {
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _SyncStarIterator: function _SyncStarIterator(t0, t1) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._datum = _._async$_current = null;
      _.$ti = t1;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    Future_Future$microtask_closure: function Future_Future$microtask_closure(t0, t1) {
      this.result = t0;
      this.computation = t1;
    },
    Future_Future$delayed_closure: function Future_Future$delayed_closure(t0, t1, t2) {
      this.computation = t0;
      this.result = t1;
      this.T = t2;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__chainCoreFutureAsync_closure: function _Future__chainCoreFutureAsync_closure(t0, t1) {
      this._box_0 = t0;
      this.target = t1;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    _StreamIterator: function _StreamIterator(t0) {
      this.$ti = t0;
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    HashMap_HashMap($K, $V) {
      return new A._HashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_HashMap<1,2>"));
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap_LinkedHashMap($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    HashSet_HashSet($E) {
      return new A._HashSet($E._eval$1("_HashSet<0>"));
    },
    _HashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashSet_LinkedHashSet($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_literal(values, $E) {
      return $E._eval$1("LinkedHashSet<0>")._as(A.fillLiteralSet(values, new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"))));
    },
    _LinkedHashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    HashMap_HashMap$from(other, $K, $V) {
      var result = A.HashMap_HashMap($K, $V);
      other.forEach$1(0, new A.HashMap_HashMap$from_closure(result, $K, $V));
      return result;
    },
    IterableExtensions_get_firstOrNull(_this, $T) {
      var t1 = J.get$iterator$ax(_this.__internal$_iterable);
      if (new A.WhereIterator(t1, _this._f, _this.$ti._eval$1("WhereIterator<1>")).moveNext$0())
        return t1.get$current();
      return null;
    },
    LinkedHashMap_LinkedHashMap$from(other, $K, $V) {
      var result = A.LinkedHashMap_LinkedHashMap($K, $V);
      other.forEach$1(0, new A.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashMap_LinkedHashMap$of(other, $K, $V) {
      var t1 = A.LinkedHashMap_LinkedHashMap($K, $V);
      t1.addAll$1(0, other);
      return t1;
    },
    LinkedHashSet_LinkedHashSet$from(elements, $E) {
      var t1, t2, element,
        result = A.LinkedHashSet_LinkedHashSet($E);
      for (t1 = J.get$iterator$ax(elements), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        element = t1.__interceptors$_current;
        result.add$1(0, $E._as(element == null ? t2._as(element) : element));
      }
      return result;
    },
    _LinkedListIterator$(list, $E) {
      return new A._LinkedListIterator(list, list._modificationCount, list._collection$_first, $E._eval$1("_LinkedListIterator<0>"));
    },
    ListBase__compareAny(a, b) {
      var t1 = type$.Comparable_dynamic;
      return J.compareTo$1$ns(t1._as(a), t1._as(b));
    },
    MapBase_mapToString(m) {
      var result, t1 = {};
      if (A.isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        B.JSArray_methods.add$1($.toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        m.forEach$1(0, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListQueue$($E) {
      return new A.ListQueue(A.List_List$filled(A.ListQueue__calculateCapacity(null), null, false, $E._eval$1("0?")), $E._eval$1("ListQueue<0>"));
    },
    ListQueue__calculateCapacity(initialCapacity) {
      return 8;
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._nums = _._strings = null;
      _.$ti = t0;
    },
    _HashMap_addAll_closure: function _HashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_map = t0;
      _._collection$_keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _HashSet: function _HashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_elements = _._collection$_rest = _._nums = _._strings = null;
      _.$ti = t0;
    },
    _HashSetIterator: function _HashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_elements = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._nums = _._strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._collection$_element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    UnmodifiableListView: function UnmodifiableListView(t0, t1) {
      this._collection$_source = t0;
      this.$ti = t1;
    },
    HashMap_HashMap$from_closure: function HashMap_HashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    LinkedList: function LinkedList(t0) {
      var _ = this;
      _._collection$_length = _._modificationCount = 0;
      _._collection$_first = null;
      _.$ti = t0;
    },
    _LinkedListIterator: function _LinkedListIterator(t0, t1, t2, t3) {
      var _ = this;
      _._list = t0;
      _._modificationCount = t1;
      _._collection$_current = null;
      _._collection$_next = t2;
      _._visitedFirst = false;
      _.$ti = t3;
    },
    LinkedListEntry: function LinkedListEntry() {
    },
    ListBase: function ListBase() {
    },
    MapBase: function MapBase() {
    },
    MapBase_entries_closure: function MapBase_entries_closure(t0) {
      this.$this = t0;
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _DoubleLinkedQueueEntry: function _DoubleLinkedQueueEntry() {
    },
    _DoubleLinkedQueueElement: function _DoubleLinkedQueueElement(t0, t1, t2) {
      var _ = this;
      _._queue = t0;
      _.element = t1;
      _._nextLink = _._previousLink = null;
      _.$ti = t2;
    },
    _DoubleLinkedQueueSentinel: function _DoubleLinkedQueueSentinel(t0) {
      this._nextLink = this._previousLink = null;
      this.$ti = t0;
    },
    DoubleLinkedQueue: function DoubleLinkedQueue(t0, t1) {
      this._sentinel = t0;
      this._elementCount = 0;
      this.$ti = t1;
    },
    _DoubleLinkedQueueIterator: function _DoubleLinkedQueueIterator(t0, t1, t2) {
      var _ = this;
      _._queue = t0;
      _._nextEntry = t1;
      _._collection$_current = null;
      _.$ti = t2;
    },
    ListQueue: function ListQueue(t0, t1) {
      var _ = this;
      _._table = t0;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t1;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._queue = t0;
      _._end = t1;
      _._modificationCount = t2;
      _._collection$_position = t3;
      _._collection$_current = null;
      _.$ti = t4;
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    _Utf8Decoder__makeNativeUint8List(codeUnits, start, end) {
      var bytes, t1, i, b,
        $length = end - start;
      if ($length <= 4096)
        bytes = $.$get$_Utf8Decoder__reusableBuffer();
      else
        bytes = new Uint8Array($length);
      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {
        b = t1.$index(codeUnits, start + i);
        if ((b & 255) !== b)
          b = 255;
        bytes[i] = b;
      }
      return bytes;
    },
    _Utf8Decoder__convertInterceptedUint8List(allowMalformed, codeUnits, start, end) {
      var decoder = allowMalformed ? $.$get$_Utf8Decoder__decoderNonfatal() : $.$get$_Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      if (0 === start && end === codeUnits.length)
        return A._Utf8Decoder__useTextDecoder(decoder, codeUnits);
      return A._Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, end));
    },
    _Utf8Decoder__useTextDecoder(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
      }
      return null;
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (B.JSInt_methods.$mod($length, 4) !== 0)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    _Base64Decoder_decodeChunk(input, start, end, output, outIndex, state) {
      var t1, t2, t3, i, charOr, char, t4, code, outIndex0, expectedPadding,
        _s31_ = "Invalid encoding before padding",
        _s17_ = "Invalid character",
        bits = B.JSInt_methods._shrOtherPositive$1(state, 2),
        count = state & 3,
        inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (t1 = input.length, t2 = inverseAlphabet.length, t3 = output.length, i = start, charOr = 0; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(input, i);
        char = input.charCodeAt(i);
        charOr |= char;
        t4 = char & 127;
        if (!(t4 < t2))
          return A.ioore(inverseAlphabet, t4);
        code = inverseAlphabet[t4];
        if (code >= 0) {
          bits = (bits << 6 | code) & 16777215;
          count = count + 1 & 3;
          if (count === 0) {
            outIndex0 = outIndex + 1;
            if (!(outIndex < t3))
              return A.ioore(output, outIndex);
            output[outIndex] = bits >>> 16 & 255;
            outIndex = outIndex0 + 1;
            if (!(outIndex0 < t3))
              return A.ioore(output, outIndex0);
            output[outIndex0] = bits >>> 8 & 255;
            outIndex0 = outIndex + 1;
            if (!(outIndex < t3))
              return A.ioore(output, outIndex);
            output[outIndex] = bits & 255;
            outIndex = outIndex0;
            bits = 0;
          }
          continue;
        } else if (code === -1 && count > 1) {
          if (charOr > 127)
            break;
          if (count === 3) {
            if ((bits & 3) !== 0)
              throw A.wrapException(A.FormatException$(_s31_, input, i));
            outIndex0 = outIndex + 1;
            if (!(outIndex < t3))
              return A.ioore(output, outIndex);
            output[outIndex] = bits >>> 10;
            if (!(outIndex0 < t3))
              return A.ioore(output, outIndex0);
            output[outIndex0] = bits >>> 2;
          } else {
            if ((bits & 15) !== 0)
              throw A.wrapException(A.FormatException$(_s31_, input, i));
            if (!(outIndex < t3))
              return A.ioore(output, outIndex);
            output[outIndex] = bits >>> 4;
          }
          expectedPadding = (3 - count) * 3;
          if (char === 37)
            expectedPadding += 2;
          return A._Base64Decoder__checkPadding(input, i + 1, end, -expectedPadding - 1);
        }
        throw A.wrapException(A.FormatException$(_s17_, input, i));
      }
      if (charOr >= 0 && charOr <= 127)
        return (bits << 2 | count) >>> 0;
      for (i = start; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(input, i);
        if (input.charCodeAt(i) > 127)
          break;
      }
      throw A.wrapException(A.FormatException$(_s17_, input, i));
    },
    _Base64Decoder__allocateBuffer(input, start, end, state) {
      var paddingStart = A._Base64Decoder__trimPaddingChars(input, start, end),
        $length = (state & 3) + (paddingStart - start),
        bufferLength = B.JSInt_methods._shrOtherPositive$1($length, 2) * 3,
        remainderLength = $length & 3;
      if (remainderLength !== 0 && paddingStart < end)
        bufferLength += remainderLength - 1;
      if (bufferLength > 0)
        return new Uint8Array(bufferLength);
      return $.$get$_Base64Decoder__emptyBuffer();
    },
    _Base64Decoder__trimPaddingChars(input, start, end) {
      var char,
        t1 = input.length,
        newEnd = end,
        index = newEnd,
        padding = 0;
      while (true) {
        if (!(index > start && padding < 2))
          break;
        c$0: {
          --index;
          if (!(index >= 0 && index < t1))
            return A.ioore(input, index);
          char = input.charCodeAt(index);
          if (char === 61) {
            ++padding;
            newEnd = index;
            break c$0;
          }
          if ((char | 32) === 100) {
            if (index === start)
              break;
            --index;
            if (!(index >= 0 && index < t1))
              return A.ioore(input, index);
            char = input.charCodeAt(index);
          }
          if (char === 51) {
            if (index === start)
              break;
            --index;
            if (!(index >= 0 && index < t1))
              return A.ioore(input, index);
            char = input.charCodeAt(index);
          }
          if (char === 37) {
            ++padding;
            newEnd = index;
            break c$0;
          }
          break;
        }
      }
      return newEnd;
    },
    _Base64Decoder__checkPadding(input, start, end, state) {
      var expectedPadding, t1, char;
      if (start === end)
        return state;
      expectedPadding = -state - 1;
      for (t1 = input.length; expectedPadding > 0;) {
        if (!(start < t1))
          return A.ioore(input, start);
        char = input.charCodeAt(start);
        if (expectedPadding === 3) {
          if (char === 61) {
            expectedPadding -= 3;
            ++start;
            break;
          }
          if (char === 37) {
            --expectedPadding;
            ++start;
            if (start === end)
              break;
            if (!(start < t1))
              return A.ioore(input, start);
            char = input.charCodeAt(start);
          } else
            break;
        }
        if ((expectedPadding > 3 ? expectedPadding - 3 : expectedPadding) === 2) {
          if (char !== 51)
            break;
          ++start;
          --expectedPadding;
          if (start === end)
            break;
          if (!(start < t1))
            return A.ioore(input, start);
          char = input.charCodeAt(start);
        }
        if ((char | 32) !== 100)
          break;
        ++start;
        --expectedPadding;
        if (start === end)
          break;
      }
      if (start !== end)
        throw A.wrapException(A.FormatException$("Invalid padding character", input, start));
      return -expectedPadding - 1;
    },
    _Utf8Decoder_errorDescription(state) {
      switch (state) {
        case 65:
          return "Missing extension byte";
        case 67:
          return "Unexpected extension byte";
        case 69:
          return "Invalid UTF-8 byte";
        case 71:
          return "Overlong encoding";
        case 73:
          return "Out of unicode range";
        case 75:
          return "Encoded surrogate";
        case 77:
          return "Unfinished UTF-8 octet sequence";
        default:
          return "";
      }
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._convert$_data = null;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._convert$_parent = t0;
    },
    _Utf8Decoder__decoder_closure: function _Utf8Decoder__decoder_closure() {
    },
    _Utf8Decoder__decoderNonfatal_closure: function _Utf8Decoder__decoderNonfatal_closure() {
    },
    AsciiCodec: function AsciiCodec() {
    },
    _UnicodeSubsetEncoder: function _UnicodeSubsetEncoder() {
    },
    AsciiEncoder: function AsciiEncoder(t0) {
      this._subsetMask = t0;
    },
    _UnicodeSubsetDecoder: function _UnicodeSubsetDecoder() {
    },
    AsciiDecoder: function AsciiDecoder(t0, t1) {
      this._allowInvalid = t0;
      this._subsetMask = t1;
    },
    Base64Codec: function Base64Codec(t0) {
      this._encoder = t0;
    },
    Base64Encoder: function Base64Encoder(t0) {
      this._urlSafe = t0;
    },
    Base64Decoder: function Base64Decoder() {
    },
    _Base64Decoder: function _Base64Decoder() {
      this._convert$_state = 0;
    },
    Codec: function Codec() {
    },
    _FusedCodec: function _FusedCodec(t0, t1, t2) {
      this._convert$_first = t0;
      this._second = t1;
      this.$ti = t2;
    },
    Converter: function Converter() {
    },
    Encoding: function Encoding() {
    },
    JsonCodec: function JsonCodec() {
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = 0;
      this._convert$_buffer = t0;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0) {
      this.allowMalformed = t0;
      this._convert$_state = 16;
      this._charOrIndex = 0;
    },
    int_parse(source, radix) {
      var value = A.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null, null));
    },
    Error__throw(error, stackTrace) {
      error = A.wrapException(error);
      if (error == null)
        error = type$.Object._as(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
      throw A.wrapException("unreachable");
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, growable, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, $E._as(t1.get$current()));
      if (growable)
        return list;
      return J.JSArray_markFixedList(list, $E);
    },
    List_List$of(elements, growable, $E) {
      var t1;
      if (growable)
        return A.List_List$_of(elements, $E);
      t1 = J.JSArray_markFixedList(A.List_List$_of(elements, $E), $E);
      return t1;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, t1.get$current());
      return list;
    },
    List_List$unmodifiable(elements, $E) {
      var result = A.List_List$from(elements, false, $E);
      result.fixed$length = Array;
      result.immutable$list = Array;
      return result;
    },
    String_String$fromCharCodes(charCodes, start, end) {
      var t1, t2, maxLength, array, len;
      A.RangeError_checkNotNegative(start, "start");
      t1 = end == null;
      t2 = !t1;
      if (t2) {
        maxLength = end - start;
        if (maxLength < 0)
          throw A.wrapException(A.RangeError$range(end, start, null, "end", null));
        if (maxLength === 0)
          return "";
      }
      if (Array.isArray(charCodes)) {
        array = charCodes;
        len = array.length;
        if (t1)
          end = len;
        return A.Primitives_stringFromCharCodes(start > 0 || end < len ? array.slice(start, end) : array);
      }
      if (type$.NativeUint8List._is(charCodes))
        return A.String__stringFromUint8List(charCodes, start, end);
      if (t2)
        charCodes = J.take$1$ax(charCodes, end);
      if (start > 0)
        charCodes = J.skip$1$ax(charCodes, start);
      return A.Primitives_stringFromCharCodes(A.List_List$of(charCodes, true, type$.int));
    },
    String_String$fromCharCode(charCode) {
      return A.Primitives_stringFromCharCode(charCode);
    },
    String__stringFromUint8List(charCodes, start, endOrNull) {
      var len = charCodes.length;
      if (start >= len)
        return "";
      return A.Primitives_stringFromNativeUint8List(charCodes, start, endOrNull == null || endOrNull > len ? len : endOrNull);
    },
    RegExp_RegExp(source, multiLine) {
      return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, multiLine, true, false, false, false));
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current());
      }
      return string;
    },
    Uri_base() {
      var cachedUri, uri,
        current = A.Primitives_currentUri();
      if (current == null)
        throw A.wrapException(A.UnsupportedError$("'Uri.base' is not supported"));
      cachedUri = $.Uri__cachedBaseUri;
      if (cachedUri != null && current === $.Uri__cachedBaseString)
        return cachedUri;
      uri = A.Uri_parse(current);
      $.Uri__cachedBaseUri = uri;
      $.Uri__cachedBaseString = current;
      return uri;
    },
    _Uri__uriEncode(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte, t3,
        _s16_ = "0123456789ABCDEF";
      if (encoding === B.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding();
        t1 = t1._nativeRegExp.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      bytes = B.C_Utf8Encoder.convert$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128) {
          t3 = byte >>> 4;
          if (!(t3 < 8))
            return A.ioore(canonicalTable, t3);
          t3 = (canonicalTable[t3] & 1 << (byte & 15)) !== 0;
        } else
          t3 = false;
        if (t3)
          t2 += A.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    StackTrace_current() {
      return A.getTraceFromException(new Error());
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Primitives_safeToString(object);
    },
    Error_throwWithStackTrace(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      A.checkNotNullable(stackTrace, "stackTrace", type$.StackTrace);
      A.Error__throw(error, stackTrace);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    ArgumentError_checkNotNull(argument, $name, $T) {
      return argument;
    },
    RangeError$(message) {
      var _null = null;
      return new A.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValueInInterval(value, minValue, maxValue, $name) {
      if (value < minValue || value > maxValue)
        throw A.wrapException(A.RangeError$range(value, minValue, maxValue, $name, null));
      return value;
    },
    RangeError_checkValidRange(start, end, $length) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$withLength(invalidValue, $length, indexable, message, $name) {
      return new A.IndexError($length, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    Iterable_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A.isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      B.JSArray_methods.add$1($.toStringVisiting, iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    Iterable_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A.isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      B.JSArray_methods.add$1($.toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current());
        B.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            B.JSArray_methods.add$1(parts, A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          if (0 >= parts.length)
            return A.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return A.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              B.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        B.JSArray_methods.add$1(parts, elision);
      B.JSArray_methods.add$1(parts, penultimateString);
      B.JSArray_methods.add$1(parts, ultimateString);
    },
    Map_castFrom(source, $K, $V, K2, V2) {
      return new A.CastMap(source, $K._eval$1("@<0>")._bind$1($V)._bind$1(K2)._bind$1(V2)._eval$1("CastMap<1,2,3,4>"));
    },
    Object_hash(object1, object2, object3, object4) {
      var t1;
      if (B.C_SentinelValue === object3) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2));
      }
      if (B.C_SentinelValue === object4) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3));
      }
      t1 = J.get$hashCode$(object1);
      object2 = J.get$hashCode$(object2);
      object3 = J.get$hashCode$(object3);
      object4 = J.get$hashCode$(object4);
      object4 = A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4));
      return object4;
    },
    print(object) {
      A.printString(A.S(object));
    },
    Uri_Uri$dataFromString($content) {
      var t1, _null = null,
        buffer = new A.StringBuffer(""),
        indices = A._setArrayType([-1], type$.JSArray_int);
      A.UriData__writeUri(_null, _null, _null, buffer, indices);
      B.JSArray_methods.add$1(indices, buffer._contents.length);
      buffer._contents += ",";
      A.UriData__uriEncodeBytes(B.List_oFp, B.C_AsciiCodec.encode$1($content), buffer);
      t1 = buffer._contents;
      return new A.UriData(t1.charCodeAt(0) == 0 ? t1 : t1, indices, _null).get$uri();
    },
    Uri_parse(uri) {
      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, userInfoStart, userInfo, host, portNumber, port, path, query, _null = null,
        end = uri.length;
      if (end >= 5) {
        if (4 >= end)
          return A.ioore(uri, 4);
        delta = ((uri.charCodeAt(4) ^ 58) * 3 | uri.charCodeAt(0) ^ 100 | uri.charCodeAt(1) ^ 97 | uri.charCodeAt(2) ^ 116 | uri.charCodeAt(3) ^ 97) >>> 0;
        if (delta === 0)
          return A.UriData__parse(end < end ? B.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return A.UriData__parse(B.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      indices = A.List_List$filled(8, 0, false, type$.int);
      B.JSArray_methods.$indexSet(indices, 0, 0);
      B.JSArray_methods.$indexSet(indices, 1, -1);
      B.JSArray_methods.$indexSet(indices, 2, -1);
      B.JSArray_methods.$indexSet(indices, 7, -1);
      B.JSArray_methods.$indexSet(indices, 3, 0);
      B.JSArray_methods.$indexSet(indices, 4, 0);
      B.JSArray_methods.$indexSet(indices, 5, end);
      B.JSArray_methods.$indexSet(indices, 6, end);
      if (A._scan(uri, 0, end, 0, indices) >= 14)
        B.JSArray_methods.$indexSet(indices, 7, end);
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (A._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      if (isSimple)
        if (hostStart > schemeEnd + 3) {
          scheme = _null;
          isSimple = false;
        } else {
          t1 = portStart > 0;
          if (t1 && portStart + 1 === pathStart) {
            scheme = _null;
            isSimple = false;
          } else {
            if (!B.JSString_methods.startsWith$2(uri, "\\", pathStart))
              if (hostStart > 0)
                t2 = B.JSString_methods.startsWith$2(uri, "\\", hostStart - 1) || B.JSString_methods.startsWith$2(uri, "\\", hostStart - 2);
              else
                t2 = false;
            else
              t2 = true;
            if (t2) {
              scheme = _null;
              isSimple = false;
            } else {
              if (!(queryStart < end && queryStart === pathStart + 2 && B.JSString_methods.startsWith$2(uri, "..", pathStart)))
                t2 = queryStart > pathStart + 2 && B.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
              else
                t2 = true;
              if (t2) {
                scheme = _null;
                isSimple = false;
              } else {
                if (schemeEnd === 4)
                  if (B.JSString_methods.startsWith$2(uri, "file", 0)) {
                    if (hostStart <= 0) {
                      if (!B.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                        schemeAuth = "file:///";
                        delta = 3;
                      } else {
                        schemeAuth = "file://";
                        delta = 2;
                      }
                      uri = schemeAuth + B.JSString_methods.substring$2(uri, pathStart, end);
                      schemeEnd -= 0;
                      t1 = delta - 0;
                      queryStart += t1;
                      fragmentStart += t1;
                      end = uri.length;
                      hostStart = 7;
                      portStart = 7;
                      pathStart = 7;
                    } else if (pathStart === queryStart) {
                      ++fragmentStart;
                      queryStart0 = queryStart + 1;
                      uri = B.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                      ++end;
                      queryStart = queryStart0;
                    }
                    scheme = "file";
                  } else if (B.JSString_methods.startsWith$2(uri, "http", 0)) {
                    if (t1 && portStart + 3 === pathStart && B.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                      fragmentStart -= 3;
                      pathStart0 = pathStart - 3;
                      queryStart -= 3;
                      uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                      end -= 3;
                      pathStart = pathStart0;
                    }
                    scheme = "http";
                  } else
                    scheme = _null;
                else if (schemeEnd === 5 && B.JSString_methods.startsWith$2(uri, "https", 0)) {
                  if (t1 && portStart + 4 === pathStart && B.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                    fragmentStart -= 4;
                    pathStart0 = pathStart - 4;
                    queryStart -= 4;
                    uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "https";
                } else
                  scheme = _null;
                isSimple = true;
              }
            }
          }
        }
      else
        scheme = _null;
      if (isSimple) {
        if (end < uri.length) {
          uri = B.JSString_methods.substring$2(uri, 0, end);
          schemeEnd -= 0;
          hostStart -= 0;
          portStart -= 0;
          pathStart -= 0;
          queryStart -= 0;
          fragmentStart -= 0;
        }
        return new A._SimpleUri(uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      }
      if (scheme == null)
        if (schemeEnd > 0)
          scheme = A._Uri__makeScheme(uri, 0, schemeEnd);
        else {
          if (schemeEnd === 0)
            A._Uri__fail(uri, 0, "Invalid empty scheme");
          scheme = "";
        }
      if (hostStart > 0) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.Primitives_parseInt(B.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? A.throwExpression(A.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        } else
          port = _null;
      } else {
        port = _null;
        host = port;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri_decodeComponent(encodedComponent) {
      A._asString(encodedComponent);
      return A._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, B.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address(host, start, end) {
      var t1, i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (t1 = host.length, i = start, partStart = i, partIndex = 0; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(host, i);
        char = host.charCodeAt(i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(B.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          if (!(partIndex < 4))
            return A.ioore(result, partIndex);
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(B.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      if (!(partIndex < 4))
        return A.ioore(result, partIndex);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, last, bytes, wildCardLength, index, value, j, t2, _null = null,
        error = new A.Uri_parseIPv6Address_error(host),
        parseHex = new A.Uri_parseIPv6Address_parseHex(error, host),
        t1 = host.length;
      if (t1 < 2)
        error.call$2("address is too short", _null);
      parts = A._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(host, i);
        char = host.charCodeAt(i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (!(i < t1))
              return A.ioore(host, i);
            if (host.charCodeAt(i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            B.JSArray_methods.add$1(parts, -1);
            wildcardSeen = true;
          } else
            B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      t1 = B.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          B.JSArray_methods.add$1(parts, (last[0] << 8 | last[1]) >>> 0);
          B.JSArray_methods.add$1(parts, (last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            if (!(index >= 0 && index < 16))
              return A.ioore(bytes, index);
            bytes[index] = 0;
            t2 = index + 1;
            if (!(t2 < 16))
              return A.ioore(bytes, t2);
            bytes[t2] = 0;
            index += 2;
          }
        else {
          t2 = B.JSInt_methods._shrOtherPositive$1(value, 8);
          if (!(index >= 0 && index < 16))
            return A.ioore(bytes, index);
          bytes[index] = t2;
          t2 = index + 1;
          if (!(t2 < 16))
            return A.ioore(bytes, t2);
          bytes[t2] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__Uri(host, path, pathSegments, scheme) {
      var userInfo, query, fragment, port, isFile, t1, hasAuthority, t2, _null = null;
      scheme = scheme == null ? "" : A._Uri__makeScheme(scheme, 0, scheme.length);
      userInfo = A._Uri__makeUserInfo(_null, 0, 0);
      host = A._Uri__makeHost(host, 0, host == null ? 0 : host.length, false);
      query = A._Uri__makeQuery(_null, 0, 0, _null);
      fragment = A._Uri__makeFragment(_null, 0, 0);
      port = A._Uri__makePort(_null, scheme);
      isFile = scheme === "file";
      if (host == null)
        t1 = userInfo.length !== 0 || port != null || isFile;
      else
        t1 = false;
      if (t1)
        host = "";
      t1 = host == null;
      hasAuthority = !t1;
      path = A._Uri__makePath(path, 0, path == null ? 0 : path.length, pathSegments, scheme, hasAuthority);
      t2 = scheme.length === 0;
      if (t2 && t1 && !B.JSString_methods.startsWith$1(path, "/"))
        path = A._Uri__normalizeRelativePath(path, !t2 || hasAuthority);
      else
        path = A._Uri__removeDotSegments(path);
      return A._Uri$_internal(scheme, userInfo, t1 && B.JSString_methods.startsWith$1(path, "//") ? "" : host, port, path, query, fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw A.wrapException(A.FormatException$(message, uri, index));
    },
    _Uri__Uri$file(path, windows) {
      return windows ? A._Uri__makeWindowsFileUrl(path, false) : A._Uri__makeFileUri(path, false);
    },
    _Uri__checkNonWindowsPathReservedCharacters(segments, argumentError) {
      var t1, _i, segment, t2, t3;
      for (t1 = segments.length, _i = 0; _i < t1; ++_i) {
        segment = segments[_i];
        t2 = J.getInterceptor$asx(segment);
        t3 = t2.get$length(segment);
        if (0 > t3)
          A.throwExpression(A.RangeError$range(0, 0, t2.get$length(segment), null, null));
        if (A.stringContainsUnchecked(segment, "/", 0)) {
          t1 = A.UnsupportedError$("Illegal path character " + A.S(segment));
          throw A.wrapException(t1);
        }
      }
    },
    _Uri__checkWindowsPathReservedCharacters(segments, argumentError, firstSegment) {
      var t1, t2, t3, t4, t5, _null = null;
      for (t1 = A.SubListIterable$(segments, firstSegment, _null, A._arrayInstanceType(segments)._precomputed1), t2 = t1.$ti, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t4 = A.RegExp_RegExp('["*/:<>?\\\\|]', false);
        t5 = t3.length;
        if (A.stringContainsUnchecked(t3, t4, 0))
          if (argumentError)
            throw A.wrapException(A.ArgumentError$("Illegal character in path", _null));
          else
            throw A.wrapException(A.UnsupportedError$("Illegal character in path: " + t3));
      }
    },
    _Uri__checkWindowsDriveLetter(charCode, argumentError) {
      var t1,
        _s21_ = "Illegal drive letter ";
      if (!(65 <= charCode && charCode <= 90))
        t1 = 97 <= charCode && charCode <= 122;
      else
        t1 = true;
      if (t1)
        return;
      if (argumentError)
        throw A.wrapException(A.ArgumentError$(_s21_ + A.String_String$fromCharCode(charCode), null));
      else
        throw A.wrapException(A.UnsupportedError$(_s21_ + A.String_String$fromCharCode(charCode)));
    },
    _Uri__makeFileUri(path, slashTerminated) {
      var _null = null,
        segments = A._setArrayType(path.split("/"), type$.JSArray_String);
      if (B.JSString_methods.startsWith$1(path, "/"))
        return A._Uri__Uri(_null, _null, segments, "file");
      else
        return A._Uri__Uri(_null, _null, segments, _null);
    },
    _Uri__makeWindowsFileUrl(path, slashTerminated) {
      var t1, pathSegments, pathStart, hostPart, _s1_ = "\\", _null = null, _s4_ = "file";
      if (B.JSString_methods.startsWith$1(path, "\\\\?\\"))
        if (B.JSString_methods.startsWith$2(path, "UNC\\", 4))
          path = B.JSString_methods.replaceRange$3(path, 0, 7, _s1_);
        else {
          path = B.JSString_methods.substring$1(path, 4);
          t1 = path.length;
          if (t1 >= 3) {
            if (1 >= t1)
              return A.ioore(path, 1);
            if (path.charCodeAt(1) === 58) {
              if (2 >= t1)
                return A.ioore(path, 2);
              t1 = path.charCodeAt(2) !== 92;
            } else
              t1 = true;
          } else
            t1 = true;
          if (t1)
            throw A.wrapException(A.ArgumentError$value(path, "path", "Windows paths with \\\\?\\ prefix must be absolute"));
        }
      else
        path = A.stringReplaceAllUnchecked(path, "/", _s1_);
      t1 = path.length;
      if (t1 > 1 && path.charCodeAt(1) === 58) {
        if (0 >= t1)
          return A.ioore(path, 0);
        A._Uri__checkWindowsDriveLetter(path.charCodeAt(0), true);
        if (t1 !== 2) {
          if (2 >= t1)
            return A.ioore(path, 2);
          t1 = path.charCodeAt(2) !== 92;
        } else
          t1 = true;
        if (t1)
          throw A.wrapException(A.ArgumentError$value(path, "path", "Windows paths with drive letter must be absolute"));
        pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
        A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 1);
        return A._Uri__Uri(_null, _null, pathSegments, _s4_);
      }
      if (B.JSString_methods.startsWith$1(path, _s1_))
        if (B.JSString_methods.startsWith$2(path, _s1_, 1)) {
          pathStart = B.JSString_methods.indexOf$2(path, _s1_, 2);
          t1 = pathStart < 0;
          hostPart = t1 ? B.JSString_methods.substring$1(path, 2) : B.JSString_methods.substring$2(path, 2, pathStart);
          pathSegments = A._setArrayType((t1 ? "" : B.JSString_methods.substring$1(path, pathStart + 1)).split(_s1_), type$.JSArray_String);
          A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
          return A._Uri__Uri(hostPart, _null, pathSegments, _s4_);
        } else {
          pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
          A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
          return A._Uri__Uri(_null, _null, pathSegments, _s4_);
        }
      else {
        pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
        A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
        return A._Uri__Uri(_null, _null, pathSegments, _null);
      }
    },
    _Uri__makePort(port, scheme) {
      if (port != null && port === A._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (host == null)
        return null;
      if (start === end)
        return "";
      t1 = host.length;
      if (!(start >= 0 && start < t1))
        return A.ioore(host, start);
      if (host.charCodeAt(start) === 91) {
        t2 = end - 1;
        if (!(t2 >= 0 && t2 < t1))
          return A.ioore(host, t2);
        if (host.charCodeAt(t2) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t1 = start + 1;
        index = A._Uri__checkZoneID(host, t1, t2);
        if (index < t2) {
          zoneIDstart = index + 1;
          zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t2, "%25");
        } else
          zoneID = "";
        A.Uri_parseIPv6Address(host, t1, index);
        return B.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + "]";
      }
      for (i = start; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(host, i);
        if (host.charCodeAt(i) === 58) {
          index = B.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          A.Uri_parseIPv6Address(host, start, index);
          return "[" + B.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = B.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var t1, index, sectionStart, isNormalized, char, replacement, t2, t3, tail, sourceLength, slice,
        buffer = prefix !== "" ? new A.StringBuffer(prefix) : null;
      for (t1 = host.length, index = start, sectionStart = index, isNormalized = true; index < end;) {
        if (!(index >= 0 && index < t1))
          return A.ioore(host, index);
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t2 = replacement == null;
          if (t2 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          t3 = buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
          if (t2)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t3 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else {
          if (char < 127) {
            t2 = char >>> 4;
            if (!(t2 < 8))
              return A.ioore(B.List_M1A, t2);
            t2 = (B.List_M1A[t2] & 1 << (char & 15)) !== 0;
          } else
            t2 = false;
          if (t2) {
            if (isNormalized && 65 <= char && 90 >= char) {
              if (buffer == null)
                buffer = new A.StringBuffer("");
              if (sectionStart < index) {
                buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
                sectionStart = index;
              }
              isNormalized = false;
            }
            ++index;
          } else {
            if ((char & 64512) === 55296 && index + 1 < end) {
              t2 = index + 1;
              if (!(t2 < t1))
                return A.ioore(host, t2);
              tail = host.charCodeAt(t2);
              if ((tail & 64512) === 56320) {
                char = (char & 1023) << 10 | tail & 1023 | 65536;
                sourceLength = 2;
              } else
                sourceLength = 1;
            } else
              sourceLength = 1;
            slice = B.JSString_methods.substring$2(host, sectionStart, index);
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t2 = buffer;
            } else
              t2 = buffer;
            t2._contents += slice;
            t2._contents += A._Uri__escapeChar(char);
            index += sourceLength;
            sectionStart = index;
          }
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end)
        buffer._contents += B.JSString_methods.substring$2(host, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var t1, index, sectionStart, buffer, isNormalized, char, replacement, t2, slice, t3, sourceLength, tail;
      for (t1 = host.length, index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        if (!(index >= 0 && index < t1))
          return A.ioore(host, index);
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t2 = replacement == null;
          if (t2 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          t3 = buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          if (t2) {
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
            sourceLength = 3;
          } else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          } else
            sourceLength = 3;
          buffer._contents = t3 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else {
          if (char < 127) {
            t2 = char >>> 4;
            if (!(t2 < 8))
              return A.ioore(B.List_ejq, t2);
            t2 = (B.List_ejq[t2] & 1 << (char & 15)) !== 0;
          } else
            t2 = false;
          if (t2) {
            if (isNormalized && 65 <= char && 90 >= char) {
              if (buffer == null)
                buffer = new A.StringBuffer("");
              if (sectionStart < index) {
                buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
                sectionStart = index;
              }
              isNormalized = false;
            }
            ++index;
          } else {
            if (char <= 93) {
              t2 = char >>> 4;
              if (!(t2 < 8))
                return A.ioore(B.List_YmH, t2);
              t2 = (B.List_YmH[t2] & 1 << (char & 15)) !== 0;
            } else
              t2 = false;
            if (t2)
              A._Uri__fail(host, index, "Invalid character");
            else {
              if ((char & 64512) === 55296 && index + 1 < end) {
                t2 = index + 1;
                if (!(t2 < t1))
                  return A.ioore(host, t2);
                tail = host.charCodeAt(t2);
                if ((tail & 64512) === 56320) {
                  char = (char & 1023) << 10 | tail & 1023 | 65536;
                  sourceLength = 2;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
              slice = B.JSString_methods.substring$2(host, sectionStart, index);
              if (!isNormalized)
                slice = slice.toLowerCase();
              if (buffer == null) {
                buffer = new A.StringBuffer("");
                t2 = buffer;
              } else
                t2 = buffer;
              t2._contents += slice;
              t2._contents += A._Uri__escapeChar(char);
              index += sourceLength;
              sectionStart = index;
            }
          }
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme(scheme, start, end) {
      var t1, i, containsUpperCase, codeUnit, t2;
      if (start === end)
        return "";
      t1 = scheme.length;
      if (!(start < t1))
        return A.ioore(scheme, start);
      if (!A._Uri__isAlphabeticCharacter(scheme.charCodeAt(start)))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(scheme, i);
        codeUnit = scheme.charCodeAt(i);
        if (codeUnit < 128) {
          t2 = codeUnit >>> 4;
          if (!(t2 < 8))
            return A.ioore(B.List_MMm, t2);
          t2 = (B.List_MMm[t2] & 1 << (codeUnit & 15)) !== 0;
        } else
          t2 = false;
        if (!t2)
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = B.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      if (userInfo == null)
        return "";
      return A._Uri__normalizeOrSubstring(userInfo, start, end, B.List_OL3, false, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var t1, result,
        isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority;
      if (path == null) {
        if (pathSegments == null)
          return isFile ? "/" : "";
        t1 = A._arrayInstanceType(pathSegments);
        result = new A.MappedListIterable(pathSegments, t1._eval$1("String(1)")._as(new A._Uri__makePath_closure()), t1._eval$1("MappedListIterable<1,String>")).join$1(0, "/");
      } else if (pathSegments != null)
        throw A.wrapException(A.ArgumentError$("Both path and pathSegments specified", null));
      else
        result = A._Uri__normalizeOrSubstring(path, start, end, B.List_XRg, true, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !B.JSString_methods.startsWith$1(path, "/") && !B.JSString_methods.startsWith$1(path, "\\"))
        return A._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      if (query != null)
        return A._Uri__normalizeOrSubstring(query, start, end, B.List_oFp, true, false);
      return null;
    },
    _Uri__makeFragment(fragment, start, end) {
      if (fragment == null)
        return null;
      return A._Uri__normalizeOrSubstring(fragment, start, end, B.List_oFp, true, false);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var t3, firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2,
        t2 = source.length;
      if (t1 >= t2)
        return "%";
      t3 = index + 1;
      if (!(t3 >= 0 && t3 < t2))
        return A.ioore(source, t3);
      firstDigit = source.charCodeAt(t3);
      if (!(t1 >= 0))
        return A.ioore(source, t1);
      secondDigit = source.charCodeAt(t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127) {
        t1 = B.JSInt_methods._shrOtherPositive$1(value, 4);
        if (!(t1 < 8))
          return A.ioore(B.List_M1A, t1);
        t1 = (B.List_M1A[t1] & 1 << (value & 15)) !== 0;
      } else
        t1 = false;
      if (t1)
        return A.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return B.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, t1, flag, encodedBytes, index, byte, t2, t3,
        _s16_ = "0123456789ABCDEF";
      if (char < 128) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        t1 = char >>> 4;
        if (!(t1 < 16))
          return A.ioore(_s16_, t1);
        codeUnits[1] = _s16_.charCodeAt(t1);
        codeUnits[2] = _s16_.charCodeAt(char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        t1 = 3 * encodedBytes;
        codeUnits = new Uint8Array(t1);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = B.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          if (!(index < t1))
            return A.ioore(codeUnits, index);
          codeUnits[index] = 37;
          t2 = index + 1;
          t3 = byte >>> 4;
          if (!(t3 < 16))
            return A.ioore(_s16_, t3);
          if (!(t2 < t1))
            return A.ioore(codeUnits, t2);
          codeUnits[t2] = _s16_.charCodeAt(t3);
          t3 = index + 2;
          if (!(t3 < t1))
            return A.ioore(codeUnits, t3);
          codeUnits[t3] = _s16_.charCodeAt(byte & 15);
          index += 3;
        }
      }
      return A.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1 = A._Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash);
      return t1 == null ? B.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1, t2, index, sectionStart, buffer, char, t3, replacement, sourceLength, tail, t4, _null = null;
      for (t1 = !escapeDelimiters, t2 = component.length, index = start, sectionStart = index, buffer = _null; index < end;) {
        if (!(index >= 0 && index < t2))
          return A.ioore(component, index);
        char = component.charCodeAt(index);
        if (char < 127) {
          t3 = char >>> 4;
          if (!(t3 < 8))
            return A.ioore(charTable, t3);
          t3 = (charTable[t3] & 1 << (char & 15)) !== 0;
        } else
          t3 = false;
        if (t3)
          ++index;
        else {
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement) {
              replacement = "%25";
              sourceLength = 1;
            } else
              sourceLength = 3;
          } else if (char === 92 && replaceBackslash) {
            replacement = "/";
            sourceLength = 1;
          } else {
            if (t1)
              if (char <= 93) {
                t3 = char >>> 4;
                if (!(t3 < 8))
                  return A.ioore(B.List_YmH, t3);
                t3 = (B.List_YmH[t3] & 1 << (char & 15)) !== 0;
              } else
                t3 = false;
            else
              t3 = false;
            if (t3) {
              A._Uri__fail(component, index, "Invalid character");
              sourceLength = _null;
              replacement = sourceLength;
            } else {
              if ((char & 64512) === 55296) {
                t3 = index + 1;
                if (t3 < end) {
                  if (!(t3 < t2))
                    return A.ioore(component, t3);
                  tail = component.charCodeAt(t3);
                  if ((tail & 64512) === 56320) {
                    char = (char & 1023) << 10 | tail & 1023 | 65536;
                    sourceLength = 2;
                  } else
                    sourceLength = 1;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
              replacement = A._Uri__escapeChar(char);
            }
          }
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t3 = buffer;
          } else
            t3 = buffer;
          t4 = t3._contents += B.JSString_methods.substring$2(component, sectionStart, index);
          t3._contents = t4 + A.S(replacement);
          if (typeof sourceLength !== "number")
            return A.iae(sourceLength);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end)
        buffer._contents += B.JSString_methods.substring$2(component, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.JSString_methods.startsWith$1(path, "."))
        return true;
      return B.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var output, t1, t2, appendSlash, _i, segment, t3;
      if (!A._Uri__mayContainDotSegments(path))
        return path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (J.$eq$(segment, "..")) {
          t3 = output.length;
          if (t3 !== 0) {
            if (0 >= t3)
              return A.ioore(output, -1);
            output.pop();
            if (output.length === 0)
              B.JSArray_methods.add$1(output, "");
          }
          appendSlash = true;
        } else if ("." === segment)
          appendSlash = true;
        else {
          B.JSArray_methods.add$1(output, segment);
          appendSlash = false;
        }
      }
      if (appendSlash)
        B.JSArray_methods.add$1(output, "");
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment)
          if (output.length !== 0 && B.JSArray_methods.get$last(output) !== "..") {
            if (0 >= output.length)
              return A.ioore(output, -1);
            output.pop();
            appendSlash = true;
          } else {
            B.JSArray_methods.add$1(output, "..");
            appendSlash = false;
          }
        else if ("." === segment)
          appendSlash = true;
        else {
          B.JSArray_methods.add$1(output, segment);
          appendSlash = false;
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        if (t1 === 1) {
          if (0 >= t1)
            return A.ioore(output, 0);
          t1 = output[0].length === 0;
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.JSArray_methods.get$last(output) === "..")
        B.JSArray_methods.add$1(output, "");
      if (!allowScheme) {
        if (0 >= output.length)
          return A.ioore(output, 0);
        B.JSArray_methods.$indexSet(output, 0, A._Uri__escapeScheme(output[0]));
      }
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char, t2,
        t1 = path.length;
      if (t1 >= 2 && A._Uri__isAlphabeticCharacter(path.charCodeAt(0)))
        for (i = 1; i < t1; ++i) {
          char = path.charCodeAt(i);
          if (char === 58)
            return B.JSString_methods.substring$2(path, 0, i) + "%3A" + B.JSString_methods.substring$1(path, i + 1);
          if (char <= 127) {
            t2 = char >>> 4;
            if (!(t2 < 8))
              return A.ioore(B.List_MMm, t2);
            t2 = (B.List_MMm[t2] & 1 << (char & 15)) === 0;
          } else
            t2 = true;
          if (t2)
            break;
        }
      return path;
    },
    _Uri__packageNameEnd(uri, path) {
      if (uri.isScheme$1("package") && uri._host == null)
        return A._skipPackageNameChars(path, 0, path.length);
      return -1;
    },
    _Uri__toWindowsFilePath(uri) {
      var hasDriveLetter, t2, host,
        segments = uri.get$pathSegments(),
        t1 = segments.length;
      if (t1 > 0 && J.get$length$asx(segments[0]) === 2 && J.codeUnitAt$1$s(segments[0], 1) === 58) {
        if (0 >= t1)
          return A.ioore(segments, 0);
        A._Uri__checkWindowsDriveLetter(J.codeUnitAt$1$s(segments[0], 0), false);
        A._Uri__checkWindowsPathReservedCharacters(segments, false, 1);
        hasDriveLetter = true;
      } else {
        A._Uri__checkWindowsPathReservedCharacters(segments, false, 0);
        hasDriveLetter = false;
      }
      t2 = uri.get$hasAbsolutePath() && !hasDriveLetter ? "" + "\\" : "";
      if (uri.get$hasAuthority()) {
        host = uri.get$host(uri);
        if (host.length !== 0)
          t2 = t2 + "\\" + host + "\\";
      }
      t2 = A.StringBuffer__writeAll(t2, segments, "\\");
      t1 = hasDriveLetter && t1 === 1 ? t2 + "\\" : t2;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__hexCharPairToByte(s, pos) {
      var t1, byte, i, t2, charCode;
      for (t1 = s.length, byte = 0, i = 0; i < 2; ++i) {
        t2 = pos + i;
        if (!(t2 < t1))
          return A.ioore(s, t2);
        charCode = s.charCodeAt(t2);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw A.wrapException(A.ArgumentError$("Invalid URL encoding", null));
        }
      }
      return byte;
    },
    _Uri__uriDecode(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t2, bytes,
        t1 = text.length,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        if (!(i < t1))
          return A.ioore(text, i);
        codeUnit = text.charCodeAt(i);
        if (codeUnit <= 127)
          if (codeUnit !== 37)
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple) {
        if (B.C_Utf8Codec !== encoding)
          t1 = false;
        else
          t1 = true;
        if (t1)
          return B.JSString_methods.substring$2(text, start, end);
        else
          bytes = new A.CodeUnits(B.JSString_methods.substring$2(text, start, end));
      } else {
        bytes = A._setArrayType([], type$.JSArray_int);
        for (i = start; i < end; ++i) {
          if (!(i < t1))
            return A.ioore(text, i);
          codeUnit = text.charCodeAt(i);
          if (codeUnit > 127)
            throw A.wrapException(A.ArgumentError$("Illegal percent encoding in URI", null));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw A.wrapException(A.ArgumentError$("Truncated URI", null));
            B.JSArray_methods.add$1(bytes, A._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else
            B.JSArray_methods.add$1(bytes, codeUnit);
        }
      }
      return encoding.decode$1(0, bytes);
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__writeUri(mimeType, charsetName, parameters, buffer, indices) {
      var slashIndex, t1;
      if (true)
        buffer._contents = buffer._contents;
      else {
        slashIndex = A.UriData__validateMimeType("");
        if (slashIndex < 0)
          throw A.wrapException(A.ArgumentError$value("", "mimeType", "Invalid MIME type"));
        t1 = buffer._contents += A._Uri__uriEncode(B.List_yzX, B.JSString_methods.substring$2("", 0, slashIndex), B.C_Utf8Codec, false);
        buffer._contents = t1 + "/";
        buffer._contents += A._Uri__uriEncode(B.List_yzX, B.JSString_methods.substring$1("", slashIndex + 1), B.C_Utf8Codec, false);
      }
    },
    UriData__validateMimeType(mimeType) {
      var t1, slashIndex, i;
      for (t1 = mimeType.length, slashIndex = -1, i = 0; i < t1; ++i) {
        if (mimeType.charCodeAt(i) !== 47)
          continue;
        if (slashIndex < 0) {
          slashIndex = i;
          continue;
        }
        return -1;
      }
      return slashIndex;
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = A._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = text.charCodeAt(i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw A.wrapException(A.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw A.wrapException(A.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        B.JSArray_methods.add$1(indices, i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          if (!(i >= 0))
            return A.ioore(text, i);
          char = text.charCodeAt(i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          B.JSArray_methods.add$1(indices, equalsIndex);
        else {
          lastSeparator = B.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw A.wrapException(A.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      B.JSArray_methods.add$1(indices, i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = B.Base64Codec_Base64Encoder_false.normalize$3(text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, B.List_oFp, true, false);
        if (data != null)
          text = B.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new A.UriData(text, indices, sourceUri);
    },
    UriData__uriEncodeBytes(canonicalTable, bytes, buffer) {
      var t1, byteOr, i, byte, t2,
        _s16_ = "0123456789ABCDEF";
      for (t1 = bytes.length, byteOr = 0, i = 0; i < t1; ++i) {
        byte = bytes[i];
        byteOr |= byte;
        if (byte < 128) {
          t2 = byte >>> 4;
          if (!(t2 < 8))
            return A.ioore(canonicalTable, t2);
          t2 = (canonicalTable[t2] & 1 << (byte & 15)) !== 0;
        } else
          t2 = false;
        if (t2)
          buffer._contents += A.Primitives_stringFromCharCode(byte);
        else {
          buffer._contents += A.Primitives_stringFromCharCode(37);
          t2 = byte >>> 4;
          if (!(t2 < 16))
            return A.ioore(_s16_, t2);
          buffer._contents += A.Primitives_stringFromCharCode(_s16_.charCodeAt(t2));
          buffer._contents += A.Primitives_stringFromCharCode(_s16_.charCodeAt(byte & 15));
        }
      }
      if ((byteOr & 4294967040) !== 0)
        for (i = 0; i < t1; ++i) {
          byte = bytes[i];
          if (byte > 255)
            throw A.wrapException(A.ArgumentError$value(byte, "non-byte value", null));
        }
    },
    _createTables() {
      var _i, t1, t2, t3, b,
        _s77_ = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=",
        _s1_ = ".", _s1_0 = ":", _s1_1 = "/", _s1_2 = "\\", _s1_3 = "?", _s1_4 = "#", _s2_ = "/\\",
        tables = J.JSArray_JSArray$allocateGrowable(22, type$.Uint8List);
      for (_i = 0; _i < 22; ++_i)
        tables[_i] = new Uint8Array(96);
      t1 = new A._createTables_build(tables);
      t2 = new A._createTables_setChars();
      t3 = new A._createTables_setRange();
      b = t1.call$2(0, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 14);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 3);
      t2.call$3(b, _s1_2, 227);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(14, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 15);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(15, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, "%", 225);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(1, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(2, 235);
      t2.call$3(b, _s77_, 139);
      t2.call$3(b, _s1_1, 131);
      t2.call$3(b, _s1_2, 131);
      t2.call$3(b, _s1_, 146);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(3, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 68);
      t2.call$3(b, _s1_2, 68);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(4, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "[", 232);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(5, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(6, 231);
      t3.call$3(b, "19", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(7, 231);
      t3.call$3(b, "09", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      t2.call$3(t1.call$2(8, 8), "]", 5);
      b = t1.call$2(9, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 16);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(16, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 17);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(17, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(10, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(18, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 19);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(19, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(11, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(12, 236);
      t2.call$3(b, _s77_, 12);
      t2.call$3(b, _s1_3, 12);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(13, 237);
      t2.call$3(b, _s77_, 13);
      t2.call$3(b, _s1_3, 13);
      t3.call$3(t1.call$2(20, 245), "az", 21);
      b = t1.call$2(21, 245);
      t3.call$3(b, "az", 21);
      t3.call$3(b, "09", 21);
      t2.call$3(b, "+-.", 21);
      return tables;
    },
    _scan(uri, start, end, state, indices) {
      var t1, i, table, char, transition,
        tables = $.$get$_scannerTables();
      for (t1 = uri.length, i = start; i < end; ++i) {
        if (!(state >= 0 && state < tables.length))
          return A.ioore(tables, state);
        table = tables[state];
        if (!(i < t1))
          return A.ioore(uri, i);
        char = uri.charCodeAt(i) ^ 96;
        transition = table[char > 95 ? 31 : char];
        state = transition & 31;
        B.JSArray_methods.$indexSet(indices, transition >>> 5, i);
      }
      return state;
    },
    _SimpleUri__packageNameEnd(uri) {
      if (uri._schemeEnd === 7 && B.JSString_methods.startsWith$1(uri._uri, "package") && uri._hostStart <= 0)
        return A._skipPackageNameChars(uri._uri, uri._pathStart, uri._queryStart);
      return -1;
    },
    _skipPackageNameChars(source, start, end) {
      var t1, i, dots, char;
      for (t1 = source.length, i = start, dots = 0; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(source, i);
        char = source.charCodeAt(i);
        if (char === 47)
          return dots !== 0 ? i : -1;
        if (char === 37 || char === 58)
          return -1;
        dots |= char ^ 46;
      }
      return -1;
    },
    _caseInsensitiveCompareStart(prefix, string, start) {
      var t1, t2, result, i, t3, stringChar, delta, lowerChar;
      for (t1 = prefix.length, t2 = string.length, result = 0, i = 0; i < t1; ++i) {
        t3 = start + i;
        if (!(t3 < t2))
          return A.ioore(string, t3);
        stringChar = string.charCodeAt(t3);
        delta = prefix.charCodeAt(i) ^ stringChar;
        if (delta !== 0) {
          if (delta === 32) {
            lowerChar = stringChar | delta;
            if (97 <= lowerChar && lowerChar <= 122) {
              result = 32;
              continue;
            }
          }
          return -1;
        }
      }
      return result;
    },
    DateTime: function DateTime(t0, t1) {
      this._core$_value = t0;
      this.isUtc = t1;
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    _Enum: function _Enum() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Iterable: function Iterable() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace(t0) {
      this._stackTrace = t0;
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    _Uri__makePath_closure: function _Uri__makePath_closure() {
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _createTables_build: function _createTables_build(t0) {
      this.tables = t0;
    },
    _createTables_setChars: function _createTables_setChars() {
    },
    _createTables_setRange: function _createTables_setRange() {
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    _EventStreamSubscription$(_target, _eventType, onData, _useCapture, $T) {
      var t1 = A._wrapZone(new A._EventStreamSubscription_closure(onData), type$.Event),
        t2 = t1 != null;
      if (t2 && true) {
        type$.nullable_dynamic_Function_Event._as(t1);
        if (t2)
          J._addEventListener$3$x(_target, _eventType, t1, false);
      }
      return new A._EventStreamSubscription(_target, _eventType, t1, false, $T._eval$1("_EventStreamSubscription<0>"));
    },
    _convertNativeToDart_EventTarget(e) {
      var $window,
        t1 = "postMessage" in e;
      t1.toString;
      if (t1) {
        $window = A._DOMWindowCrossFrame__createSafe(e);
        return $window;
      } else
        return type$.nullable_EventTarget._as(e);
    },
    _DOMWindowCrossFrame__createSafe(w) {
      var t1 = window;
      t1.toString;
      if (w === t1)
        return type$.WindowBase._as(w);
      else
        return new A._DOMWindowCrossFrame();
    },
    _wrapZone(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    HtmlElement: function HtmlElement() {
    },
    AnchorElement: function AnchorElement() {
    },
    AreaElement: function AreaElement() {
    },
    Blob: function Blob() {
    },
    CharacterData: function CharacterData() {
    },
    DomException: function DomException() {
    },
    _FrozenElementList: function _FrozenElementList(t0, t1) {
      this._nodeList = t0;
      this.$ti = t1;
    },
    Element1: function Element1() {
    },
    Event: function Event() {
    },
    Events: function Events() {
    },
    ElementEvents: function ElementEvents(t0) {
      this._ptr = t0;
    },
    EventTarget: function EventTarget() {
    },
    File: function File() {
    },
    FileList: function FileList() {
    },
    FormElement: function FormElement() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    InputElement: function InputElement() {
    },
    Location: function Location() {
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0) {
      this._this = t0;
    },
    Node0: function Node0() {
    },
    NodeList0: function NodeList0() {
    },
    OptionElement: function OptionElement() {
    },
    SelectElement: function SelectElement() {
    },
    SelectElement_selectedOptions_closure: function SelectElement_selectedOptions_closure() {
    },
    Text1: function Text1() {
    },
    TextAreaElement: function TextAreaElement() {
    },
    Window: function Window() {
    },
    _Attr: function _Attr() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _ElementAttributeMap: function _ElementAttributeMap(t0) {
      this._element = t0;
    },
    _EventStream: function _EventStream() {
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._length = t1;
      _._position = -1;
      _._current = null;
      _.$ti = t2;
    },
    _DOMWindowCrossFrame: function _DOMWindowCrossFrame() {
    },
    _FileList_JavaScriptObject_ListMixin: function _FileList_JavaScriptObject_ListMixin() {
    },
    _FileList_JavaScriptObject_ListMixin_ImmutableListMixin: function _FileList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin: function _HtmlCollection_JavaScriptObject_ListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin: function _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin: function _NodeList_JavaScriptObject_ListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    VersionChangeEvent: function VersionChangeEvent() {
    },
    promiseToFuture(jsPromise, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new A._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(A.convertDartClosureToJS(new A.promiseToFuture_closure(completer, $T), 1), A.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    BinaryCodec: function BinaryCodec() {
    },
    Decoder: function Decoder() {
    },
    ByteReader: function ByteReader(t0) {
      this._byte_reader$_data = t0;
      this._byte_reader$_index = 0;
    },
    Document$() {
      return new A.Document(A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String));
    },
    DocumentType$($name, publicId, systemId) {
      return new A.DocumentType($name, publicId, systemId, A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String));
    },
    Text$(data) {
      return new A.Text0(data, A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String));
    },
    Element$_(localName, namespaceUri) {
      return new A.Element0(namespaceUri, localName, A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String));
    },
    Comment$(data) {
      return new A.Comment(data, A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String));
    },
    AttributeName: function AttributeName(t0, t1, t2) {
      this.prefix = t0;
      this.name = t1;
      this.namespace = t2;
    },
    _ParentNode: function _ParentNode() {
    },
    _NonElementParentNode: function _NonElementParentNode() {
    },
    _ElementAndDocument: function _ElementAndDocument() {
    },
    Node: function Node() {
    },
    Document: function Document(t0) {
      var _ = this;
      _.parentNode = null;
      _.attributes = t0;
      _.__Node_children_FI = _.__Node_nodes_FI = $;
      _.sourceSpan = null;
    },
    DocumentType: function DocumentType(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.publicId = t1;
      _.systemId = t2;
      _.parentNode = null;
      _.attributes = t3;
      _.__Node_children_FI = _.__Node_nodes_FI = $;
      _.sourceSpan = null;
    },
    Text0: function Text0(t0, t1) {
      var _ = this;
      _._data = t0;
      _.parentNode = null;
      _.attributes = t1;
      _.__Node_children_FI = _.__Node_nodes_FI = $;
      _.sourceSpan = null;
    },
    Element0: function Element0(t0, t1, t2) {
      var _ = this;
      _.namespaceUri = t0;
      _.localName = t1;
      _.parentNode = null;
      _.attributes = t2;
      _.__Node_children_FI = _.__Node_nodes_FI = $;
      _.sourceSpan = null;
    },
    Comment: function Comment(t0, t1) {
      var _ = this;
      _.data = t0;
      _.parentNode = null;
      _.attributes = t1;
      _.__Node_children_FI = _.__Node_nodes_FI = $;
      _.sourceSpan = null;
    },
    NodeList: function NodeList(t0, t1) {
      this._dom$_parent = t0;
      this._list_proxy$_list = t1;
    },
    FilteredElementList: function FilteredElementList(t0) {
      this._childNodes = t0;
    },
    FilteredElementList_removeRange_closure: function FilteredElementList_removeRange_closure() {
    },
    _ConcatTextVisitor: function _ConcatTextVisitor(t0) {
      this._str = t0;
    },
    _Document_Node__ParentNode: function _Document_Node__ParentNode() {
    },
    _Document_Node__ParentNode__NonElementParentNode: function _Document_Node__ParentNode__NonElementParentNode() {
    },
    _Document_Node__ParentNode__NonElementParentNode__ElementAndDocument: function _Document_Node__ParentNode__NonElementParentNode__ElementAndDocument() {
    },
    _Element_Node__ParentNode: function _Element_Node__ParentNode() {
    },
    _Element_Node__ParentNode__ElementAndDocument: function _Element_Node__ParentNode__ElementAndDocument() {
    },
    _FilteredElementList_IterableBase_ListMixin: function _FilteredElementList_IterableBase_ListMixin() {
    },
    TreeVisitor: function TreeVisitor() {
    },
    HtmlParser: function HtmlParser(t0, t1, t2, t3) {
      var _ = this;
      _.generateSpans = t0;
      _.tokenizer = t1;
      _.tree = t2;
      _.errors = t3;
      _.firstStartTag = false;
      _.compatMode = "no quirks";
      _.innerHTML = null;
      _.__HtmlParser_phase_AI = $;
      _.originalPhase = null;
      _.framesetOK = true;
      _.__HtmlParser__afterAfterFramesetPhase_FI = _.__HtmlParser__afterAfterBodyPhase_FI = _.__HtmlParser__afterFramesetPhase_FI = _.__HtmlParser__inFramesetPhase_FI = _.__HtmlParser__afterBodyPhase_FI = _.__HtmlParser__inForeignContentPhase_FI = _.__HtmlParser__inSelectInTablePhase_FI = _.__HtmlParser__inSelectPhase_FI = _.__HtmlParser__inCellPhase_FI = _.__HtmlParser__inRowPhase_FI = _.__HtmlParser__inTableBodyPhase_FI = _.__HtmlParser__inColumnGroupPhase_FI = _.__HtmlParser__inCaptionPhase_FI = _.__HtmlParser__inTableTextPhase_FI = _.__HtmlParser__inTablePhase_FI = _.__HtmlParser__textPhase_FI = _.__HtmlParser__inBodyPhase_FI = _.__HtmlParser__afterHeadPhase_FI = _.__HtmlParser__inHeadPhase_FI = _.__HtmlParser__beforeHeadPhase_FI = _.__HtmlParser__beforeHtmlPhase_FI = _.__HtmlParser__initialPhase_FI = $;
    },
    Phase: function Phase() {
    },
    Phase_startTagHtml_closure: function Phase_startTagHtml_closure(t0) {
      this.$this = t0;
    },
    Phase_startTagHtml__closure: function Phase_startTagHtml__closure(t0) {
      this.value = t0;
    },
    InitialPhase: function InitialPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    BeforeHtmlPhase: function BeforeHtmlPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    BeforeHeadPhase: function BeforeHeadPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InHeadPhase: function InHeadPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    AfterHeadPhase: function AfterHeadPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InBodyPhase: function InBodyPhase(t0, t1) {
      this.dropNewline = false;
      this.parser = t0;
      this.tree = t1;
    },
    InBodyPhase_startTagBody_closure: function InBodyPhase_startTagBody_closure(t0) {
      this.$this = t0;
    },
    InBodyPhase_startTagBody__closure: function InBodyPhase_startTagBody__closure(t0) {
      this.value = t0;
    },
    TextPhase: function TextPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InTablePhase: function InTablePhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InTableTextPhase: function InTableTextPhase(t0, t1, t2) {
      var _ = this;
      _.originalPhase = null;
      _.characterTokens = t0;
      _.parser = t1;
      _.tree = t2;
    },
    InTableTextPhase_flushCharacters_closure: function InTableTextPhase_flushCharacters_closure() {
    },
    InCaptionPhase: function InCaptionPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InColumnGroupPhase: function InColumnGroupPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InTableBodyPhase: function InTableBodyPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InRowPhase: function InRowPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InCellPhase: function InCellPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InSelectPhase: function InSelectPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InSelectInTablePhase: function InSelectInTablePhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InForeignContentPhase: function InForeignContentPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    AfterBodyPhase: function AfterBodyPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    InFramesetPhase: function InFramesetPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    AfterFramesetPhase: function AfterFramesetPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    AfterAfterBodyPhase: function AfterAfterBodyPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    AfterAfterFramesetPhase: function AfterAfterFramesetPhase(t0, t1) {
      this.parser = t0;
      this.tree = t1;
    },
    ParseError: function ParseError(t0, t1, t2) {
      this.errorCode = t0;
      this.span = t1;
      this.data = t2;
    },
    Namespaces_getPrefix(url) {
      switch (url) {
        case "http://www.w3.org/1999/xhtml":
          return "html";
        case "http://www.w3.org/1998/Math/MathML":
          return "math";
        case "http://www.w3.org/2000/svg":
          return "svg";
        case "http://www.w3.org/1999/xlink":
          return "xlink";
        case "http://www.w3.org/XML/1998/namespace":
          return "xml";
        case "http://www.w3.org/2000/xmlns/":
          return "xmlns";
        default:
          return null;
      }
    },
    isWhitespace(char) {
      A._asStringQ(char);
      if (char == null)
        return false;
      if (0 >= char.length)
        return A.ioore(char, 0);
      return A.isWhitespaceCC(char.charCodeAt(0));
    },
    isWhitespaceCC(charCode) {
      switch (charCode) {
        case 9:
        case 10:
        case 12:
        case 13:
        case 32:
          return true;
      }
      return false;
    },
    isLetter(char) {
      var cc, t1;
      if (char == null)
        return false;
      if (0 >= char.length)
        return A.ioore(char, 0);
      cc = char.charCodeAt(0);
      if (!(cc >= 97 && cc <= 122))
        t1 = cc >= 65 && cc <= 90;
      else
        t1 = true;
      return t1;
    },
    isDigit(char) {
      var cc;
      if (char == null)
        return false;
      if (0 >= char.length)
        return A.ioore(char, 0);
      cc = char.charCodeAt(0);
      return cc >= 48 && cc < 58;
    },
    isHexDigit(char) {
      if (char == null)
        return false;
      if (0 >= char.length)
        return A.ioore(char, 0);
      switch (char.charCodeAt(0)) {
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 97:
        case 98:
        case 99:
        case 100:
        case 101:
        case 102:
          return true;
      }
      return false;
    },
    AsciiUpperToLower__asciiToLower(c) {
      A._asInt(c);
      return c >= 65 && c <= 90 ? c + 97 - 65 : c;
    },
    ReparseException: function ReparseException() {
    },
    _EncodingRangeException$(message) {
      return new A._EncodingRangeException();
    },
    EncodingBytes: function EncodingBytes(t0) {
      this._bytes = t0;
      this.__position = -1;
    },
    ContentAttrParser: function ContentAttrParser(t0) {
      this.data = t0;
    },
    _EncodingRangeException: function _EncodingRangeException() {
    },
    _invalidUnicode(c) {
      if (1 <= c && c <= 8)
        return true;
      if (14 <= c && c <= 31)
        return true;
      if (127 <= c && c <= 159)
        return true;
      if (55296 <= c && c <= 57343)
        return true;
      if (64976 <= c && c <= 65007)
        return true;
      switch (c) {
        case 11:
        case 65534:
        case 65535:
        case 131070:
        case 131071:
        case 196606:
        case 196607:
        case 262142:
        case 262143:
        case 327678:
        case 327679:
        case 393214:
        case 393215:
        case 458750:
        case 458751:
        case 524286:
        case 524287:
        case 589822:
        case 589823:
        case 655358:
        case 655359:
        case 720894:
        case 720895:
        case 786430:
        case 786431:
        case 851966:
        case 851967:
        case 917502:
        case 917503:
        case 983038:
        case 983039:
        case 1048574:
        case 1048575:
        case 1114110:
        case 1114111:
          return true;
      }
      return false;
    },
    codecName(encoding) {
      var asciiPunctuation = A.RegExp_RegExp("[\t-\r -/:-@[-`{-~]", false);
      if (encoding == null)
        return null;
      return B.Map_fXYvf.$index(0, A.stringReplaceAllUnchecked(encoding, asciiPunctuation, "").toLowerCase());
    },
    _decodeBytes(encoding, bytes) {
      switch (encoding) {
        case "ascii":
          return new A.CodeUnits(B.C_AsciiCodec.decode$1(0, bytes));
        case "utf-8":
          return new A.CodeUnits(B.C_Utf8Codec.decode$1(0, bytes));
        default:
          throw A.wrapException(A.ArgumentError$("Encoding " + encoding + " not supported", null));
      }
    },
    HtmlInputStream: function HtmlInputStream(t0, t1, t2, t3) {
      var _ = this;
      _.charEncodingName = t0;
      _.charEncodingCertain = true;
      _.sourceUrl = t1;
      _._rawChars = _._rawBytes = null;
      _.errors = t2;
      _.fileInfo = null;
      _._chars = t3;
      _._html_input_stream$_offset = 0;
    },
    ListProxy: function ListProxy() {
    },
    StartTagToken$($name, data, namespace, selfClosing) {
      return new A.StartTagToken(data == null ? A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String) : data, namespace, $name, selfClosing);
    },
    Token: function Token() {
    },
    TagToken: function TagToken() {
    },
    StartTagToken: function StartTagToken(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.selfClosingAcknowledged = false;
      _.namespace = t1;
      _.name = t2;
      _.selfClosing = t3;
      _.span = null;
    },
    EndTagToken: function EndTagToken(t0, t1) {
      this.name = t0;
      this.selfClosing = t1;
      this.span = null;
    },
    StringToken: function StringToken() {
    },
    ParseErrorToken: function ParseErrorToken(t0, t1, t2) {
      var _ = this;
      _.messageParams = t0;
      _._buffer = t1;
      _._token$_string = t2;
      _.span = null;
    },
    CharactersToken: function CharactersToken(t0, t1) {
      this._buffer = t0;
      this._token$_string = t1;
      this.span = null;
    },
    SpaceCharactersToken: function SpaceCharactersToken(t0, t1) {
      this._buffer = t0;
      this._token$_string = t1;
      this.span = null;
    },
    CommentToken: function CommentToken(t0, t1) {
      this._buffer = t0;
      this._token$_string = t1;
      this.span = null;
    },
    DoctypeToken: function DoctypeToken(t0) {
      var _ = this;
      _.systemId = _.publicId = null;
      _.name = "";
      _.correct = t0;
      _.span = null;
    },
    TagAttribute: function TagAttribute() {
      this.name = null;
      this.__TagAttribute_value_A = $;
    },
    entitiesByFirstChar_closure: function entitiesByFirstChar_closure() {
    },
    entitiesByFirstChar__closure: function entitiesByFirstChar__closure() {
    },
    HtmlTokenizer: function HtmlTokenizer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.stream = t0;
      _.lowercaseElementName = t1;
      _.lowercaseAttrName = t2;
      _.generateSpans = t3;
      _.parser = null;
      _.tokenQueue = t4;
      _.currentToken = null;
      _.__HtmlTokenizer_state_A = $;
      _._tokenizer$_buffer = t5;
      _.__HtmlTokenizer__lastOffset_A = $;
      _._tokenizer$_current = _._attributeNames = _._attributes = null;
      _._attributeName = t6;
      _._attributeValue = t7;
    },
    HtmlTokenizer_consumeEntity_closure: function HtmlTokenizer_consumeEntity_closure(t0) {
      this.name = t0;
    },
    HtmlTokenizer_emitCurrentToken_closure: function HtmlTokenizer_emitCurrentToken_closure(t0) {
      this.attr = t0;
    },
    _mapEquals(a, b) {
      var t2, valB,
        t1 = a.__js_helper$_length;
      if (t1 !== b.__js_helper$_length)
        return false;
      if (t1 === 0)
        return true;
      for (t1 = A.LinkedHashMapKeyIterator$(a, a._modifications, A._instanceType(a)._precomputed1); t1.moveNext$0();) {
        t2 = t1.__js_helper$_current;
        valB = b.$index(0, t2);
        if (valB == null && !b.containsKey$1(t2))
          return false;
        if (!J.$eq$(a.$index(0, t2), valB))
          return false;
      }
      return true;
    },
    TreeBuilder__insertText($parent, data, span, refNode) {
      var last, t1, t2, index,
        nodes = $parent.get$nodes(0);
      if (refNode == null)
        if (!nodes.get$isEmpty(nodes) && nodes.get$last(nodes) instanceof A.Text0) {
          last = type$.Text._as(nodes.get$last(nodes));
          last.appendData$1(0, data);
          if (span != null) {
            t1 = span.file;
            t2 = last.sourceSpan;
            last.sourceSpan = t1.span$2(0, A.FileLocation$_(t2.file, t2._file$_start).offset, A.FileLocation$_(t1, span._file$_end).offset);
          }
        } else {
          t1 = A.Text$(data);
          t1.sourceSpan = span;
          nodes.add$1(0, t1);
        }
      else {
        index = nodes.indexOf$1(nodes, refNode);
        if (index > 0) {
          t1 = index - 1;
          t2 = nodes._list_proxy$_list;
          if (!(t1 < t2.length))
            return A.ioore(t2, t1);
          t1 = t2[t1] instanceof A.Text0;
        } else
          t1 = false;
        if (t1) {
          t1 = index - 1;
          t2 = nodes._list_proxy$_list;
          if (!(t1 >= 0 && t1 < t2.length))
            return A.ioore(t2, t1);
          type$.Text._as(t2[t1]).appendData$1(0, data);
        } else {
          t1 = A.Text$(data);
          t1.sourceSpan = span;
          nodes.insert$2(0, index, t1);
        }
      }
    },
    ActiveFormattingElements: function ActiveFormattingElements(t0) {
      this._list_proxy$_list = t0;
    },
    TreeBuilder: function TreeBuilder(t0, t1, t2) {
      var _ = this;
      _.defaultNamespace = t0;
      _.__TreeBuilder_document_A = $;
      _.openElements = t1;
      _.activeFormattingElements = t2;
      _.formPointer = _.headPointer = null;
      _.insertFromTable = false;
    },
    slice(list, start, end, $T) {
      var end0;
      if (end == null)
        end = list.length;
      if (end < start)
        end = start;
      end0 = list.length;
      return B.JSArray_methods.sublist$2(list, start, end > end0 ? end0 : end);
    },
    allWhitespace(str) {
      var t1, i;
      for (t1 = str.length, i = 0; i < t1; ++i)
        if (!A.isWhitespaceCC(str.charCodeAt(i)))
          return false;
      return true;
    },
    padWithZeros(str, size) {
      var i,
        t1 = str.length;
      if (t1 === size)
        return str;
      size -= t1;
      for (i = 0, t1 = ""; i < size; ++i)
        t1 += "0";
      t1 += str;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    formatStr(format, data) {
      var t1 = {};
      t1.format = format;
      if (data == null)
        return format;
      data.forEach$1(0, new A.formatStr_closure(t1));
      return t1.format;
    },
    Pair: function Pair(t0, t1, t2) {
      this.first = t0;
      this.second = t1;
      this.$ti = t2;
    },
    formatStr_closure: function formatStr_closure(t0) {
      this._box_0 = t0;
    },
    BrowserAppBinding: function BrowserAppBinding(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.__BrowserAppBinding_attachTarget_A = $;
      _._rawState = t0;
      _.ComponentsBinding__rootElement = t1;
      _.SyncBinding__isLoadingState = t2;
      _.SyncBinding__globalSyncRegistry = t3;
      _.SchedulerBinding__schedulerPhase = t4;
      _.SchedulerBinding__postFrameCallbacks = t5;
    },
    BrowserAppBinding_scheduleFrame_closure: function BrowserAppBinding_scheduleFrame_closure(t0) {
      this.frameCallback = t0;
    },
    _BrowserAppBinding_AppBinding_ComponentsBinding: function _BrowserAppBinding_AppBinding_ComponentsBinding() {
    },
    EventBinding$(element, type, fn) {
      var t1 = new A.EventBinding(type, fn);
      t1.EventBinding$3(element, type, fn);
      return t1;
    },
    _extension_0_clearOrSetAttribute(_this, $name, value) {
      if (_this.getAttribute($name) == value)
        return;
      if (value == null)
        _this.removeAttribute($name);
      else
        _this.setAttribute($name, value);
    },
    DomRenderObject: function DomRenderObject(t0) {
      var _ = this;
      _.node = _.namespace = _.parent = null;
      _.toHydrate = t0;
      _.events = null;
    },
    DomRenderObject_clearEvents_closure: function DomRenderObject_clearEvents_closure() {
    },
    DomRenderObject_updateElement_closure: function DomRenderObject_updateElement_closure() {
    },
    DomRenderObject_updateElement_closure0: function DomRenderObject_updateElement_closure0(t0, t1, t2) {
      this.prevEventTypes = t0;
      this.dataEvents = t1;
      this.elem = t2;
    },
    DomRenderObject_updateElement_closure1: function DomRenderObject_updateElement_closure1(t0) {
      this.dataEvents = t0;
    },
    RootDomRenderObject: function RootDomRenderObject(t0, t1, t2, t3) {
      var _ = this;
      _.container = t0;
      _.from = t1;
      _.to = t2;
      _.node = _.namespace = _.parent = null;
      _.toHydrate = t3;
      _.events = null;
    },
    EventBinding: function EventBinding(t0, t1) {
      this.type = t0;
      this.fn = t1;
      this.subscription = null;
    },
    EventBinding_closure: function EventBinding_closure(t0) {
      this.$this = t0;
    },
    decodeConfig(config) {
      if (config == null)
        return null;
      else if (typeof config == "string")
        return type$.nullable_Map_String_dynamic._as(J.cast$2$0$ax(B.C_StateDecoder.convert$1(type$.StateCodec._eval$1("Codec.T")._as(config)), type$.String, type$.dynamic));
      else
        return type$.nullable_Map_String_dynamic._as(B.C_JsonCodec.decode$2$reviver(0, self.JSON.stringify(config), null));
    },
    _JasprConfig: function _JasprConfig() {
    },
    _ComponentConfig: function _ComponentConfig() {
    },
    div(children, classes, key) {
      var _null = null;
      return new A.DomComponent("div", _null, classes, _null, _null, _null, _null, children, key);
    },
    button(children, autofocus, classes, disabled, id, onClick, type) {
      var t3,
        t1 = type$.String,
        t2 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
      if (disabled === true)
        t2.$indexSet(0, "disabled", "");
      t2.$indexSet(0, "type", "button");
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.void_Function_Event);
      t3 = type$.dynamic;
      t1.addAll$1(0, A.events__events$closure().call$2$1$onClick(onClick, t3, t3));
      return new A.DomComponent("button", id, classes, null, t2, t1, null, children, null);
    },
    label(children, classes, htmlFor) {
      var _null = null,
        t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
      t1.$indexSet(0, "for", htmlFor);
      return new A.DomComponent("label", _null, classes, _null, t1, _null, _null, children, _null);
    },
    path(children, d, fill, strokeWidth) {
      var _null = null,
        t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
      t1.$indexSet(0, "d", d);
      if (fill != null)
        t1.$indexSet(0, "fill", "transparent");
      t1.$indexSet(0, "stroke-width", strokeWidth);
      return new A.DomComponent("path", _null, _null, _null, t1, _null, _null, children, _null);
    },
    span(children, classes) {
      var _null = null;
      return new A.DomComponent("span", _null, classes, _null, _null, _null, _null, children, _null);
    },
    ButtonType: function ButtonType(t0) {
      this._name = t0;
    },
    InputType: function InputType(t0, t1) {
      this.value = t0;
      this._name = t1;
    },
    AppBinding: function AppBinding() {
    },
    _AppBinding_Object_SchedulerBinding: function _AppBinding_Object_SchedulerBinding() {
    },
    _AppBinding_Object_SchedulerBinding_SyncBinding: function _AppBinding_Object_SchedulerBinding_SyncBinding() {
    },
    events(onChange, onClick, onInput, V1, V2) {
      var t1;
      type$.nullable_void_Function._as(onClick);
      V1._eval$1("~(0)?")._as(onInput);
      V2._eval$1("~(0)?")._as(onChange);
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.void_Function_Event);
      if (onClick != null)
        t1.$indexSet(0, "click", new A.events_closure(onClick));
      if (onInput != null)
        t1.$indexSet(0, "input", A._callWithValue("onInput", onInput, V1));
      if (onChange != null)
        t1.$indexSet(0, "change", A._callWithValue("onChange", onChange, V2));
      return t1;
    },
    _callWithValue($event, fn, $V) {
      return new A._callWithValue_closure($V, $event, fn);
    },
    events_closure: function events_closure(t0) {
      this.onClick = t0;
    },
    _callWithValue_closure: function _callWithValue_closure(t0, t1, t2) {
      this.V = t0;
      this.event = t1;
      this.fn = t2;
    },
    _callWithValue__closure: function _callWithValue__closure(t0) {
      this.target = t0;
    },
    _callWithValue___closure: function _callWithValue___closure(t0) {
      this.target = t0;
    },
    _callWithValue__closure0: function _callWithValue__closure0() {
    },
    SchedulerPhase: function SchedulerPhase(t0) {
      this._name = t0;
    },
    SchedulerBinding: function SchedulerBinding() {
    },
    SchedulerBinding_scheduleBuild_closure: function SchedulerBinding_scheduleBuild_closure(t0, t1) {
      this.$this = t0;
      this.buildCallback = t1;
    },
    _NamedColor: function _NamedColor() {
    },
    SyncBinding: function SyncBinding() {
    },
    SyncStateMixin: function SyncStateMixin() {
    },
    StateCodec: function StateCodec() {
    },
    StateDecoder: function StateDecoder() {
    },
    StateEncoder: function StateEncoder() {
    },
    _RootElement$(component) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new A._RootElement(null, t1, component, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    },
    Element__sort(a, b) {
      var t2,
        t1 = type$.Element_3;
      t1._as(a);
      t1._as(b);
      t1 = a._depth;
      t1.toString;
      t2 = b._depth;
      t2.toString;
      if (t1 < t2)
        return -1;
      else if (t2 < t1)
        return 1;
      else {
        t1 = b._dirty;
        if (t1 && !a._dirty)
          return -1;
        else if (a._dirty && !t1)
          return 1;
      }
      return 0;
    },
    _InactiveElements__deactivateRecursively(element) {
      element.deactivate$0();
      element.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
    },
    InheritedElement$(component) {
      var t1 = A.HashMap_HashMap(type$.Element_3, type$.nullable_Object),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.InheritedElement(t1, t2, component, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    },
    StatefulElement$(component) {
      var t1 = component.createState$0(),
        t2 = A.HashSet_HashSet(type$.Element_3),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      t3 = new A.StatefulElement(t1, t2, t3, component, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
      t1._framework$_element = t3;
      t1.set$_component(component);
      return t3;
    },
    BuildOwner: function BuildOwner(t0, t1) {
      var _ = this;
      _._dirtyElements = t0;
      _._isFirstBuild = _._scheduledBuild = false;
      _._inactiveElements = t1;
      _._dirtyElementsNeedsResorting = null;
      _._debugBuilding = false;
      _._debugCurrentBuildTarget = null;
      _._debugStateLockLevel = 0;
    },
    ComponentsBinding: function ComponentsBinding() {
    },
    ComponentsBinding_attachRootComponent_closure: function ComponentsBinding_attachRootComponent_closure(t0, t1, t2) {
      this.$this = t0;
      this.buildOwner = t1;
      this.app = t2;
    },
    ComponentsBinding_attachRootComponent_closure_end: function ComponentsBinding_attachRootComponent_closure_end(t0, t1, t2) {
      this.$this = t0;
      this.element = t1;
      this.buildOwner = t2;
    },
    ComponentsBinding_attachRootComponent__closure: function ComponentsBinding_attachRootComponent__closure(t0) {
      this.end = t0;
    },
    _Root: function _Root(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _RootElement: function _RootElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RenderObjectElement__renderObject = t0;
      _._child = null;
      _._debugDoingBuild = false;
      _._notificationTree = _._parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._owner = _._binding = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t4;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    DomComponent: function DomComponent(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.tag = t0;
      _.id = t1;
      _.classes = t2;
      _.styles = t3;
      _.attributes = t4;
      _.events = t5;
      _._child = t6;
      _._children = t7;
      _.key = t8;
    },
    DomElement: function DomElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._wrappingElement = null;
      _.RenderObjectElement__renderObject = t0;
      _._children = null;
      _._forgottenChildren = t1;
      _._debugDoingBuild = false;
      _._notificationTree = _._parent = null;
      _._cachedHash = t2;
      _._depth = null;
      _._component = t3;
      _._owner = _._binding = null;
      _._lifecycleState = t4;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t5;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    DomElement_updateRenderObject_closure: function DomElement_updateRenderObject_closure() {
    },
    DomElement_updateRenderObject_closure0: function DomElement_updateRenderObject_closure0() {
    },
    DomElement_updateRenderObject_closure1: function DomElement_updateRenderObject_closure1() {
    },
    DomElement_updateRenderObject_closure2: function DomElement_updateRenderObject_closure2() {
    },
    Text: function Text(t0, t1, t2) {
      this.text = t0;
      this.rawHtml = t1;
      this.key = t2;
    },
    NoChildElement: function NoChildElement() {
    },
    TextElement: function TextElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RenderObjectElement__renderObject = t0;
      _._notificationTree = _._parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._owner = _._binding = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t4;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    Component: function Component() {
    },
    _ElementLifecycle: function _ElementLifecycle(t0) {
      this._name = t0;
    },
    Element: function Element() {
    },
    Element_rebuild_closure: function Element_rebuild_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.onRebuilt = t2;
    },
    Element__updateAncestorSiblingRecursively_closure: function Element__updateAncestorSiblingRecursively_closure() {
    },
    _InactiveElements: function _InactiveElements(t0) {
      this._elements = t0;
    },
    _InactiveElements__unmount_closure: function _InactiveElements__unmount_closure(t0, t1, t2) {
      this.$this = t0;
      this.element = t1;
      this.detachNode = t2;
    },
    InheritedComponent: function InheritedComponent() {
    },
    InheritedElement: function InheritedElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._framework$_dependents = t0;
      _._child = null;
      _._debugDoingBuild = false;
      _._notificationTree = _._parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._owner = _._binding = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t4;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    Key: function Key() {
    },
    LocalKey: function LocalKey() {
    },
    UniqueKey: function UniqueKey() {
    },
    MultiChildElement: function MultiChildElement() {
    },
    MultiChildElement_updateChildren_replaceWithNullIfForgotten: function MultiChildElement_updateChildren_replaceWithNullIfForgotten(t0) {
      this.forgottenChildren = t0;
    },
    RenderObject: function RenderObject() {
    },
    RenderObjectElement: function RenderObjectElement() {
    },
    _DomElement_MultiChildElement_RenderObjectElement__firstBuild_closure: function _DomElement_MultiChildElement_RenderObjectElement__firstBuild_closure(t0, t1) {
      this.$this = t0;
      this.onBuilt = t1;
    },
    _TextElement_NoChildElement_RenderObjectElement__firstBuild_closure: function _TextElement_NoChildElement_RenderObjectElement__firstBuild_closure(t0, t1) {
      this.$this = t0;
      this.onBuilt = t1;
    },
    __RootElement_SingleChildElement_RenderObjectElement__firstBuild_closure: function __RootElement_SingleChildElement_RenderObjectElement__firstBuild_closure(t0, t1) {
      this.$this = t0;
      this.onBuilt = t1;
    },
    SingleChildElement: function SingleChildElement() {
    },
    StatefulComponent: function StatefulComponent() {
    },
    _StateLifecycle: function _StateLifecycle(t0) {
      this._name = t0;
    },
    State: function State() {
    },
    StatefulElement: function StatefulElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._framework$_state = t0;
      _._didChangeDependencies = false;
      _._children = null;
      _._forgottenChildren = t1;
      _._debugDoingBuild = false;
      _._notificationTree = _._parent = null;
      _._cachedHash = t2;
      _._depth = null;
      _._component = t3;
      _._owner = _._binding = null;
      _._lifecycleState = t4;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t5;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    _DomElement_MultiChildElement_RenderObjectElement: function _DomElement_MultiChildElement_RenderObjectElement() {
    },
    _TextElement_NoChildElement_RenderObjectElement: function _TextElement_NoChildElement_RenderObjectElement() {
    },
    __RootElement_SingleChildElement_RenderObjectElement: function __RootElement_SingleChildElement_RenderObjectElement() {
    },
    JasprConverter: function JasprConverter(t0) {
      this.classesAsList = t0;
    },
    JasprConverter__convertElement_closure: function JasprConverter__convertElement_closure() {
    },
    App: function App(t0) {
      this.key = t0;
    },
    AppState: function AppState(t0) {
      this._component = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    AppState_convert_closure: function AppState_convert_closure(t0, t1) {
      this.$this = t0;
      this.rawInput = t1;
    },
    AppState_build_closure: function AppState_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    AppState_build__closure: function AppState_build__closure(t0) {
      this.context = t0;
    },
    AppState_build_closure0: function AppState_build_closure0(t0) {
      this.context = t0;
    },
    DartInputArea: function DartInputArea(t0, t1, t2) {
      this.input = t0;
      this.onInput = t1;
      this.key = t2;
    },
    DartInputAreaState: function DartInputAreaState(t0) {
      this._component = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    DartInputAreaState_build_closure: function DartInputAreaState_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    DartInputAreaState_build_closure0: function DartInputAreaState_build_closure0(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    DartInputAreaState_build_closure1: function DartInputAreaState_build_closure1(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    DartInputAreaState_build_closure2: function DartInputAreaState_build_closure2(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    ConverterOptions: function ConverterOptions(t0) {
      this.key = t0;
    },
    ConverterOptionsState: function ConverterOptionsState(t0) {
      this._component = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    BoolConvertorOption: function BoolConvertorOption(t0) {
      this.key = t0;
    },
    BoolConvertorOptionState: function BoolConvertorOptionState(t0) {
      this._component = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    BoolConvertorOptionState_build_closure: function BoolConvertorOptionState_build_closure(t0) {
      this.context = t0;
    },
    JasprRenderArea: function JasprRenderArea(t0, t1) {
      this.output = t0;
      this.key = t1;
    },
    JasprRenderAreaState: function JasprRenderAreaState(t0) {
      var _ = this;
      _.copyInProgress = false;
      _._component = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    JasprRenderAreaState_copyToClipboard_closure: function JasprRenderAreaState_copyToClipboard_closure(t0) {
      this.$this = t0;
    },
    JasprRenderAreaState_copyToClipboard_closure0: function JasprRenderAreaState_copyToClipboard_closure0(t0) {
      this.$this = t0;
    },
    JasprRenderAreaState_copyToClipboard__closure: function JasprRenderAreaState_copyToClipboard__closure(t0) {
      this.$this = t0;
    },
    JasprRenderAreaState_build_closure: function JasprRenderAreaState_build_closure(t0) {
      this.$this = t0;
    },
    inputProvider_closure: function inputProvider_closure() {
    },
    outputProvider_closure: function outputProvider_closure() {
    },
    classAsListProvider_closure: function classAsListProvider_closure() {
    },
    ProviderScope__scopeOf(context, listen) {
      var element = type$.nullable__UncontrolledProviderScopeElement._as(context.getElementForInheritedComponentOfExactType$1$0(type$.UncontrolledProviderScope));
      if (element == null)
        throw A.wrapException(A.StateError$("No ProviderScope found"));
      if (listen)
        context.dependOnInheritedElement$1(element);
      return element;
    },
    ProviderContext_watch(_this, provider, $T) {
      var t1 = A.ProviderScope__scopeOf(_this, true);
      $T._eval$1("ProviderListenable<0>")._as(provider);
      return type$.nullable_ProviderDependencies._as(t1.super$InheritedElement$getDependencies(_this)).watch$1$1(provider, $T);
    },
    ProviderScope: function ProviderScope(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ProviderScopeState: function ProviderScopeState(t0, t1) {
      var _ = this;
      _.__ProviderScopeState_container_F = $;
      _._debugParentOwner = null;
      _._framework1$_dirty = false;
      _.SyncScopeMixin_syncId = t0;
      _._component = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    UncontrolledProviderScope: function UncontrolledProviderScope(t0, t1, t2) {
      this.container = t0;
      this.child = t1;
      this.key = t2;
    },
    _UncontrolledProviderScopeElement: function _UncontrolledProviderScopeElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._task = null;
      _._framework1$_mounted = true;
      _._framework$_dependents = t0;
      _._child = null;
      _._debugDoingBuild = false;
      _._notificationTree = _._parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._owner = _._binding = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t4;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    _UncontrolledProviderScopeElement__jasprVsync_closure: function _UncontrolledProviderScopeElement__jasprVsync_closure(t0) {
      this.$this = t0;
    },
    _UncontrolledProviderScopeElement__jasprVsync__closure: function _UncontrolledProviderScopeElement__jasprVsync__closure() {
    },
    _bindingProvider_closure: function _bindingProvider_closure() {
    },
    ProviderDependencies: function ProviderDependencies(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dependent = t0;
      _.listenedContainer = null;
      _.watchers = t1;
      _.listeners = t2;
      _.oldWatchers = t3;
      _.oldListeners = t4;
    },
    ProviderDependencies_watch_closure: function ProviderDependencies_watch_closure(t0, t1, t2) {
      this.$this = t0;
      this.target = t1;
      this.T = t2;
    },
    _ProviderScopeState_State_SyncStateMixin: function _ProviderScopeState_State_SyncStateMixin() {
    },
    _ProviderScopeState_State_SyncStateMixin_SyncScopeMixin: function _ProviderScopeState_State_SyncStateMixin_SyncScopeMixin() {
    },
    _syncStateProvider_closure: function _syncStateProvider_closure() {
    },
    SyncScopeMixin: function SyncScopeMixin() {
    },
    SyncScopeMixin_updateState_closure: function SyncScopeMixin_updateState_closure(t0) {
      this.value = t0;
    },
    PrimaryButton: function PrimaryButton(t0, t1, t2, t3, t4) {
      var _ = this;
      _.label = t0;
      _.onClick = t1;
      _.size = t2;
      _.classes = t3;
      _.key = t4;
    },
    PrimaryButtonState: function PrimaryButtonState(t0) {
      this._component = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    ButtonSize: function ButtonSize(t0) {
      this._name = t0;
    },
    SecondaryButton$(classes, label, onClick, size) {
      return new A.SecondaryButton(label, onClick, size, classes, null);
    },
    SecondaryButton: function SecondaryButton(t0, t1, t2, t3, t4) {
      var _ = this;
      _.label = t0;
      _.onClick = t1;
      _.size = t2;
      _.classes = t3;
      _.key = t4;
    },
    SecondaryButtonState: function SecondaryButtonState(t0) {
      this._component = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    ButtonStyle: function ButtonStyle() {
    },
    TailwindTheme_of(context) {
      var t1 = context.dependOnInheritedComponentOfExactType$1$0(type$.TailwindTheme);
      if (t1 != null)
        t1.get$data(t1);
      return new A.TailwindThemeData();
    },
    TailwindThemeData: function TailwindThemeData() {
    },
    Context_Context(style) {
      return new A.Context(style, ".");
    },
    _parseUri(uri) {
      return uri;
    },
    _validateArgList(method, args) {
      var numArgs, i, numArgs0, message, t1, t2, t3, t4;
      for (numArgs = args.length, i = 1; i < numArgs; ++i) {
        if (args[i] == null || args[i - 1] != null)
          continue;
        for (; numArgs >= 1; numArgs = numArgs0) {
          numArgs0 = numArgs - 1;
          if (args[numArgs0] != null)
            break;
        }
        message = new A.StringBuffer("");
        t1 = "" + (method + "(");
        message._contents = t1;
        t2 = A._arrayInstanceType(args);
        t3 = t2._eval$1("SubListIterable<1>");
        t4 = new A.SubListIterable(args, 0, numArgs, t3);
        t4.SubListIterable$3(args, 0, numArgs, t2._precomputed1);
        t3 = t1 + new A.MappedListIterable(t4, t3._eval$1("String(ListIterable.E)")._as(new A._validateArgList_closure()), t3._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, ", ");
        message._contents = t3;
        message._contents = t3 + ("): part " + (i - 1) + " was null, but part " + i + " was not.");
        throw A.wrapException(A.ArgumentError$(message.toString$0(0), null));
      }
    },
    Context: function Context(t0, t1) {
      this.style = t0;
      this._context$_current = t1;
    },
    Context_joinAll_closure: function Context_joinAll_closure() {
    },
    Context_split_closure: function Context_split_closure() {
    },
    _validateArgList_closure: function _validateArgList_closure() {
    },
    InternalStyle: function InternalStyle() {
    },
    ParsedPath_ParsedPath$parse(path, style) {
      var t1, parts, separators, t2, start, i,
        root = style.getRoot$1(path);
      style.isRootRelative$1(path);
      if (root != null)
        path = B.JSString_methods.substring$1(path, root.length);
      t1 = type$.JSArray_String;
      parts = A._setArrayType([], t1);
      separators = A._setArrayType([], t1);
      t1 = path.length;
      if (t1 !== 0) {
        if (0 >= t1)
          return A.ioore(path, 0);
        t2 = style.isSeparator$1(path.charCodeAt(0));
      } else
        t2 = false;
      if (t2) {
        if (0 >= t1)
          return A.ioore(path, 0);
        B.JSArray_methods.add$1(separators, path[0]);
        start = 1;
      } else {
        B.JSArray_methods.add$1(separators, "");
        start = 0;
      }
      for (i = start; i < t1; ++i)
        if (style.isSeparator$1(path.charCodeAt(i))) {
          B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(path, start, i));
          B.JSArray_methods.add$1(separators, path[i]);
          start = i + 1;
        }
      if (start < t1) {
        B.JSArray_methods.add$1(parts, B.JSString_methods.substring$1(path, start));
        B.JSArray_methods.add$1(separators, "");
      }
      return new A.ParsedPath(style, root, parts, separators);
    },
    ParsedPath: function ParsedPath(t0, t1, t2, t3) {
      var _ = this;
      _.style = t0;
      _.root = t1;
      _.parts = t2;
      _.separators = t3;
    },
    PathException$(message) {
      return new A.PathException(message);
    },
    PathException: function PathException(t0) {
      this.message = t0;
    },
    Style__getPlatformStyle() {
      if (A.Uri_base().get$scheme() !== "file")
        return $.$get$Style_url();
      var t1 = A.Uri_base();
      if (!B.JSString_methods.endsWith$1(t1.get$path(t1), "/"))
        return $.$get$Style_url();
      if (A._Uri__Uri(null, "a/b", null, null).toFilePath$0() === "a\\b")
        return $.$get$Style_windows();
      return $.$get$Style_posix();
    },
    Style: function Style() {
    },
    PosixStyle: function PosixStyle(t0, t1, t2) {
      this.separatorPattern = t0;
      this.needsSeparatorPattern = t1;
      this.rootPattern = t2;
    },
    UrlStyle: function UrlStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    WindowsStyle: function WindowsStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    WindowsStyle_absolutePathToUri_closure: function WindowsStyle_absolutePathToUri_closure() {
    },
    ReCase$(text) {
      var t1 = new A.ReCase(A.RegExp_RegExp("[A-Z]", false), A.LinkedHashSet_LinkedHashSet$_literal([" ", ".", "/", "_", "\\", "-"], type$.String));
      t1.set$__ReCase__words_A(type$.List_String._as(t1._groupIntoWords$1(text)));
      return t1;
    },
    ReCase: function ReCase(t0, t1) {
      this._upperAlphaRegex = t0;
      this.symbolSet = t1;
      this.__ReCase__words_A = $;
    },
    ReCase__getSnakeCase_closure: function ReCase__getSnakeCase_closure() {
    },
    ProviderContainer$(observers, overrides, $parent) {
      var t10, t11,
        t1 = A._setArrayType([], type$.JSArray_ProviderContainer),
        t2 = type$.ProviderBase_nullable_Object,
        t3 = A.HashMap_HashMap(t2, t2),
        t4 = A.HashMap_HashMap(type$.Family_nullable_Object, type$._FamilyOverrideRef),
        t5 = overrides.length,
        t6 = $parent == null,
        t7 = t6 ? 0 : $parent.depth + 1,
        t8 = A._setArrayType([], type$.JSArray_ProviderObserver),
        t9 = !t6;
      if (t9)
        B.JSArray_methods.addAll$1(t8, $parent.observers);
      t2 = A.LinkedHashMap_LinkedHashMap$_empty(t2, type$._StateReader);
      if (t9)
        for (t9 = $parent._stateReaders.get$entries(0), t9 = t9.get$iterator(t9); t9.moveNext$0();) {
          t10 = t9.get$current();
          t11 = t10.value;
          if (!t11.isDynamicallyCreated)
            t2.$indexSet(0, t10.key, t11);
        }
      t6 = t6 ? null : $parent._root;
      t1 = new A.ProviderContainer(t5, t7, t6 == null ? $parent : t6, $parent, t1, t3, t4, t2, t8);
      t1.ProviderContainer$3$observers$overrides$parent(observers, overrides, $parent);
      return t1;
    },
    computeAllTransitiveDependencies(dependencies) {
      return null;
    },
    ValueProvider$(_value, State) {
      var _null = null;
      return new A.ValueProvider(_value, _null, _null, _null, _null, _null, _null, State._eval$1("ValueProvider<0>"));
    },
    AlwaysAliveProviderListenable: function AlwaysAliveProviderListenable() {
    },
    AlwaysAliveProviderBase: function AlwaysAliveProviderBase() {
    },
    _StateReader: function _StateReader(t0, t1, t2, t3) {
      var _ = this;
      _.origin = t0;
      _.override = t1;
      _.container = t2;
      _.isDynamicallyCreated = t3;
      _._framework0$_element = null;
    },
    _StateReader__create_closure: function _StateReader__create_closure(t0) {
      this.$this = t0;
    },
    _StateReader__create_closure0: function _StateReader__create_closure0(t0) {
      this.$this = t0;
    },
    ProviderContainer: function ProviderContainer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._debugOverridesLength = t0;
      _.__ProviderContainer_scheduler_FI = $;
      _.depth = t1;
      _._root = t2;
      _._framework0$_parent = t3;
      _._framework0$_children = t4;
      _._overrideForProvider = t5;
      _._overrideForFamily = t6;
      _._stateReaders = t7;
      _.observers = t8;
      _._disposed = false;
    },
    ProviderContainer__putIfAbsent_getReader: function ProviderContainer__putIfAbsent_getReader(t0, t1) {
      this.$this = t0;
      this.provider = t1;
    },
    ProviderContainer__putIfAbsent_getReader_closure: function ProviderContainer__putIfAbsent_getReader_closure(t0) {
      this.$this = t0;
    },
    ProviderContainer__putIfAbsent_getReader_closure0: function ProviderContainer__putIfAbsent_getReader_closure0() {
    },
    ProviderContainer__putIfAbsent_getReader_closure1: function ProviderContainer__putIfAbsent_getReader_closure1() {
    },
    ProviderContainer__putIfAbsent_getReader_closure2: function ProviderContainer__putIfAbsent_getReader_closure2(t0, t1) {
      this.provider = t0;
      this.deepestOverrideContainer = t1;
    },
    ProviderContainer_getAllProviderElementsInOrder_closure: function ProviderContainer_getAllProviderElementsInOrder_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    ProviderContainer_getAllProviderElementsInOrder_closure0: function ProviderContainer_getAllProviderElementsInOrder_closure0(t0, t1, t2) {
      this.$this = t0;
      this.visitedNodes = t1;
      this.queue = t2;
    },
    ProviderContainer_getAllProviderElementsInOrder_closure1: function ProviderContainer_getAllProviderElementsInOrder_closure1() {
    },
    ProviderOverride: function ProviderOverride(t0, t1) {
      this._origin = t0;
      this._override = t1;
    },
    CircularDependencyError: function CircularDependencyError() {
    },
    ProviderElementBase: function ProviderElementBase() {
    },
    ProviderElementBase_requireState_closure: function ProviderElementBase_requireState_closure(t0) {
      this.$this = t0;
    },
    ProviderElementBase_mount_closure: function ProviderElementBase_mount_closure(t0) {
      this.$this = t0;
    },
    ProviderElementBase_mount_closure0: function ProviderElementBase_mount_closure0(t0) {
      this.$this = t0;
    },
    ProviderElementBase__maybeRebuildDependencies_closure: function ProviderElementBase__maybeRebuildDependencies_closure() {
    },
    ProviderElementBase__notifyListeners_closure: function ProviderElementBase__notifyListeners_closure(t0, t1) {
      this.$this = t0;
      this.previousState = t1;
    },
    ProviderElementBase__notifyListeners_closure0: function ProviderElementBase__notifyListeners_closure0(t0) {
      this.$this = t0;
    },
    ProviderElementBase__notifyListeners_closure1: function ProviderElementBase__notifyListeners_closure1(t0, t1, t2) {
      this.$this = t0;
      this.listeners = t1;
      this.previousState = t2;
    },
    ProviderElementBase__notifyListeners_closure2: function ProviderElementBase__notifyListeners_closure2(t0, t1) {
      this.$this = t0;
      this.listeners = t1;
    },
    ProviderElementBase__notifyListeners_closure3: function ProviderElementBase__notifyListeners_closure3(t0) {
      this.$this = t0;
    },
    ProviderElementBase__notifyListeners_closure4: function ProviderElementBase__notifyListeners_closure4(t0, t1) {
      this.$this = t0;
      this.observer = t1;
    },
    ProviderOrFamily: function ProviderOrFamily() {
    },
    ProviderListenable: function ProviderListenable() {
    },
    ProviderSubscription: function ProviderSubscription() {
    },
    ProviderBase: function ProviderBase() {
    },
    ProviderBase_addListener_closure: function ProviderBase_addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _ProviderStateSubscription: function _ProviderStateSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _.listener = t0;
      _.listenedElement = t1;
      _.onError = t2;
      _.source = t3;
      _._closed = false;
      _.$ti = t4;
    },
    OverrideWithValueMixin: function OverrideWithValueMixin() {
    },
    ProviderElementProxy: function ProviderElementProxy(t0, t1, t2) {
      this._origin = t0;
      this._lense = t1;
      this.$ti = t2;
    },
    ProviderScheduler: function ProviderScheduler(t0, t1, t2) {
      var _ = this;
      _._disposed = false;
      _.flutterVsyncs = t0;
      _._stateToDispose = t1;
      _._stateToRefresh = t2;
      _._pendingTaskCompleter = null;
    },
    ValueProvider: function ValueProvider(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._framework0$_value = t0;
      _.debugGetCreateSourceHash = t1;
      _.from = t2;
      _.argument = t3;
      _.name = t4;
      _.dependencies = t5;
      _.allTransitiveDependencies = t6;
      _.$ti = t7;
    },
    ValueProviderElement: function ValueProviderElement(t0, t1, t2, t3) {
      var _ = this;
      _._debugSkipNotifyListenersAsserts = false;
      _.__ProviderElementBase__origin_A = $;
      _._provider = t0;
      _.__ProviderElementBase__container_F = $;
      _._framework0$_dependencies = t1;
      _._dependents = _._subscriptions = _._previousDependencies = null;
      _._providerDependents = t2;
      _._onErrorSelfListeners = _._onChangeSelfListeners = _._onRemoveListeners = _._onAddListeners = _._onCancelListeners = _._onResumeListeners = _._onDisposeListeners = null;
      _._didBuild = _._debugDidSetState = _._mounted = _._didCancelOnce = _._didChangeDependency = _._dependencyMayHaveChanged = _._mustRecomputeState = false;
      _._framework0$_state = null;
      _.$ti = t3;
    },
    _ProviderBase_ProviderOrFamily_ProviderListenable: function _ProviderBase_ProviderOrFamily_ProviderListenable() {
    },
    _ProviderElementProxy_Object_ProviderListenable: function _ProviderElementProxy_Object_ProviderListenable() {
    },
    _ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable: function _ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable() {
    },
    _ValueProvider_ProviderBase_AlwaysAliveProviderBase: function _ValueProvider_ProviderBase_AlwaysAliveProviderBase() {
    },
    ProxyElementValueNotifier: function ProxyElementValueNotifier(t0, t1) {
      var _ = this;
      _._result = null;
      _._count = 0;
      _._listenable$_listeners = t0;
      _._reentrantlyRemovedListeners = _._notificationCallStackDepth = 0;
      _.$ti = t1;
    },
    ProxyElementValueNotifier_result_closure: function ProxyElementValueNotifier_result_closure(t0, t1) {
      this.$this = t0;
      this.previous = t1;
    },
    _ValueListenable: function _ValueListenable() {
    },
    _ValueListenable__notifyValue_closure: function _ValueListenable__notifyValue_closure(t0, t1, t2) {
      this.$this = t0;
      this.prev = t1;
      this.next = t2;
    },
    _ValueListenable__notifyError_closure: function _ValueListenable__notifyError_closure(t0, t1, t2) {
      this.$this = t0;
      this.err = t1;
      this.stack = t2;
    },
    InternalProvider: function InternalProvider() {
    },
    Provider: function Provider(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._provider$_createFn = t0;
      _.debugGetCreateSourceHash = t1;
      _.from = t2;
      _.argument = t3;
      _.name = t4;
      _.dependencies = t5;
      _.allTransitiveDependencies = t6;
      _.$ti = t7;
    },
    ProviderElement: function ProviderElement(t0, t1, t2, t3) {
      var _ = this;
      _._debugSkipNotifyListenersAsserts = false;
      _.__ProviderElementBase__origin_A = $;
      _._provider = t0;
      _.__ProviderElementBase__container_F = $;
      _._framework0$_dependencies = t1;
      _._dependents = _._subscriptions = _._previousDependencies = null;
      _._providerDependents = t2;
      _._onErrorSelfListeners = _._onChangeSelfListeners = _._onRemoveListeners = _._onAddListeners = _._onCancelListeners = _._onResumeListeners = _._onDisposeListeners = null;
      _._didBuild = _._debugDidSetState = _._mounted = _._didCancelOnce = _._didChangeDependency = _._dependencyMayHaveChanged = _._mustRecomputeState = false;
      _._framework0$_state = null;
      _.$ti = t3;
    },
    _InternalProvider_ProviderBase_OverrideWithValueMixin: function _InternalProvider_ProviderBase_OverrideWithValueMixin() {
    },
    _Provider_InternalProvider_AlwaysAliveProviderBase: function _Provider_InternalProvider_AlwaysAliveProviderBase() {
    },
    ResultData: function ResultData(t0, t1) {
      this.state = t0;
      this.$ti = t1;
    },
    ResultError: function ResultError(t0, t1, t2) {
      this.error = t0;
      this.stackTrace = t1;
      this.$ti = t2;
    },
    throwErrorWithCombinedStackTrace(error, stackTrace) {
      var t1 = A._setArrayType([A.Trace_Trace$current()], type$.JSArray_Trace);
      B.JSArray_methods.addAll$1(t1, A.Chain_Chain$forTrace(stackTrace).get$traces());
      A.Error_throwWithStackTrace(error, new A.VMTrace(new A.Chain(A.List_List$unmodifiable(t1, type$.Trace)).foldFrames$1(new A.throwErrorWithCombinedStackTrace_closure()).toTrace$0().frames));
    },
    throwErrorWithCombinedStackTrace_closure: function throwErrorWithCombinedStackTrace_closure() {
    },
    StateController: function StateController(t0, t1, t2) {
      var _ = this;
      _._listeners = t0;
      _._debugCanAddListeners = _._state_notifier$_mounted = true;
      _._state_notifier$_state = t1;
      _.$ti = t2;
    },
    _notifier(that, $T) {
      return new A.ProviderElementProxy(that, new A._notifier_closure($T), $T._eval$1("@<0>")._bind$1($T._eval$1("StateController<0>"))._eval$1("ProviderElementProxy<1,2>"));
    },
    StateProvider$(_createFn, $T) {
      var _null = null;
      return new A.StateProvider(_createFn, _null, _null, _null, _null, _null, A.computeAllTransitiveDependencies(_null), $T._eval$1("StateProvider<0>"));
    },
    _notifier_closure: function _notifier_closure(t0) {
      this.T = t0;
    },
    _StateProviderBase: function _StateProviderBase() {
    },
    StateProvider: function StateProvider(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._createFn = t0;
      _.__StateProvider_notifier_FI = $;
      _.debugGetCreateSourceHash = t1;
      _.from = t2;
      _.argument = t3;
      _.name = t4;
      _.dependencies = t5;
      _.allTransitiveDependencies = t6;
      _.$ti = t7;
    },
    StateProviderElement: function StateProviderElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._controllerNotifier = t0;
      _._stateNotifier = t1;
      _._removeListener = null;
      _._debugSkipNotifyListenersAsserts = false;
      _.__ProviderElementBase__origin_A = $;
      _._provider = t2;
      _.__ProviderElementBase__container_F = $;
      _._framework0$_dependencies = t3;
      _._dependents = _._subscriptions = _._previousDependencies = null;
      _._providerDependents = t4;
      _._onErrorSelfListeners = _._onChangeSelfListeners = _._onRemoveListeners = _._onAddListeners = _._onCancelListeners = _._onResumeListeners = _._onDisposeListeners = null;
      _._didBuild = _._debugDidSetState = _._mounted = _._didCancelOnce = _._didChangeDependency = _._dependencyMayHaveChanged = _._mustRecomputeState = false;
      _._framework0$_state = null;
      _.$ti = t5;
    },
    StateProviderElement_create_closure: function StateProviderElement_create_closure(t0) {
      this.$this = t0;
    },
    _StateProvider__StateProviderBase_AlwaysAliveProviderBase: function _StateProvider__StateProviderBase_AlwaysAliveProviderBase() {
    },
    FileLocation$_(file, offset) {
      if (offset < 0)
        A.throwExpression(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > file._decodedChars.length)
        A.throwExpression(A.RangeError$("Offset " + offset + string$.x20must_ + file.get$length(0) + "."));
      return new A.FileLocation(file, offset);
    },
    _FileSpan$(file, _start, _end) {
      if (_end < _start)
        A.throwExpression(A.ArgumentError$("End " + _end + " must come after start " + _start + ".", null));
      else if (_end > file._decodedChars.length)
        A.throwExpression(A.RangeError$("End " + _end + string$.x20must_ + file.get$length(0) + "."));
      else if (_start < 0)
        A.throwExpression(A.RangeError$("Start may not be negative, was " + _start + "."));
      return new A._FileSpan(file, _start, _end);
    },
    SourceFile: function SourceFile(t0, t1, t2) {
      var _ = this;
      _.url = t0;
      _._lineStarts = t1;
      _._decodedChars = t2;
      _._cachedLine = null;
    },
    FileLocation: function FileLocation(t0, t1) {
      this.file = t0;
      this.offset = t1;
    },
    _FileSpan: function _FileSpan(t0, t1, t2) {
      this.file = t0;
      this._file$_start = t1;
      this._file$_end = t2;
    },
    Highlighter$(span, color) {
      var t1 = A.Highlighter__collateLines(A._setArrayType([A._Highlight$(span, true)], type$.JSArray__Highlight)),
        t2 = new A.Highlighter_closure(color).call$0(),
        t3 = B.JSInt_methods.toString$0(B.JSArray_methods.get$last(t1).number + 1),
        t4 = A.Highlighter__contiguous(t1) ? 0 : 3,
        t5 = A._arrayInstanceType(t1);
      return new A.Highlighter(t1, t2, null, 1 + Math.max(t3.length, t4), new A.MappedListIterable(t1, t5._eval$1("int(1)")._as(new A.Highlighter$__closure()), t5._eval$1("MappedListIterable<1,int>")).reduce$1(0, B.CONSTANT), !A.isAllTheSame(new A.MappedListIterable(t1, t5._eval$1("Object?(1)")._as(new A.Highlighter$__closure0()), t5._eval$1("MappedListIterable<1,Object?>"))), new A.StringBuffer(""));
    },
    Highlighter__contiguous(lines) {
      var i, thisLine, nextLine;
      for (i = 0; i < lines.length - 1;) {
        thisLine = lines[i];
        ++i;
        nextLine = lines[i];
        if (thisLine.number + 1 !== nextLine.number && J.$eq$(thisLine.url, nextLine.url))
          return false;
      }
      return true;
    },
    Highlighter__collateLines(highlights) {
      var t1, t2, t3,
        highlightsByUrl = A.groupBy(highlights, new A.Highlighter__collateLines_closure(), type$._Highlight, type$.Object);
      for (t1 = highlightsByUrl.get$values(0), t2 = A._instanceType(t1), t2 = t2._eval$1("@<1>")._bind$1(t2._rest[1]), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1]; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        J.sort$1$ax(t3, new A.Highlighter__collateLines_closure0());
      }
      t1 = highlightsByUrl.get$entries(0);
      t2 = A._instanceType(t1);
      t3 = t2._eval$1("ExpandIterable<Iterable.E,_Line>");
      return A.List_List$of(new A.ExpandIterable(t1, t2._eval$1("Iterable<_Line>(Iterable.E)")._as(new A.Highlighter__collateLines_closure1()), t3), true, t3._eval$1("Iterable.E"));
    },
    _Highlight$(span, primary) {
      var t1 = new A._Highlight_closure(span).call$0();
      return new A._Highlight(t1, true, null);
    },
    _Highlight__normalizeNewlines(span) {
      var t1, endOffset, i, t2, t3, t4,
        text = span.get$text(span);
      if (!B.JSString_methods.contains$1(text, "\r\n"))
        return span;
      t1 = span.get$end();
      endOffset = t1.get$offset(t1);
      for (t1 = text.length - 1, i = 0; i < t1; ++i)
        if (text.charCodeAt(i) === 13 && text.charCodeAt(i + 1) === 10)
          --endOffset;
      t1 = span.get$start(span);
      t2 = span.get$sourceUrl();
      t3 = span.get$end().get$line();
      t2 = A.SourceLocation$(endOffset, span.get$end().get$column(), t3, t2);
      t3 = A.stringReplaceAllUnchecked(text, "\r\n", "\n");
      t4 = span.get$context();
      return A.SourceSpanWithContext$(t1, t2, t3, A.stringReplaceAllUnchecked(t4, "\r\n", "\n"));
    },
    _Highlight__normalizeTrailingNewline(span) {
      var context, text, start, end, t1, t2, t3;
      if (!B.JSString_methods.endsWith$1(span.get$context(), "\n"))
        return span;
      if (B.JSString_methods.endsWith$1(span.get$text(span), "\n\n"))
        return span;
      context = B.JSString_methods.substring$2(span.get$context(), 0, span.get$context().length - 1);
      text = span.get$text(span);
      start = span.get$start(span);
      end = span.get$end();
      if (B.JSString_methods.endsWith$1(span.get$text(span), "\n")) {
        t1 = A.findLineStart(span.get$context(), span.get$text(span), span.get$start(span).get$column());
        t1.toString;
        t1 = t1 + span.get$start(span).get$column() + span.get$length(span) === span.get$context().length;
      } else
        t1 = false;
      if (t1) {
        text = B.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
        if (text.length === 0)
          end = start;
        else {
          t1 = span.get$end();
          t1 = t1.get$offset(t1);
          t2 = span.get$sourceUrl();
          t3 = span.get$end().get$line();
          end = A.SourceLocation$(t1 - 1, A._Highlight__lastLineLength(context), t3 - 1, t2);
          t1 = span.get$start(span);
          t1 = t1.get$offset(t1);
          t2 = span.get$end();
          start = t1 === t2.get$offset(t2) ? end : span.get$start(span);
        }
      }
      return A.SourceSpanWithContext$(start, end, text, context);
    },
    _Highlight__normalizeEndOfLine(span) {
      var text, t1, t2, t3, t4;
      if (span.get$end().get$column() !== 0)
        return span;
      if (span.get$end().get$line() === span.get$start(span).get$line())
        return span;
      text = B.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
      t1 = span.get$start(span);
      t2 = span.get$end();
      t2 = t2.get$offset(t2);
      t3 = span.get$sourceUrl();
      t4 = span.get$end().get$line();
      t3 = A.SourceLocation$(t2 - 1, text.length - B.JSString_methods.lastIndexOf$1(text, "\n") - 1, t4 - 1, t3);
      return A.SourceSpanWithContext$(t1, t3, text, B.JSString_methods.endsWith$1(span.get$context(), "\n") ? B.JSString_methods.substring$2(span.get$context(), 0, span.get$context().length - 1) : span.get$context());
    },
    _Highlight__lastLineLength(text) {
      var t2,
        t1 = text.length;
      if (t1 === 0)
        return 0;
      else {
        t2 = t1 - 1;
        if (!(t2 >= 0))
          return A.ioore(text, t2);
        if (text.charCodeAt(t2) === 10)
          return t1 === 1 ? 0 : t1 - B.JSString_methods.lastIndexOf$2(text, "\n", t1 - 2) - 1;
        else
          return t1 - B.JSString_methods.lastIndexOf$1(text, "\n") - 1;
      }
    },
    Highlighter: function Highlighter(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._lines = t0;
      _._primaryColor = t1;
      _._secondaryColor = t2;
      _._paddingBeforeSidebar = t3;
      _._maxMultilineSpans = t4;
      _._multipleFiles = t5;
      _._highlighter$_buffer = t6;
    },
    Highlighter_closure: function Highlighter_closure(t0) {
      this.color = t0;
    },
    Highlighter$__closure: function Highlighter$__closure() {
    },
    Highlighter$___closure: function Highlighter$___closure() {
    },
    Highlighter$__closure0: function Highlighter$__closure0() {
    },
    Highlighter__collateLines_closure: function Highlighter__collateLines_closure() {
    },
    Highlighter__collateLines_closure0: function Highlighter__collateLines_closure0() {
    },
    Highlighter__collateLines_closure1: function Highlighter__collateLines_closure1() {
    },
    Highlighter__collateLines__closure: function Highlighter__collateLines__closure(t0) {
      this.line = t0;
    },
    Highlighter_highlight_closure: function Highlighter_highlight_closure() {
    },
    Highlighter__writeFileStart_closure: function Highlighter__writeFileStart_closure(t0) {
      this.$this = t0;
    },
    Highlighter__writeMultilineHighlights_closure: function Highlighter__writeMultilineHighlights_closure(t0, t1, t2) {
      this.$this = t0;
      this.startLine = t1;
      this.line = t2;
    },
    Highlighter__writeMultilineHighlights_closure0: function Highlighter__writeMultilineHighlights_closure0(t0, t1) {
      this.$this = t0;
      this.highlight = t1;
    },
    Highlighter__writeMultilineHighlights_closure1: function Highlighter__writeMultilineHighlights_closure1(t0) {
      this.$this = t0;
    },
    Highlighter__writeMultilineHighlights_closure2: function Highlighter__writeMultilineHighlights_closure2(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.current = t2;
      _.startLine = t3;
      _.line = t4;
      _.highlight = t5;
      _.endLine = t6;
    },
    Highlighter__writeMultilineHighlights__closure: function Highlighter__writeMultilineHighlights__closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Highlighter__writeMultilineHighlights__closure0: function Highlighter__writeMultilineHighlights__closure0(t0, t1) {
      this.$this = t0;
      this.vertical = t1;
    },
    Highlighter__writeHighlightedText_closure: function Highlighter__writeHighlightedText_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.text = t1;
      _.startColumn = t2;
      _.endColumn = t3;
    },
    Highlighter__writeIndicator_closure: function Highlighter__writeIndicator_closure(t0, t1, t2) {
      this.$this = t0;
      this.line = t1;
      this.highlight = t2;
    },
    Highlighter__writeIndicator_closure0: function Highlighter__writeIndicator_closure0(t0, t1, t2) {
      this.$this = t0;
      this.line = t1;
      this.highlight = t2;
    },
    Highlighter__writeIndicator_closure1: function Highlighter__writeIndicator_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.coversWholeLine = t1;
      _.line = t2;
      _.highlight = t3;
    },
    Highlighter__writeSidebar_closure: function Highlighter__writeSidebar_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.end = t2;
    },
    _Highlight: function _Highlight(t0, t1, t2) {
      this.span = t0;
      this.isPrimary = t1;
      this.label = t2;
    },
    _Highlight_closure: function _Highlight_closure(t0) {
      this.span = t0;
    },
    _Line: function _Line(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.number = t1;
      _.url = t2;
      _.highlights = t3;
    },
    SourceLocation$(offset, column, line, sourceUrl) {
      if (offset < 0)
        A.throwExpression(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (line < 0)
        A.throwExpression(A.RangeError$("Line may not be negative, was " + line + "."));
      else if (column < 0)
        A.throwExpression(A.RangeError$("Column may not be negative, was " + column + "."));
      return new A.SourceLocation(sourceUrl, offset, line, column);
    },
    SourceLocation: function SourceLocation(t0, t1, t2, t3) {
      var _ = this;
      _.sourceUrl = t0;
      _.offset = t1;
      _.line = t2;
      _.column = t3;
    },
    SourceLocationMixin: function SourceLocationMixin() {
    },
    SourceSpanBase: function SourceSpanBase() {
    },
    SourceSpanMixin: function SourceSpanMixin() {
    },
    SourceSpanWithContext$(start, end, text, _context) {
      var t1 = new A.SourceSpanWithContext(_context, start, end, text);
      t1.SourceSpanBase$3(start, end, text);
      if (!B.JSString_methods.contains$1(_context, text))
        A.throwExpression(A.ArgumentError$('The context line "' + _context + '" must contain "' + text + '".', null));
      if (A.findLineStart(_context, text, start.get$column()) == null)
        A.throwExpression(A.ArgumentError$('The span text "' + text + '" must start at column ' + (start.get$column() + 1) + ' in a line within "' + _context + '".', null));
      return t1;
    },
    SourceSpanWithContext: function SourceSpanWithContext(t0, t1, t2, t3) {
      var _ = this;
      _._context = t0;
      _.start = t1;
      _.end = t2;
      _.text = t3;
    },
    Chain_Chain$forTrace(trace) {
      var t1;
      if (type$.Chain._is(trace))
        return trace;
      $.$get$_specKey();
      t1 = type$.Trace;
      if (t1._is(trace))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([trace], type$.JSArray_Trace), t1));
      return new A.LazyChain(new A.Chain_Chain$forTrace_closure(trace));
    },
    Chain_Chain$parse(chain) {
      var t1, t2,
        _s51_ = string$.x3d_____;
      if (chain.length === 0)
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([], type$.JSArray_Trace), type$.Trace));
      t1 = $.$get$vmChainGap();
      if (B.JSString_methods.contains$1(chain, t1)) {
        t1 = B.JSString_methods.split$1(chain, t1);
        t2 = A._arrayInstanceType(t1);
        return new A.Chain(A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Chain_Chain$parse_closure()), t2._eval$1("WhereIterable<1>")), t2._eval$1("Trace(1)")._as(A.trace_Trace___parseVM_tearOff$closure()), t2._eval$1("MappedIterable<1,Trace>")), type$.Trace));
      }
      if (!B.JSString_methods.contains$1(chain, _s51_))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([A.Trace_Trace$parse(chain)], type$.JSArray_Trace), type$.Trace));
      return new A.Chain(A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(chain.split(_s51_), type$.JSArray_String), type$.Trace_Function_String._as(A.trace_Trace___parseFriendly_tearOff$closure()), type$.MappedListIterable_String_Trace), type$.Trace));
    },
    Chain: function Chain(t0) {
      this.traces = t0;
    },
    Chain_Chain$forTrace_closure: function Chain_Chain$forTrace_closure(t0) {
      this.trace = t0;
    },
    Chain_Chain$parse_closure: function Chain_Chain$parse_closure() {
    },
    Chain_foldFrames_closure: function Chain_foldFrames_closure(t0, t1) {
      this.predicate = t0;
      this.terse = t1;
    },
    Chain_foldFrames_closure0: function Chain_foldFrames_closure0(t0) {
      this.terse = t0;
    },
    Chain_toTrace_closure: function Chain_toTrace_closure() {
    },
    Chain_toString_closure0: function Chain_toString_closure0() {
    },
    Chain_toString__closure0: function Chain_toString__closure0() {
    },
    Chain_toString_closure: function Chain_toString_closure(t0) {
      this.longest = t0;
    },
    Chain_toString__closure: function Chain_toString__closure(t0) {
      this.longest = t0;
    },
    Frame___parseVM_tearOff(frame) {
      return A.Frame_Frame$parseVM(A._asString(frame));
    },
    Frame_Frame$parseVM(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseVM_closure(frame));
    },
    Frame___parseV8_tearOff(frame) {
      return A.Frame_Frame$parseV8(A._asString(frame));
    },
    Frame_Frame$parseV8(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseV8_closure(frame));
    },
    Frame_Frame$_parseFirefoxEval(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$_parseFirefoxEval_closure(frame));
    },
    Frame___parseFirefox_tearOff(frame) {
      return A.Frame_Frame$parseFirefox(A._asString(frame));
    },
    Frame_Frame$parseFirefox(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseFirefox_closure(frame));
    },
    Frame___parseFriendly_tearOff(frame) {
      return A.Frame_Frame$parseFriendly(A._asString(frame));
    },
    Frame_Frame$parseFriendly(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseFriendly_closure(frame));
    },
    Frame__uriOrPathToUri(uriOrPath) {
      if (B.JSString_methods.contains$1(uriOrPath, $.$get$Frame__uriRegExp()))
        return A.Uri_parse(uriOrPath);
      else if (B.JSString_methods.contains$1(uriOrPath, $.$get$Frame__windowsRegExp()))
        return A._Uri__Uri$file(uriOrPath, true);
      else if (B.JSString_methods.startsWith$1(uriOrPath, "/"))
        return A._Uri__Uri$file(uriOrPath, false);
      if (B.JSString_methods.contains$1(uriOrPath, "\\"))
        return $.$get$windows().toUri$1(uriOrPath);
      return A.Uri_parse(uriOrPath);
    },
    Frame__catchFormatException(text, body) {
      var t1, exception;
      try {
        t1 = body.call$0();
        return t1;
      } catch (exception) {
        if (A.unwrapException(exception) instanceof A.FormatException)
          return new A.UnparsedFrame(A._Uri__Uri(null, "unparsed", null, null), text);
        else
          throw exception;
      }
    },
    Frame: function Frame(t0, t1, t2, t3) {
      var _ = this;
      _.uri = t0;
      _.line = t1;
      _.column = t2;
      _.member = t3;
    },
    Frame_Frame$parseVM_closure: function Frame_Frame$parseVM_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseV8_closure: function Frame_Frame$parseV8_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseV8_closure_parseLocation: function Frame_Frame$parseV8_closure_parseLocation(t0) {
      this.frame = t0;
    },
    Frame_Frame$_parseFirefoxEval_closure: function Frame_Frame$_parseFirefoxEval_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseFirefox_closure: function Frame_Frame$parseFirefox_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseFriendly_closure: function Frame_Frame$parseFriendly_closure(t0) {
      this.frame = t0;
    },
    LazyChain: function LazyChain(t0) {
      this._thunk = t0;
      this.__LazyChain__chain_FI = $;
    },
    LazyTrace: function LazyTrace(t0) {
      this._lazy_trace$_thunk = t0;
      this.__LazyTrace__trace_FI = $;
    },
    LazyTrace_foldFrames_closure: function LazyTrace_foldFrames_closure(t0, t1, t2) {
      this.$this = t0;
      this.predicate = t1;
      this.terse = t2;
    },
    Trace_Trace$current() {
      return new A.LazyTrace(new A.Trace_Trace$current_closure(A.Trace_Trace$from(A.StackTrace_current()), 0));
    },
    Trace_Trace$from(trace) {
      if (type$.Trace._is(trace))
        return trace;
      if (type$.Chain._is(trace))
        return trace.toTrace$0();
      return new A.LazyTrace(new A.Trace_Trace$from_closure(trace));
    },
    Trace_Trace$parse(trace) {
      var error, t1, exception;
      try {
        if (trace.length === 0) {
          t1 = A.Trace$(A._setArrayType([], type$.JSArray_Frame), null);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_v8Trace())) {
          t1 = A.Trace$parseV8(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, "\tat ")) {
          t1 = A.Trace$parseJSCore(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_firefoxSafariTrace()) || B.JSString_methods.contains$1(trace, $.$get$_firefoxEvalTrace())) {
          t1 = A.Trace$parseFirefox(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, string$.x3d_____)) {
          t1 = A.Chain_Chain$parse(trace).toTrace$0();
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_friendlyTrace())) {
          t1 = A.Trace$parseFriendly(trace);
          return t1;
        }
        t1 = A.Trace$parseVM(trace);
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.FormatException) {
          error = t1;
          throw A.wrapException(A.FormatException$(error.message + "\nStack trace:\n" + trace, null, null));
        } else
          throw exception;
      }
    },
    Trace___parseVM_tearOff(trace) {
      return A.Trace$parseVM(A._asString(trace));
    },
    Trace$parseVM(trace) {
      var t1 = A.List_List$unmodifiable(A.Trace__parseVM(trace), type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace__parseVM(trace) {
      var $frames,
        t1 = B.JSString_methods.trim$0(trace),
        t2 = $.$get$vmChainGap(),
        t3 = type$.WhereIterable_String,
        lines = new A.WhereIterable(A._setArrayType(A.stringReplaceAllUnchecked(t1, t2, "").split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace__parseVM_closure()), t3);
      if (!lines.get$iterator(0).moveNext$0())
        return A._setArrayType([], type$.JSArray_Frame);
      t1 = A.TakeIterable_TakeIterable(lines, lines.get$length(0) - 1, t3._eval$1("Iterable.E"));
      t2 = A._instanceType(t1);
      t2 = A.MappedIterable_MappedIterable(t1, t2._eval$1("Frame(Iterable.E)")._as(A.frame_Frame___parseVM_tearOff$closure()), t2._eval$1("Iterable.E"), type$.Frame);
      $frames = A.List_List$of(t2, true, A._instanceType(t2)._eval$1("Iterable.E"));
      if (!J.endsWith$1$s(lines.get$last(0), ".da"))
        B.JSArray_methods.add$1($frames, A.Frame_Frame$parseVM(lines.get$last(0)));
      return $frames;
    },
    Trace$parseV8(trace) {
      var t2, t3,
        t1 = A.SubListIterable$(A._setArrayType(trace.split("\n"), type$.JSArray_String), 1, null, type$.String);
      t1 = t1.super$Iterable$skipWhile(0, t1.$ti._eval$1("bool(ListIterable.E)")._as(new A.Trace$parseV8_closure()));
      t2 = type$.Frame;
      t3 = t1.$ti;
      t2 = A.List_List$unmodifiable(A.MappedIterable_MappedIterable(t1, t3._eval$1("Frame(Iterable.E)")._as(A.frame_Frame___parseV8_tearOff$closure()), t3._eval$1("Iterable.E"), t2), t2);
      return new A.Trace(t2, new A._StringStackTrace(trace));
    },
    Trace$parseJSCore(trace) {
      var t1 = A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(trace.split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseJSCore_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(A.frame_Frame___parseV8_tearOff$closure()), type$.MappedIterable_String_Frame), type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace$parseFirefox(trace) {
      var t1 = A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(trace).split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseFirefox_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(A.frame_Frame___parseFirefox_tearOff$closure()), type$.MappedIterable_String_Frame), type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace___parseFriendly_tearOff(trace) {
      return A.Trace$parseFriendly(A._asString(trace));
    },
    Trace$parseFriendly(trace) {
      var t1 = trace.length === 0 ? A._setArrayType([], type$.JSArray_Frame) : new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(trace).split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseFriendly_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(A.frame_Frame___parseFriendly_tearOff$closure()), type$.MappedIterable_String_Frame);
      t1 = A.List_List$unmodifiable(t1, type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace$($frames, original) {
      var t1 = A.List_List$unmodifiable($frames, type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(original == null ? "" : original));
    },
    Trace: function Trace(t0, t1) {
      this.frames = t0;
      this.original = t1;
    },
    Trace_Trace$current_closure: function Trace_Trace$current_closure(t0, t1) {
      this.trace = t0;
      this.level = t1;
    },
    Trace_Trace$from_closure: function Trace_Trace$from_closure(t0) {
      this.trace = t0;
    },
    Trace__parseVM_closure: function Trace__parseVM_closure() {
    },
    Trace$parseV8_closure: function Trace$parseV8_closure() {
    },
    Trace$parseJSCore_closure: function Trace$parseJSCore_closure() {
    },
    Trace$parseFirefox_closure: function Trace$parseFirefox_closure() {
    },
    Trace$parseFriendly_closure: function Trace$parseFriendly_closure() {
    },
    Trace_toString_closure0: function Trace_toString_closure0() {
    },
    Trace_toString_closure: function Trace_toString_closure(t0) {
      this.longest = t0;
    },
    UnparsedFrame: function UnparsedFrame(t0, t1) {
      this.uri = t0;
      this.member = t1;
    },
    VMTrace: function VMTrace(t0) {
      this.frames = t0;
    },
    VMTrace_toString_closure: function VMTrace_toString_closure(t0) {
      this._box_0 = t0;
    },
    VMTrace_toString__closure: function VMTrace_toString__closure() {
    },
    StateNotifierListenerError: function StateNotifierListenerError(t0, t1, t2) {
      this.errors = t0;
      this.stackTraces = t1;
      this.stateNotifier = t2;
    },
    StateNotifier: function StateNotifier() {
    },
    StateNotifier_addListener_closure: function StateNotifier_addListener_closure(t0) {
      this.listenerEntry = t0;
    },
    _ListenerEntry: function _ListenerEntry(t0, t1) {
      var _ = this;
      _.listener = t0;
      _._collection$_previous = _._collection$_next = _._list = null;
      _.$ti = t1;
    },
    printString(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    },
    Device_userAgent() {
      var t1 = window.navigator.userAgent;
      t1.toString;
      return t1;
    },
    max(a, b, $T) {
      A.checkTypeBound($T, type$.num, "T", "max");
      return Math.max($T._as(a), $T._as(b));
    },
    groupBy(values, key, $S, $T) {
      var t1, _i, element, t2, t3,
        map = A.LinkedHashMap_LinkedHashMap$_empty($T, $S._eval$1("List<0>"));
      for (t1 = $S._eval$1("JSArray<0>"), _i = 0; _i < 1; ++_i) {
        element = values[_i];
        t2 = key.call$1(element);
        t3 = map.$index(0, t2);
        if (t3 == null) {
          t3 = A._setArrayType([], t1);
          map.$indexSet(0, t2, t3);
          t2 = t3;
        } else
          t2 = t3;
        J.add$1$ax(t2, element);
      }
      return map;
    },
    combineClasses(classes) {
      var t1 = B.JSArray_methods.join$1(classes, " "),
        t2 = A.RegExp_RegExp("\\s+", false);
      return B.JSString_methods.trim$0(A.stringReplaceAllUnchecked(t1, t2, " "));
    },
    current() {
      var exception, t1, path, lastIndex, uri = null;
      try {
        uri = A.Uri_base();
      } catch (exception) {
        if (type$.Exception._is(A.unwrapException(exception))) {
          t1 = $._current;
          if (t1 != null)
            return t1;
          throw exception;
        } else
          throw exception;
      }
      if (J.$eq$(uri, $._currentUriBase)) {
        t1 = $._current;
        t1.toString;
        return t1;
      }
      $._currentUriBase = uri;
      if ($.$get$Style_platform() === $.$get$Style_url())
        t1 = $._current = uri.resolve$1(".").toString$0(0);
      else {
        path = uri.toFilePath$0();
        lastIndex = path.length - 1;
        t1 = $._current = lastIndex === 0 ? path : B.JSString_methods.substring$2(path, 0, lastIndex);
      }
      return t1;
    },
    isAlphabetic(char) {
      var t1;
      if (!(char >= 65 && char <= 90))
        t1 = char >= 97 && char <= 122;
      else
        t1 = true;
      return t1;
    },
    driveLetterEnd(path, index) {
      var t2, t3, _null = null,
        t1 = path.length,
        index0 = index + 2;
      if (t1 < index0)
        return _null;
      if (!(index >= 0 && index < t1))
        return A.ioore(path, index);
      if (!A.isAlphabetic(path.charCodeAt(index)))
        return _null;
      t2 = index + 1;
      if (!(t2 < t1))
        return A.ioore(path, t2);
      if (path.charCodeAt(t2) !== 58) {
        t3 = index + 4;
        if (t1 < t3)
          return _null;
        if (B.JSString_methods.substring$2(path, t2, t3).toLowerCase() !== "%3a")
          return _null;
        index = index0;
      }
      t2 = index + 2;
      if (t1 === t2)
        return t2;
      if (!(t2 >= 0 && t2 < t1))
        return A.ioore(path, t2);
      if (path.charCodeAt(t2) !== 47)
        return _null;
      return index + 3;
    },
    runUnaryGuarded(cb, value, $T, Res) {
      var err, stack, exception;
      try {
        cb.call$1(value);
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(err), type$.StackTrace._as(stack));
      }
    },
    runBinaryGuarded(cb, value, value2, $A, $B) {
      var err, stack, exception;
      try {
        cb.call$2(value, value2);
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(err), type$.StackTrace._as(stack));
      }
    },
    runTernaryGuarded(cb, value, value2, value3, $A, $B, $C) {
      var err, stack, exception;
      try {
        cb.call$3(value, value2, value3);
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(err), type$.StackTrace._as(stack));
      }
    },
    runQuaternaryGuarded(cb, value, value2, value3, value4, $A, $B, $C, $D) {
      var err, stack, exception;
      try {
        cb.call$4(value, value2, value3, value4);
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(err), type$.StackTrace._as(stack));
      }
    },
    isAllTheSame(iter) {
      var firstValue, t1, t2, value;
      if (iter.get$length(0) === 0)
        return true;
      firstValue = iter.get$first(0);
      for (t1 = A.SubListIterable$(iter, 1, null, iter.$ti._eval$1("ListIterable.E")), t2 = t1.$ti, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        value = t1.__internal$_current;
        if (!J.$eq$(value == null ? t2._as(value) : value, firstValue))
          return false;
      }
      return true;
    },
    replaceFirstNull(list, element, $E) {
      var index = B.JSArray_methods.indexOf$1(list, null);
      if (index < 0)
        throw A.wrapException(A.ArgumentError$(A.S(list) + " contains no null elements.", null));
      B.JSArray_methods.$indexSet(list, index, element);
    },
    replaceWithNull(list, element, $E) {
      var index = B.JSArray_methods.indexOf$1(list, element);
      if (index < 0)
        throw A.wrapException(A.ArgumentError$(A.S(list) + " contains no elements matching " + element.toString$0(0) + ".", null));
      B.JSArray_methods.$indexSet(list, index, null);
    },
    countCodeUnits(string, codeUnit) {
      var t1, t2, count, t3;
      for (t1 = new A.CodeUnits(string), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListBase.E>")), t2 = t2._eval$1("ListBase.E"), count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === codeUnit)
          ++count;
      }
      return count;
    },
    findLineStart(context, text, column) {
      var beginningOfLine, index, lineStart;
      if (text.length === 0)
        for (beginningOfLine = 0; true;) {
          index = B.JSString_methods.indexOf$2(context, "\n", beginningOfLine);
          if (index === -1)
            return context.length - beginningOfLine >= column ? beginningOfLine : null;
          if (index - beginningOfLine >= column)
            return beginningOfLine;
          beginningOfLine = index + 1;
        }
      index = B.JSString_methods.indexOf$1(context, text);
      for (; index !== -1;) {
        lineStart = index === 0 ? 0 : B.JSString_methods.lastIndexOf$2(context, "\n", index - 1) + 1;
        if (column === index - lineStart)
          return lineStart;
        index = B.JSString_methods.indexOf$2(context, text, index + 1);
      }
      return null;
    },
    main() {
      var t3, stateData, _null = null,
        t1 = type$.String,
        t2 = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.dynamic);
      t1 = new A.BrowserAppBinding(t2, _null, false, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.SyncState_dynamic), B.SchedulerPhase_0, A._setArrayType([], type$.JSArray_of_void_Function));
      t3 = self.jaspr;
      stateData = A.decodeConfig(t3 == null ? _null : J.get$sync$x(t3));
      if (stateData != null)
        t2.addAll$1(0, stateData);
      t1.__BrowserAppBinding_attachTarget_A = "body";
      t1.super$ComponentsBinding$attachRootComponent(new A.ProviderScope(new A.App(_null), _null));
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._instanceTypeFromConstructor(this));
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.bool);
    },
    $isTrustedGetRuntimeType: 1,
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.Null);
    },
    $isTrustedGetRuntimeType: 1,
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    },
    get$sync(obj) {
      return obj.sync;
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JavaScriptBigInt.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JavaScriptSymbol.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JSArray.prototype = {
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1(receiver, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("add"));
      receiver.push(value);
    },
    removeAt$1(receiver, index) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeAt"));
      if (index < 0 || index >= receiver.length)
        throw A.wrapException(A.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    insert$2(receiver, index, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("insert"));
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$value(index, null));
      receiver.splice(index, 0, value);
    },
    insertAll$2(receiver, index, iterable) {
      var insertionLength, end;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("insertAll"));
      A.RangeError_checkValueInInterval(index, 0, receiver.length, "index");
      if (!type$.EfficientLengthIterable_dynamic._is(iterable))
        iterable = J.toList$0$ax(iterable);
      insertionLength = J.get$length$asx(iterable);
      receiver.length = receiver.length + insertionLength;
      end = index + insertionLength;
      this.setRange$4(receiver, end, receiver.length, receiver, index);
      this.setRange$3(receiver, index, end, iterable);
    },
    removeLast$0(receiver) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeLast"));
      if (receiver.length === 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, -1));
      return receiver.pop();
    },
    remove$1(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    _removeWhere$2(receiver, test, removeMatching) {
      var retained, end, i, element, t1;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      retained = [];
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (!A.boolConversionCheck(test.call$1(element)))
          retained.push(element);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      t1 = retained.length;
      if (t1 === end)
        return;
      this.set$length(receiver, t1);
      for (i = 0; i < retained.length; ++i)
        receiver[i] = retained[i];
    },
    where$1(receiver, f) {
      var t1 = A._arrayInstanceType(receiver);
      return new A.WhereIterable(receiver, t1._eval$1("bool(1)")._as(f), t1._eval$1("WhereIterable<1>"));
    },
    addAll$1(receiver, collection) {
      var t1;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("addAll"));
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current());
    },
    _addAllFromArray$1(receiver, array) {
      var len, i;
      type$.JSArray_dynamic._as(array);
      len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    clear$0(receiver) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("clear"));
      receiver.length = 0;
    },
    forEach$1(receiver, f) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("~(1)")._as(f);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1(receiver, f, $T) {
      var t1 = A._arrayInstanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1(receiver, separator) {
      var i,
        list = A.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        this.$indexSet(list, i, A.S(receiver[i]));
      return list.join(separator);
    },
    join$0(receiver) {
      return this.join$1(receiver, "");
    },
    take$1(receiver, n) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(n, "count", type$.int), A._arrayInstanceType(receiver)._precomputed1);
    },
    skip$1(receiver, n) {
      return A.SubListIterable$(receiver, n, null, A._arrayInstanceType(receiver)._precomputed1);
    },
    fold$1$2(receiver, initialValue, combine, $T) {
      var $length, value, i;
      $T._as(initialValue);
      A._arrayInstanceType(receiver)._bind$1($T)._eval$1("1(1,2)")._as(combine);
      $length = receiver.length;
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if (receiver.length !== $length)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, "start", null));
      if (end < start || end > receiver.length)
        throw A.wrapException(A.RangeError$range(end, start, receiver.length, "end", null));
      if (start === end)
        return A._setArrayType([], A._arrayInstanceType(receiver));
      return A._setArrayType(receiver.slice(start, end), A._arrayInstanceType(receiver));
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$single(receiver) {
      var t1 = receiver.length;
      if (t1 === 1) {
        if (0 >= t1)
          return A.ioore(receiver, 0);
        return receiver[0];
      }
      if (t1 === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      throw A.wrapException(A.IterableElementError_tooMany());
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("setRange"));
      A.RangeError_checkValidRange(start, end, receiver.length);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    any$1(receiver, test) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (A.boolConversionCheck(test.call$1(receiver[i])))
          return true;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    sort$1(receiver, compare) {
      var len, a, b, undefineds, i,
        t1 = A._arrayInstanceType(receiver);
      t1._eval$1("int(1,1)?")._as(compare);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("sort"));
      len = receiver.length;
      if (len < 2)
        return;
      if (compare == null)
        compare = J._interceptors_JSArray__compareAny$closure();
      if (len === 2) {
        a = receiver[0];
        b = receiver[1];
        t1 = compare.call$2(a, b);
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > 0) {
          receiver[0] = b;
          receiver[1] = a;
        }
        return;
      }
      if (t1._precomputed1._is(null)) {
        for (undefineds = 0, i = 0; i < receiver.length; ++i)
          if (receiver[i] === void 0) {
            receiver[i] = null;
            ++undefineds;
          }
      } else
        undefineds = 0;
      receiver.sort(A.convertDartClosureToJS(compare, 2));
      if (undefineds > 0)
        this._replaceSomeNullsWithUndefined$1(receiver, undefineds);
    },
    _replaceSomeNullsWithUndefined$1(receiver, count) {
      var i0,
        i = receiver.length;
      for (; i0 = i - 1, i > 0; i = i0)
        if (receiver[i0] === null) {
          receiver[i0] = void 0;
          --count;
          if (count === 0)
            break;
        }
    },
    indexOf$2(receiver, element, start) {
      var i,
        $length = receiver.length;
      if (start >= $length)
        return -1;
      for (i = start; i < $length; ++i) {
        if (!(i < receiver.length))
          return A.ioore(receiver, i);
        if (J.$eq$(receiver[i], element))
          return i;
      }
      return -1;
    },
    indexOf$1(receiver, element) {
      return this.indexOf$2(receiver, element, 0);
    },
    contains$1(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable(receiver, growable) {
      var t1 = A._arrayInstanceType(receiver);
      return growable ? A._setArrayType(receiver.slice(0), t1) : J.JSArray_JSArray$markFixed(receiver.slice(0), t1._precomputed1);
    },
    toList$0(receiver) {
      return this.toList$1$growable(receiver, true);
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    set$length(receiver, newLength) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("set length"));
      if (newLength < 0)
        throw A.wrapException(A.RangeError$range(newLength, 0, null, "newLength", null));
      if (newLength > receiver.length)
        A._arrayInstanceType(receiver)._precomputed1._as(null);
      receiver.length = newLength;
    },
    $index(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("indexed set"));
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    indexWhere$1(receiver, test) {
      var i;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      if (0 >= receiver.length)
        return -1;
      for (i = 0; i < receiver.length; ++i)
        if (A.boolConversionCheck(test.call$1(receiver[i])))
          return i;
      return -1;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current() {
      var t1 = this.__interceptors$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this.__interceptors$_length !== $length) {
        t1 = A.throwConcurrentModificationError(t1);
        throw A.wrapException(t1);
      }
      t2 = _this._index;
      if (t2 >= $length) {
        _this.set$__interceptors$_current(null);
        return false;
      }
      _this.set$__interceptors$_current(t1[t2]);
      ++_this._index;
      return true;
    },
    set$__interceptors$_current(_current) {
      this.__interceptors$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    compareTo$1(receiver, b) {
      var bIsNegative;
      A._asNum(b);
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    round$0(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".round()"));
    },
    toRadixString$1(receiver, radix) {
      var result, t1, t2, match, exponent;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      t1 = result.length;
      t2 = t1 - 1;
      if (!(t2 >= 0))
        return A.ioore(result, t2);
      if (result.charCodeAt(t2) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      t1 = match.length;
      if (1 >= t1)
        return A.ioore(match, 1);
      result = match[1];
      if (3 >= t1)
        return A.ioore(match, 3);
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      return result + other;
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + A.S(other)));
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.num);
    },
    $isComparable: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.int);
    },
    $isTrustedGetRuntimeType: 1,
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.double);
    },
    $isTrustedGetRuntimeType: 1
  };
  J.JSString.prototype = {
    codeUnitAt$1(receiver, index) {
      if (index < 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        A.throwExpression(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    allMatches$2(receiver, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._StringAllMatchesIterable(string, receiver, start);
    },
    allMatches$1(receiver, string) {
      return this.allMatches$2(receiver, string, 0);
    },
    matchAsPrefix$2(receiver, string, start) {
      var t1, t2, i, t3, _null = null;
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, _null, _null));
      t1 = receiver.length;
      t2 = string.length;
      if (start + t1 > t2)
        return _null;
      for (i = 0; i < t1; ++i) {
        t3 = start + i;
        if (!(t3 >= 0 && t3 < t2))
          return A.ioore(string, t3);
        if (string.charCodeAt(t3) !== receiver.charCodeAt(i))
          return _null;
      }
      return new A.StringMatch(start, receiver);
    },
    $add(receiver, other) {
      return receiver + other;
    },
    endsWith$1(receiver, other) {
      var otherLength = other.length,
        t1 = receiver.length;
      if (otherLength > t1)
        return false;
      return other === this.substring$1(receiver, t1 - otherLength);
    },
    replaceFirst$2(receiver, from, to) {
      A.RangeError_checkValueInInterval(0, 0, receiver.length, "startIndex");
      return A.stringReplaceFirstUnchecked(receiver, from, to, 0);
    },
    split$1(receiver, pattern) {
      if (typeof pattern == "string")
        return A._setArrayType(receiver.split(pattern), type$.JSArray_String);
      else if (pattern instanceof A.JSSyntaxRegExp && pattern.get$_nativeAnchoredVersion().exec("").length - 2 === 0)
        return A._setArrayType(receiver.split(pattern._nativeRegExp), type$.JSArray_String);
      else
        return this._defaultSplit$1(receiver, pattern);
    },
    replaceRange$3(receiver, start, end, replacement) {
      var e = A.RangeError_checkValidRange(start, end, receiver.length);
      return A.stringReplaceRangeUnchecked(receiver, start, e, replacement);
    },
    _defaultSplit$1(receiver, pattern) {
      var t1, start, $length, match, matchStart, matchEnd,
        result = A._setArrayType([], type$.JSArray_String);
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), start = 0, $length = 1; t1.moveNext$0();) {
        match = t1.get$current();
        matchStart = match.get$start(match);
        matchEnd = match.get$end();
        $length = matchEnd - matchStart;
        if ($length === 0 && start === matchStart)
          continue;
        B.JSArray_methods.add$1(result, this.substring$2(receiver, start, matchStart));
        start = matchEnd;
      }
      if (start < receiver.length || $length > 0)
        B.JSArray_methods.add$1(result, this.substring$1(receiver, start));
      return result;
    },
    startsWith$2(receiver, pattern, index) {
      var endIndex;
      type$.Pattern._as(pattern);
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$range(index, 0, receiver.length, null, null));
      if (typeof pattern == "string") {
        endIndex = index + pattern.length;
        if (endIndex > receiver.length)
          return false;
        return pattern === receiver.substring(index, endIndex);
      }
      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
    },
    startsWith$1(receiver, pattern) {
      return this.startsWith$2(receiver, pattern, 0);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
    },
    substring$1(receiver, start) {
      return this.substring$2(receiver, start, null);
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (0 >= endIndex)
        return A.ioore(result, 0);
      if (result.charCodeAt(0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      if (!(t1 >= 0))
        return A.ioore(result, t1);
      endIndex0 = result.charCodeAt(t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    padRight$1(receiver, width) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return receiver + this.$mul(" ", delta);
    },
    indexOf$2(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1(receiver, pattern) {
      return this.indexOf$2(receiver, pattern, 0);
    },
    lastIndexOf$2(receiver, pattern, start) {
      var t1, t2;
      if (start == null)
        start = receiver.length;
      else if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = pattern.length;
      t2 = receiver.length;
      if (start + t1 > t2)
        start = t2 - t1;
      return receiver.lastIndexOf(pattern, start);
    },
    lastIndexOf$1(receiver, pattern) {
      return this.lastIndexOf$2(receiver, pattern, null);
    },
    contains$2(receiver, other, startIndex) {
      var t1 = receiver.length;
      if (startIndex > t1)
        throw A.wrapException(A.RangeError$range(startIndex, 0, t1, null, null));
      return A.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1(receiver, other) {
      return this.contains$2(receiver, other, 0);
    },
    compareTo$1(receiver, other) {
      var t1;
      A._asString(other);
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.String);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $isTrustedGetRuntimeType: 1,
    $isComparable: 1,
    $isPattern: 1,
    $isString: 1
  };
  A.CastConverter.prototype = {
    cast$2$0(_, RS, RT) {
      var t1 = this.$ti;
      return new A.CastConverter(this._source, t1._eval$1("@<1>")._bind$1(t1._rest[1])._bind$1(RS)._bind$1(RT)._eval$1("CastConverter<1,2,3,4>"));
    }
  };
  A._CastIterableBase.prototype = {
    get$iterator(_) {
      var t1 = A._instanceType(this);
      return new A.CastIterator(J.get$iterator$ax(this.get$_source()), t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("CastIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    take$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.take$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1(_, index) {
      return A._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    toString$0(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  A.CastIterator.prototype = {
    moveNext$0() {
      return this._source.moveNext$0();
    },
    get$current() {
      return this.$ti._rest[1]._as(this._source.get$current());
    },
    $isIterator: 1
  };
  A.CastIterable.prototype = {
    get$_source() {
      return this._source;
    }
  };
  A._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  A._CastListBase.prototype = {
    $index(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));
    },
    $indexSet(_, index, value) {
      var t1 = this.$ti;
      J.$indexSet$ax(this._source, index, t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    set$length(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    add$1(_, value) {
      var t1 = this.$ti;
      J.add$1$ax(this._source, t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    sort$1(_, compare) {
      var t1;
      this.$ti._eval$1("int(2,2)?")._as(compare);
      t1 = compare == null ? null : new A._CastListBase_sort_closure(this, compare);
      J.sort$1$ax(this._source, t1);
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A._CastListBase_sort_closure.prototype = {
    call$2(v1, v2) {
      var t1 = this.$this.$ti,
        t2 = t1._precomputed1;
      t2._as(v1);
      t2._as(v2);
      t1 = t1._rest[1];
      return this.compare.call$2(t1._as(v1), t1._as(v2));
    },
    $signature() {
      return this.$this.$ti._eval$1("int(1,1)");
    }
  };
  A.CastList.prototype = {
    cast$1$0(_, $R) {
      return new A.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source() {
      return this._source;
    }
  };
  A.CastMap.prototype = {
    cast$2$0(_, RK, RV) {
      var t1 = this.$ti;
      return new A.CastMap(this._source, t1._eval$1("@<1>")._bind$1(t1._rest[1])._bind$1(RK)._bind$1(RV)._eval$1("CastMap<1,2,3,4>"));
    },
    $index(_, key) {
      return this.$ti._eval$1("4?")._as(this._source.$index(0, key));
    },
    forEach$1(_, f) {
      this._source.forEach$1(0, new A.CastMap_forEach_closure(this, this.$ti._eval$1("~(3,4)")._as(f)));
    },
    get$keys() {
      var t1 = this.$ti;
      return A.CastIterable_CastIterable(this._source.get$keys(), t1._precomputed1, t1._rest[2]);
    },
    get$length(_) {
      var t1 = this._source;
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this._source;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty(_) {
      var t1 = this._source;
      return t1.get$isNotEmpty(t1);
    },
    get$entries(_) {
      var t1 = this._source;
      return t1.get$entries(t1).map$1$1(0, new A.CastMap_entries_closure(this), this.$ti._eval$1("MapEntry<3,4>"));
    }
  };
  A.CastMap_forEach_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this.$ti;
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      this.f.call$2(t1._rest[2]._as(key), t1._rest[3]._as(value));
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1,2)");
    }
  };
  A.CastMap_entries_closure.prototype = {
    call$1(e) {
      var t2,
        t1 = this.$this.$ti;
      t1._eval$1("MapEntry<1,2>")._as(e);
      t2 = t1._rest[3];
      return new A.MapEntry(t1._rest[2]._as(e.key), t2._as(e.value), t1._eval$1("@<3>")._bind$1(t2)._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<3,4>(MapEntry<1,2>)");
    }
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.CodeUnits.prototype = {
    get$length(_) {
      return this.__internal$_string.length;
    },
    $index(_, i) {
      var t1 = this.__internal$_string;
      if (!(i >= 0 && i < t1.length))
        return A.ioore(t1, i);
      return t1.charCodeAt(i);
    }
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      var t1 = new A._Future($.Zone__current, type$._Future_Null);
      t1._asyncComplete$1(null);
      return t1;
    },
    $signature: 32
  };
  A.SentinelValue.prototype = {};
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$first(_) {
      if (this.get$length(this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    get$last(_) {
      var _this = this;
      if (_this.get$length(_this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return _this.elementAt$1(0, _this.get$length(_this) - 1);
    },
    join$1(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = A.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    join$0(_) {
      return this.join$1(0, "");
    },
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return new A.MappedListIterable(this, t1._bind$1($T)._eval$1("1(ListIterable.E)")._as(toElement), t1._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    reduce$1(_, combine) {
      var $length, value, i, _this = this;
      A._instanceType(_this)._eval$1("ListIterable.E(ListIterable.E,ListIterable.E)")._as(combine);
      $length = _this.get$length(_this);
      if ($length === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      value = _this.elementAt$1(0, 0);
      for (i = 1; i < $length; ++i) {
        value = combine.call$2(value, _this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return value;
    },
    fold$1$2(_, initialValue, combine, $T) {
      var $length, value, i, _this = this;
      $T._as(initialValue);
      A._instanceType(_this)._bind$1($T)._eval$1("1(1,ListIterable.E)")._as(combine);
      $length = _this.get$length(_this);
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, _this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return value;
    },
    skip$1(_, count) {
      return A.SubListIterable$(this, count, null, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    take$1(_, count) {
      return A.SubListIterable$(this, 0, A.checkNotNullable(count, "count", type$.int), A._instanceType(this)._eval$1("ListIterable.E"));
    }
  };
  A.SubListIterable.prototype = {
    SubListIterable$3(_iterable, _start, _endOrLength, $E) {
      var endOrLength,
        t1 = this._start;
      A.RangeError_checkNotNegative(t1, "start");
      endOrLength = this._endOrLength;
      if (endOrLength != null) {
        A.RangeError_checkNotNegative(endOrLength, "end");
        if (t1 > endOrLength)
          throw A.wrapException(A.RangeError$range(t1, 0, endOrLength, "start", null));
      }
    },
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      if (typeof endOrLength !== "number")
        return endOrLength.$sub();
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$withLength(index, _this.get$length(0), _this, null, "index"));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1(_, count) {
      var newStart, endOrLength, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new A.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return A.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    take$1(_, count) {
      var endOrLength, t1, newEnd, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      endOrLength = _this._endOrLength;
      t1 = _this._start;
      newEnd = t1 + count;
      if (endOrLength == null)
        return A.SubListIterable$(_this.__internal$_iterable, t1, newEnd, _this.$ti._precomputed1);
      else {
        if (endOrLength < newEnd)
          return _this;
        return A.SubListIterable$(_this.__internal$_iterable, t1, newEnd, _this.$ti._precomputed1);
      }
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = _this.$ti._precomputed1;
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), growable, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        B.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    }
  };
  A.ListIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.set$__internal$_current(null);
        return false;
      }
      _this.set$__internal$_current(t2.elementAt$1(t1, t3));
      ++_this.__internal$_index;
      return true;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      var t1 = A._instanceType(this);
      return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("MappedIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.set$__internal$_current(_this._f.call$1(t1.get$current()));
        return true;
      }
      _this.set$__internal$_current(null);
      return false;
    },
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("2?")._as(_current);
    },
    $isIterator: 1
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.WhereIterable.prototype = {
    get$iterator(_) {
      return new A.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("WhereIterator<1>"));
    },
    map$1$1(_, toElement, $T) {
      var t1 = this.$ti;
      return new A.MappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(toElement), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    }
  };
  A.WhereIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (A.boolConversionCheck(t2.call$1(t1.get$current())))
          return true;
      return false;
    },
    get$current() {
      return this._iterator.get$current();
    },
    $isIterator: 1
  };
  A.ExpandIterable.prototype = {
    get$iterator(_) {
      var t1 = this.$ti;
      return new A.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, B.C_EmptyIterator, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("ExpandIterator<1,2>"));
    }
  };
  A.ExpandIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, _this = this;
      if (_this._currentExpansion == null)
        return false;
      for (t1 = _this._iterator, t2 = _this._f; !_this._currentExpansion.moveNext$0();) {
        _this.set$__internal$_current(null);
        if (t1.moveNext$0()) {
          _this.set$_currentExpansion(null);
          _this.set$_currentExpansion(J.get$iterator$ax(t2.call$1(t1.get$current())));
        } else
          return false;
      }
      _this.set$__internal$_current(_this._currentExpansion.get$current());
      return true;
    },
    set$_currentExpansion(_currentExpansion) {
      this._currentExpansion = this.$ti._eval$1("Iterator<2>?")._as(_currentExpansion);
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("2?")._as(_current);
    },
    $isIterator: 1
  };
  A.TakeIterable.prototype = {
    get$iterator(_) {
      return new A.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, A._instanceType(this)._eval$1("TakeIterator<1>"));
    }
  };
  A.EfficientLengthTakeIterable.prototype = {
    get$length(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  A.TakeIterator.prototype = {
    moveNext$0() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current() {
      if (this._remaining < 0) {
        this.$ti._precomputed1._as(null);
        return null;
      }
      return this._iterator.get$current();
    },
    $isIterator: 1
  };
  A.SkipIterable.prototype = {
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.SkipIterable(this.__internal$_iterable, this._skipCount + count, A._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator(_) {
      return new A.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount, A._instanceType(this)._eval$1("SkipIterator<1>"));
    }
  };
  A.EfficientLengthSkipIterable.prototype = {
    get$length(_) {
      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  A.SkipIterator.prototype = {
    moveNext$0() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    },
    $isIterator: 1
  };
  A.SkipWhileIterable.prototype = {
    get$iterator(_) {
      return new A.SkipWhileIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("SkipWhileIterator<1>"));
    }
  };
  A.SkipWhileIterator.prototype = {
    moveNext$0() {
      var t1, t2, _this = this;
      if (!_this._hasSkipped) {
        _this._hasSkipped = true;
        for (t1 = _this._iterator, t2 = _this._f; t1.moveNext$0();)
          if (!A.boolConversionCheck(t2.call$1(t1.get$current())))
            return true;
      }
      return _this._iterator.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    },
    $isIterator: 1
  };
  A.EmptyIterable.prototype = {
    get$iterator(_) {
      return B.C_EmptyIterator;
    },
    get$isEmpty(_) {
      return true;
    },
    get$length(_) {
      return 0;
    },
    elementAt$1(_, index) {
      throw A.wrapException(A.RangeError$range(index, 0, 0, "index", null));
    },
    join$1(_, separator) {
      return "";
    },
    map$1$1(_, toElement, $T) {
      this.$ti._bind$1($T)._eval$1("1(2)")._as(toElement);
      return new A.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    take$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    }
  };
  A.EmptyIterator.prototype = {
    moveNext$0() {
      return false;
    },
    get$current() {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    $isIterator: 1
  };
  A.WhereTypeIterable.prototype = {
    get$iterator(_) {
      return new A.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("WhereTypeIterator<1>"));
    }
  };
  A.WhereTypeIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)
        if (t2._is(t1.get$current()))
          return true;
      return false;
    },
    get$current() {
      return this.$ti._precomputed1._as(this._source.get$current());
    },
    $isIterator: 1
  };
  A.FixedLengthListMixin.prototype = {
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1(receiver, value) {
      A.instanceType(receiver)._eval$1("FixedLengthListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
    }
  };
  A.UnmodifiableListMixin.prototype = {
    $indexSet(_, index, value) {
      A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1(_, value) {
      A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to an unmodifiable list"));
    },
    sort$1(_, compare) {
      A._instanceType(this)._eval$1("int(UnmodifiableListMixin.E,UnmodifiableListMixin.E)?")._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    }
  };
  A.UnmodifiableListBase.prototype = {};
  A.ReversedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  };
  A.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  A._Record_2.prototype = {$recipe: "+(1,2)", $shape: 1};
  A.ConstantMap.prototype = {
    cast$2$0(_, RK, RV) {
      var t1 = A._instanceType(this);
      return A.Map_castFrom(this, t1._precomputed1, t1._rest[1], RK, RV);
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    get$entries(_) {
      return new A._SyncStarIterable(this.entries$body$ConstantMap(0), A._instanceType(this)._eval$1("_SyncStarIterable<MapEntry<1,2>>"));
    },
    entries$body$ConstantMap($async$_) {
      var $async$self = this;
      return function() {
        var _ = $async$_;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, key, t4;
        return function $async$get$entries($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys(), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self), t3 = t2._rest[1], t2 = t2._eval$1("@<1>")._bind$1(t3)._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current();
                t4 = $async$self.$index(0, key);
                $async$goto = 4;
                return $async$iterator._async$_current = new A.MapEntry(key, t4 == null ? t3._as(t4) : t4, t2), 1;
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    },
    $isMap: 1
  };
  A.ConstantStringMap.prototype = {
    get$length(_) {
      return this._values.length;
    },
    get$_keys() {
      var keys = this.$keys;
      if (keys == null) {
        keys = Object.keys(this._jsIndex);
        this.$keys = keys;
      }
      return keys;
    },
    containsKey$1(key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsIndex.hasOwnProperty(key);
    },
    $index(_, key) {
      if (!this.containsKey$1(key))
        return null;
      return this._values[this._jsIndex[key]];
    },
    forEach$1(_, f) {
      var keys, values, t1, i;
      this.$ti._eval$1("~(1,2)")._as(f);
      keys = this.get$_keys();
      values = this._values;
      for (t1 = keys.length, i = 0; i < t1; ++i)
        f.call$2(keys[i], values[i]);
    },
    get$keys() {
      return new A._KeysOrValues(this.get$_keys(), this.$ti._eval$1("_KeysOrValues<1>"));
    }
  };
  A._KeysOrValues.prototype = {
    get$length(_) {
      return this.__js_helper$_elements.length;
    },
    get$isEmpty(_) {
      return 0 === this.__js_helper$_elements.length;
    },
    get$isNotEmpty(_) {
      return 0 !== this.__js_helper$_elements.length;
    },
    get$iterator(_) {
      var t1 = this.__js_helper$_elements;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    }
  };
  A._KeysOrValuesOrElementsIterator.prototype = {
    get$current() {
      var t1 = this.__js_helper$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this.__js_helper$_index;
      if (t1 >= _this.__js_helper$_length) {
        _this.set$__js_helper$_current(null);
        return false;
      }
      _this.set$__js_helper$_current(_this.__js_helper$_elements[t1]);
      ++_this.__js_helper$_index;
      return true;
    },
    set$__js_helper$_current(_current) {
      this.__js_helper$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.GeneralConstantMap.prototype = {
    _getMap$0() {
      var t1, _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        t1 = _this.$ti;
        backingMap = new A.JsConstantLinkedHashMap(t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("JsConstantLinkedHashMap<1,2>"));
        A.fillLiteralMap(_this._jsData, backingMap);
        _this.$map = backingMap;
      }
      return backingMap;
    },
    containsKey$1(key) {
      return this._getMap$0().containsKey$1(key);
    },
    $index(_, key) {
      return this._getMap$0().$index(0, key);
    },
    forEach$1(_, f) {
      this.$ti._eval$1("~(1,2)")._as(f);
      this._getMap$0().forEach$1(0, f);
    },
    get$keys() {
      var t1 = this._getMap$0();
      return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$length(_) {
      return this._getMap$0().__js_helper$_length;
    }
  };
  A.Instantiation.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Instantiation1 && this._genericClosure.$eq(0, other._genericClosure) && A.getRuntimeTypeOfClosure(this) === A.getRuntimeTypeOfClosure(other);
    },
    get$hashCode(_) {
      return A.Object_hash(this._genericClosure, A.getRuntimeTypeOfClosure(this), B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = B.JSArray_methods.join$1([A.createRuntimeType(this.$ti._precomputed1)], ", ");
      return this._genericClosure.toString$0(0) + " with " + ("<" + t1 + ">");
    }
  };
  A.Instantiation1.prototype = {
    call$2(a0, a1) {
      return this._genericClosure.call$1$2(a0, a1, this.$ti._rest[0]);
    },
    $signature() {
      return A.instantiatedGenericFunctionType(A.closureFunctionType(this._genericClosure), this.$ti);
    }
  };
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      return "Null check operator used on a null value";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    },
    $isException: 1
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A._CyclicInitializationError.prototype = {
    toString$0(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A._AssertionError.prototype = {
    toString$0(_) {
      return "Assertion failed: " + A.Error_safeToString(this.message);
    }
  };
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this.__js_helper$_length !== 0;
    },
    get$keys() {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values(_) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(this, t1._eval$1("LinkedHashMapKeyIterable<1>")), new A.JsLinkedHashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1(key) {
      var strings, nums;
      if (typeof key == "string") {
        strings = this.__js_helper$_strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this.__js_helper$_nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else
        return this.internalContainsKey$1(key);
    },
    internalContainsKey$1(key) {
      var rest = this.__js_helper$_rest;
      if (rest == null)
        return false;
      return this.internalFindBucketIndex$2(rest[this.internalComputeHashCode$1(key)], key) >= 0;
    },
    addAll$1(_, other) {
      A._instanceType(this)._eval$1("Map<1,2>")._as(other).forEach$1(0, new A.JsLinkedHashMap_addAll_closure(this));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this.__js_helper$_strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this.__js_helper$_nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this.__js_helper$_strings;
        _this._addHashTableEntry$3(strings == null ? _this.__js_helper$_strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this.__js_helper$_nums;
        _this._addHashTableEntry$3(nums == null ? _this.__js_helper$_nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2(key, ifAbsent) {
      var t2, value, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._eval$1("2()")._as(ifAbsent);
      if (_this.containsKey$1(key)) {
        t2 = _this.$index(0, key);
        return t2 == null ? t1._rest[1]._as(t2) : t2;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this._removeHashTableEntry$2(_this.__js_helper$_strings, key);
      else if (typeof key == "number" && (key & 0x3fffffff) === key)
        return _this._removeHashTableEntry$2(_this.__js_helper$_nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        delete rest[hash];
      return cell.hashMapCellValue;
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this;
      A._instanceType(_this)._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell,
        t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    _removeHashTableEntry$2(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = table[key];
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.hashMapCellValue;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    _newLinkedCell$2(key, value) {
      var _this = this,
        t1 = A._instanceType(_this),
        cell = new A.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    $isLinkedHashMap: 1
  };
  A.JsLinkedHashMap_values_closure.prototype = {
    call$1(each) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1 = t1.$index(0, t2._precomputed1._as(each));
      return t1 == null ? t2._rest[1]._as(t1) : t1;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  A.JsLinkedHashMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1.$indexSet(0, t2._precomputed1._as(key), t2._rest[1]._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map,
        t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
      t2._cell = t1._first;
      return t2;
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.set$__js_helper$_current(null);
        return false;
      } else {
        _this.set$__js_helper$_current(cell.hashMapCellKey);
        _this._cell = cell._next;
        return true;
      }
    },
    set$__js_helper$_current(_current) {
      this.__js_helper$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.JsConstantLinkedHashMap.prototype = {
    internalComputeHashCode$1(key) {
      return A.constantHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    }
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 58
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 73
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(A._asString(tag));
    },
    $signature: 84
  };
  A._Record.prototype = {
    _getRti$0() {
      return A.evaluateRtiForRecord(this.$recipe, this._getFieldValues$0());
    },
    toString$0(_) {
      return this._toString$1(false);
    },
    _toString$1(safe) {
      var t2, separator, i, key, value,
        keys = this._fieldKeys$0(),
        values = this._getFieldValues$0(),
        t1 = (safe ? "" + "Record " : "") + "(";
      for (t2 = keys.length, separator = "", i = 0; i < t2; ++i, separator = ", ") {
        t1 += separator;
        key = keys[i];
        if (typeof key == "string")
          t1 = t1 + key + ": ";
        if (!(i < values.length))
          return A.ioore(values, i);
        value = values[i];
        t1 = safe ? t1 + A.Primitives_safeToString(value) : t1 + A.S(value);
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _fieldKeys$0() {
      var t1,
        shapeTag = this.$shape;
      for (; $._Record__computedFieldKeys.length <= shapeTag;)
        B.JSArray_methods.add$1($._Record__computedFieldKeys, null);
      t1 = $._Record__computedFieldKeys[shapeTag];
      if (t1 == null) {
        t1 = this._computeFieldKeys$0();
        B.JSArray_methods.$indexSet($._Record__computedFieldKeys, shapeTag, t1);
      }
      return t1;
    },
    _computeFieldKeys$0() {
      var i, names, last,
        recipe = this.$recipe,
        position = recipe.indexOf("("),
        joinedNames = recipe.substring(1, position),
        fields = recipe.substring(position),
        arity = fields === "()" ? 0 : fields.replace(/[^,]/g, "").length + 1,
        t1 = type$.Object,
        result = J.JSArray_JSArray$allocateGrowable(arity, t1);
      for (i = 0; i < arity; ++i)
        result[i] = i;
      if (joinedNames !== "") {
        names = joinedNames.split(",");
        i = names.length;
        for (last = arity; i > 0;) {
          --last;
          --i;
          B.JSArray_methods.$indexSet(result, last, names[i]);
        }
      }
      return A.List_List$unmodifiable(result, t1);
    }
  };
  A._Record2.prototype = {
    _getFieldValues$0() {
      return [this._0, this._1];
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._Record2 && this.$shape === other.$shape && J.$eq$(this._0, other._0) && J.$eq$(this._1, other._1);
    },
    get$hashCode(_) {
      return A.Object_hash(this.$shape, this._0, this._1, B.C_SentinelValue);
    }
  };
  A.JSSyntaxRegExp.prototype = {
    toString$0(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    get$_nativeGlobalVersion() {
      var _this = this,
        t1 = _this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeGlobalRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
    },
    get$_nativeAnchoredVersion() {
      var _this = this,
        t1 = _this._nativeAnchoredRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeAnchoredRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern + "|()", t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
    },
    firstMatch$1(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new A._MatchImplementation(m);
    },
    allMatches$2(_, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._AllMatchesIterable(this, string, start);
    },
    allMatches$1(_, string) {
      return this.allMatches$2(0, string, 0);
    },
    _execGlobal$2(string, start) {
      var match,
        regexp = this.get$_nativeGlobalVersion();
      if (regexp == null)
        regexp = type$.Object._as(regexp);
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      return new A._MatchImplementation(match);
    },
    _execAnchored$2(string, start) {
      var match,
        regexp = this.get$_nativeAnchoredVersion();
      if (regexp == null)
        regexp = type$.Object._as(regexp);
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      if (0 >= match.length)
        return A.ioore(match, -1);
      if (match.pop() != null)
        return null;
      return new A._MatchImplementation(match);
    },
    matchAsPrefix$2(_, string, start) {
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, null, null));
      return this._execAnchored$2(string, start);
    },
    $isPattern: 1,
    $isRegExp: 1
  };
  A._MatchImplementation.prototype = {
    get$start(_) {
      return this._match.index;
    },
    get$end() {
      var t1 = this._match;
      return t1.index + t1[0].length;
    },
    $index(_, index) {
      var t1 = this._match;
      if (!(index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    $isMatch: 1,
    $isRegExpMatch: 1
  };
  A._AllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._AllMatchesIterator(this._re, this._string, this.__js_helper$_start);
    }
  };
  A._AllMatchesIterator.prototype = {
    get$current() {
      var t1 = this.__js_helper$_current;
      return t1 == null ? type$.RegExpMatch._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, t3, match, nextIndex, _this = this,
        string = _this._string;
      if (string == null)
        return false;
      t1 = _this._nextIndex;
      t2 = string.length;
      if (t1 <= t2) {
        t3 = _this._regExp;
        match = t3._execGlobal$2(string, t1);
        if (match != null) {
          _this.__js_helper$_current = match;
          nextIndex = match.get$end();
          if (match._match.index === nextIndex) {
            if (t3._nativeRegExp.unicode) {
              t1 = _this._nextIndex;
              t3 = t1 + 1;
              if (t3 < t2) {
                if (!(t1 >= 0 && t1 < t2))
                  return A.ioore(string, t1);
                t1 = string.charCodeAt(t1);
                if (t1 >= 55296 && t1 <= 56319) {
                  if (!(t3 >= 0))
                    return A.ioore(string, t3);
                  t1 = string.charCodeAt(t3);
                  t1 = t1 >= 56320 && t1 <= 57343;
                } else
                  t1 = false;
              } else
                t1 = false;
            } else
              t1 = false;
            nextIndex = (t1 ? nextIndex + 1 : nextIndex) + 1;
          }
          _this._nextIndex = nextIndex;
          return true;
        }
      }
      _this._string = _this.__js_helper$_current = null;
      return false;
    },
    $isIterator: 1
  };
  A.StringMatch.prototype = {
    get$end() {
      return this.start + this.pattern.length;
    },
    $index(_, g) {
      if (g !== 0)
        A.throwExpression(A.RangeError$value(g, null));
      return this.pattern;
    },
    $isMatch: 1,
    get$start(receiver) {
      return this.start;
    }
  };
  A._StringAllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);
    }
  };
  A._StringAllMatchesIterator.prototype = {
    moveNext$0() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new A.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current() {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    },
    $isIterator: 1
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this._value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '" + this.__late_helper$_name + "' has not been initialized."));
      return t1;
    }
  };
  A.NativeByteBuffer.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteBuffer_RkP;
    },
    $isTrustedGetRuntimeType: 1
  };
  A.NativeTypedData.prototype = {};
  A.NativeByteData.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteData_zNC;
    },
    _getFloat64$2(receiver, byteOffset, littleEndian) {
      return receiver.getFloat64(byteOffset, littleEndian);
    },
    $isTrustedGetRuntimeType: 1
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      A._asInt(value);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeInt8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int8List_ekJ;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1
  };
  A.NativeUint32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint32List_2bx;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint32Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1,
    $isUint32List: 1
  };
  A.NativeUint8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8List_WLA;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isNativeUint8List: 1,
    $isUint8List: 1
  };
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    },
    $isType: 1
  };
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 11
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 68
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 2
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 2
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    }
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 1
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(_, value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/?")._as(value);
      if (value == null)
        value = t1._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t2 = _this._future;
        if (t1._eval$1("Future<1>")._is(value))
          t2._chainFuture$1(value);
        else
          t2._completeWithValue$1(value);
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    },
    $isCompleter: 1
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 7
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, type$.StackTrace._as(stackTrace)));
    },
    $signature: 87
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(A._asInt(errorCode), result);
    },
    $signature: 51
  };
  A._SyncStarIterator.prototype = {
    get$current() {
      var t1 = this._async$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    _resumeBody$2(errorCode, errorValue) {
      var body, t1, exception;
      errorCode = A._asInt(errorCode);
      errorValue = errorValue;
      body = this._body;
      for (; true;)
        try {
          t1 = body(this, errorCode, errorValue);
          return t1;
        } catch (exception) {
          errorValue = exception;
          errorCode = 1;
        }
    },
    moveNext$0() {
      var nestedIterator, exception, value, suspendedBodies, _this = this, _null = null, errorValue = null, errorCode = 0;
      for (; true;) {
        nestedIterator = _this._nestedIterator;
        if (nestedIterator != null)
          try {
            if (nestedIterator.moveNext$0()) {
              _this.set$_async$_current(nestedIterator.get$current());
              return true;
            } else
              _this.set$_nestedIterator(_null);
          } catch (exception) {
            errorValue = exception;
            errorCode = 1;
            _this.set$_nestedIterator(_null);
          }
        value = _this._resumeBody$2(errorCode, errorValue);
        if (1 === value)
          return true;
        if (0 === value) {
          _this.set$_async$_current(_null);
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._body = A._SyncStarIterator__terminatedBody;
            return false;
          }
          if (0 >= suspendedBodies.length)
            return A.ioore(suspendedBodies, -1);
          _this._body = suspendedBodies.pop();
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (2 === value) {
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (3 === value) {
          errorValue = _this._datum;
          _this._datum = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this.set$_async$_current(_null);
            _this._body = A._SyncStarIterator__terminatedBody;
            throw errorValue;
            return false;
          }
          if (0 >= suspendedBodies.length)
            return A.ioore(suspendedBodies, -1);
          _this._body = suspendedBodies.pop();
          errorCode = 1;
          continue;
        }
        throw A.wrapException(A.StateError$("sync*"));
      }
      return false;
    },
    _yieldStar$1(iterable) {
      var t1, t2, _this = this;
      if (iterable instanceof A._SyncStarIterable) {
        t1 = iterable._outerHelper();
        t2 = _this._suspendedBodies;
        if (t2 == null)
          t2 = _this._suspendedBodies = [];
        B.JSArray_methods.add$1(t2, _this._body);
        _this._body = t1;
        return 2;
      } else {
        _this.set$_nestedIterator(J.get$iterator$ax(iterable));
        return 2;
      }
    },
    set$_async$_current(_current) {
      this._async$_current = this.$ti._eval$1("1?")._as(_current);
    },
    set$_nestedIterator(_nestedIterator) {
      this._nestedIterator = this.$ti._eval$1("Iterator<1>?")._as(_nestedIterator);
    },
    $isIterator: 1
  };
  A._SyncStarIterable.prototype = {
    get$iterator(_) {
      return new A._SyncStarIterator(this._outerHelper(), this.$ti._eval$1("_SyncStarIterator<1>"));
    }
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A.Future_Future$microtask_closure.prototype = {
    call$0() {
      var e, s, exception;
      try {
        this.result._complete$1(this.computation.call$0());
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._completeWithErrorCallback(this.result, e, s);
      }
    },
    $signature: 1
  };
  A.Future_Future$delayed_closure.prototype = {
    call$0() {
      var e, s, exception, _this = this,
        t1 = _this.computation;
      if (t1 == null) {
        _this.T._as(null);
        _this.result._complete$1(null);
      } else
        try {
          _this.result._complete$1(t1.call$0());
        } catch (exception) {
          e = A.unwrapException(exception);
          s = A.getTraceFromException(exception);
          A._completeWithErrorCallback(_this.result, e, s);
        }
    },
    $signature: 1
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      if ((this.future._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      this._completeError$2(error, stackTrace);
    },
    completeError$1(error) {
      return this.completeError$2(error, null);
    },
    $isCompleter: 1
  };
  A._AsyncCompleter.prototype = {
    complete$1(_, value) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("1/?")._as(value);
      t2 = this.future;
      if ((t2._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t2._asyncComplete$1(t1._eval$1("1/")._as(value));
    },
    complete$0(_) {
      return this.complete$1(0, null);
    },
    _completeError$2(error, stackTrace) {
      this.future._asyncCompleteError$2(error, stackTrace);
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1(asyncError) {
      var exception, _this = this,
        errorCallback = _this.errorCallback,
        result = null,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = asyncError.error,
        t4 = _this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t4.runBinary$3$3(errorCallback, t3, asyncError.stackTrace, t1, t2, type$.StackTrace);
      else
        result = t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), t3, t1, t2);
      try {
        t1 = _this.$ti._eval$1("2/")._as(result);
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((_this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    _setChained$1(source) {
      this._state = this._state & 1 | 4;
      this._resultOrListeners = source;
    },
    then$1$2$onError(f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else {
        $R._eval$1("@<0/>")._bind$1(t1._precomputed1)._eval$1("1(2)")._as(f);
        if (onError != null)
          onError = A._registerErrorHandler(onError, currentZone);
      }
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result,
        t1 = this.$ti;
      t1._bind$1($E)._eval$1("1/(2)")._as(f);
      result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 19, f, onError, t1._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(source);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__addListener_closure(_this, listener)));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(source);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__prependListeners_closure(_box_0, _this)));
      }
    },
    _removeListeners$0() {
      var current = type$.nullable__FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _complete$1(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value))
        if (t1._is(value))
          A._Future__chainCoreFutureSync(value, _this);
        else
          _this._chainForeignFuture$1(value);
      else {
        listeners = _this._removeListeners$0();
        t1._precomputed1._as(value);
        _this._state = 8;
        _this._resultOrListeners = value;
        A._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2(error, stackTrace) {
      var listeners;
      type$.StackTrace._as(stackTrace);
      listeners = this._removeListeners$0();
      this._setErrorObject$1(A.AsyncError$(error, stackTrace));
      A._Future__propagateToListeners(this, listeners);
    },
    _asyncComplete$1(value) {
      var t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(value);
    },
    _asyncCompleteWithValue$1(value) {
      var _this = this;
      _this.$ti._precomputed1._as(value);
      _this._state ^= 2;
      A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__asyncCompleteWithValue_closure(_this, value)));
    },
    _chainFuture$1(value) {
      var t1 = this.$ti;
      t1._eval$1("Future<1>")._as(value);
      if (t1._is(value)) {
        A._Future__chainCoreFutureAsync(value, this);
        return;
      }
      this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2(error, stackTrace) {
      type$.StackTrace._as(stackTrace);
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, type$.void_Function._as(new A._Future__asyncCompleteError_closure(this, error, stackTrace)));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 1
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 1
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 11
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeError$2(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    $signature: 62
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 1
  };
  A._Future__chainCoreFutureAsync_closure.prototype = {
    call$0() {
      A._Future__chainCoreFutureSync(this._box_0.source, this.target);
    },
    $signature: 1
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 1
  };
  A._Future__asyncCompleteError_closure.prototype = {
    call$0() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 1
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.hasError && type$.AsyncError._as(_this._box_1.source._resultOrListeners).error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
          t1.listenerHasError = true;
        }
        return;
      }
      if (completeResult instanceof A._Future) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 1
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(_) {
      return this.originalSource;
    },
    $signature: 94
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, t3, t4, t5, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t3 = t2.$ti;
        t4 = t3._precomputed1;
        t5 = t4._as(this.sourceResult);
        t1.listenerValueOrError = t2.result._zone.runUnary$2$2(t3._eval$1("2/(1)")._as(t2.callback), t5, t3._eval$1("2/"), t4);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = A.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 1
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 1
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    get$length(_) {
      var t2, t3, _this = this, t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      t2 = A._instanceType(_this);
      t3 = t2._eval$1("~(1)?")._as(new A.Stream_length_closure(t1, _this));
      type$.nullable_void_Function._as(new A.Stream_length_closure0(t1, future));
      A._EventStreamSubscription$(_this._target, _this._eventType, t3, false, t2._precomputed1);
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(_) {
      A._instanceType(this.$this)._precomputed1._as(_);
      ++this._box_0.count;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      this.future._complete$1(this._box_0.count);
    },
    $signature: 1
  };
  A._StreamIterator.prototype = {};
  A._Zone.prototype = {$isZone: 1};
  A._rootHandleError_closure.prototype = {
    call$0() {
      A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    $signature: 1
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      type$.void_Function._as(f);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f, type$.void);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2(f, arg, $T) {
      var e, s, exception;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg, type$.void, $T);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runBinaryGuarded$2$3(f, arg1, arg2, T1, T2) {
      var e, s, exception;
      T1._eval$1("@<0>")._bind$1(T2)._eval$1("~(1,2)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$2(arg1, arg2);
          return;
        }
        A._rootRunBinary(null, null, this, f, arg1, arg2, type$.void, T1, T2);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    bindUnaryCallbackGuarded$1$1(f, $T) {
      return new A._RootZone_bindUnaryCallbackGuarded_closure(this, $T._eval$1("~(0)")._as(f), $T);
    },
    handleUncaughtError$2(error, stackTrace) {
      A._rootHandleError(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    run$1$1(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3(f, arg1, arg2, $R, T1, T2) {
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    registerBinaryCallback$3$1(f, $R, T1, T2) {
      return $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 1
  };
  A._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, t1._as(arg), t1);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    get$keys() {
      return new A._HashMapKeyIterable(this, A._instanceType(this)._eval$1("_HashMapKeyIterable<1>"));
    },
    containsKey$1(key) {
      var t1 = this._containsKey$1(key);
      return t1;
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    addAll$1(_, other) {
      A._instanceType(this)._eval$1("Map<1,2>")._as(other).forEach$1(0, new A._HashMap_addAll_closure(this));
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(key);
    },
    _get$1(key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._strings = A._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._nums = A._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        A._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._collection$_keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._collection$_keys = null;
        }
      }
    },
    remove$1(_, key) {
      var t1 = this._remove$1(key);
      return t1;
    },
    _remove$1(key) {
      var hash, bucket, index, result, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return null;
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      --_this._collection$_length;
      _this._collection$_keys = null;
      result = bucket.splice(index, 2)[1];
      if (0 === bucket.length)
        delete rest[hash];
      return result;
    },
    forEach$1(_, action) {
      var keys, $length, t2, i, key, t3, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1,2)")._as(action);
      keys = _this._computeKeys$0();
      for ($length = keys.length, t2 = t1._precomputed1, t1 = t1._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2._as(key);
        t3 = _this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
        if (keys !== _this._collection$_keys)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_keys;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_keys = result;
    },
    _collection$_addHashTableEntry$3(table, key, value) {
      var t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (table[key] == null) {
        ++this._collection$_length;
        this._collection$_keys = null;
      }
      A._HashMap__setTableEntry(table, key, value);
    },
    _computeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    },
    $isHashMap: 1
  };
  A._HashMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1.$indexSet(0, t2._precomputed1._as(key), t2._rest[1]._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_map._collection$_length !== 0;
    },
    get$iterator(_) {
      var t1 = this._collection$_map;
      return new A._HashMapKeyIterator(t1, t1._computeKeys$0(), this.$ti._eval$1("_HashMapKeyIterator<1>"));
    },
    forEach$1(_, f) {
      var t1, keys, $length, i;
      this.$ti._eval$1("~(1)")._as(f);
      t1 = this._collection$_map;
      keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1._collection$_keys)
          throw A.wrapException(A.ConcurrentModificationError$(t1));
      }
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._collection$_keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._collection$_keys)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(keys[offset]);
        _this._offset = offset + 1;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._HashSet.prototype = {
    get$iterator(_) {
      return new A._HashSetIterator(this, this._computeElements$0(), A._instanceType(this)._eval$1("_HashSetIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._nums;
        return nums == null ? false : nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._strings = A._HashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._nums = A._HashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(element);
    },
    _add$1(element) {
      var rest, hash, bucket, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      ++_this._collection$_length;
      _this._collection$_elements = null;
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._nums, object);
      else
        return _this._remove$1(object);
    },
    _remove$1(object) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      --_this._collection$_length;
      _this._collection$_elements = null;
      bucket.splice(index, 1);
      if (0 === bucket.length)
        delete rest[hash];
      return true;
    },
    clear$0(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._strings = _this._nums = _this._collection$_rest = _this._collection$_elements = null;
        _this._collection$_length = 0;
      }
    },
    _computeElements$0() {
      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_elements;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_elements = result;
    },
    _collection$_addHashTableEntry$2(table, element) {
      A._instanceType(this)._precomputed1._as(element);
      if (table[element] != null)
        return false;
      table[element] = 0;
      ++this._collection$_length;
      this._collection$_elements = null;
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      if (table != null && table[element] != null) {
        delete table[element];
        --this._collection$_length;
        this._collection$_elements = null;
        return true;
      } else
        return false;
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i], element))
          return i;
      return -1;
    }
  };
  A._HashSetIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        elements = _this._collection$_elements,
        offset = _this._offset,
        t1 = _this._set;
      if (elements !== t1._collection$_elements)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(elements[offset]);
        _this._offset = offset + 1;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._LinkedHashSet.prototype = {
    get$iterator(_) {
      var _this = this,
        t1 = new A._LinkedHashSetIterator(_this, _this._collection$_modifications, A._instanceType(_this)._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, t1;
      if (object !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return type$.nullable__LinkedHashSetCell._as(strings[object]) != null;
      } else {
        t1 = this._contains$1(object);
        return t1;
      }
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1)")._as(action);
      cell = _this._collection$_first;
      modifications = _this._collection$_modifications;
      for (t1 = t1._precomputed1; cell != null;) {
        action.call$1(t1._as(cell._collection$_element));
        if (modifications !== _this._collection$_modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._collection$_next;
      }
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._strings = A._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._nums = A._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(element);
    },
    _add$1(element) {
      var rest, hash, bucket, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._nums, object);
      else
        return _this._remove$1(object);
    },
    _remove$1(object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._collection$_unlinkCell$1(cell);
      return true;
    },
    _collection$_addHashTableEntry$2(table, element) {
      A._instanceType(this)._precomputed1._as(element);
      if (type$.nullable__LinkedHashSetCell._as(table[element]) != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = type$.nullable__LinkedHashSetCell._as(table[element]);
      if (cell == null)
        return false;
      this._collection$_unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _collection$_newLinkedCell$1(element) {
      var t1, _this = this,
        cell = new A._LinkedHashSetCell(A._instanceType(_this)._precomputed1._as(element));
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _collection$_unlinkCell$1(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._collection$_element, element))
          return i;
      return -1;
    },
    $isLinkedHashSet: 1
  };
  A._LinkedHashSetCell.prototype = {};
  A._LinkedHashSetIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(_this.$ti._eval$1("1?")._as(cell._collection$_element));
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.UnmodifiableListView.prototype = {
    get$length(_) {
      return J.get$length$asx(this._collection$_source);
    },
    $index(_, index) {
      return J.elementAt$1$ax(this._collection$_source, index);
    }
  };
  A.HashMap_HashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 31
  };
  A.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 31
  };
  A.LinkedList.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A._LinkedListIterator(_this, _this._modificationCount, _this._collection$_first, _this.$ti._eval$1("_LinkedListIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    clear$0(_) {
      var t1, next, _this = this, _null = null;
      ++_this._modificationCount;
      if (_this._collection$_length === 0)
        return;
      t1 = _this._collection$_first;
      t1.toString;
      next = t1;
      do {
        t1 = next._collection$_next;
        t1.toString;
        next.set$_list(_null);
        next.set$_collection$_previous(_null);
        next.set$_collection$_next(_null);
        if (t1 !== _this._collection$_first) {
          next = t1;
          continue;
        } else
          break;
      } while (true);
      _this.set$_collection$_first(_null);
      _this._collection$_length = 0;
    },
    get$first(_) {
      var t1;
      if (this._collection$_length === 0)
        throw A.wrapException(A.StateError$("No such element"));
      t1 = this._collection$_first;
      t1.toString;
      return t1;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    _insertBefore$3$updateFirst(entry, newEntry, updateFirst) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("1?")._as(entry);
      t1._precomputed1._as(newEntry);
      if (newEntry._list != null)
        throw A.wrapException(A.StateError$("LinkedListEntry is already in a LinkedList"));
      ++_this._modificationCount;
      newEntry.set$_list(_this);
      if (_this._collection$_length === 0) {
        newEntry.set$_collection$_next(newEntry);
        newEntry.set$_collection$_previous(newEntry);
        _this.set$_collection$_first(newEntry);
        ++_this._collection$_length;
        return;
      }
      t1 = entry._collection$_previous;
      t1.toString;
      newEntry.set$_collection$_previous(t1);
      newEntry.set$_collection$_next(entry);
      t1.set$_collection$_next(newEntry);
      entry.set$_collection$_previous(newEntry);
      ++_this._collection$_length;
    },
    _unlink$1(entry) {
      var t1, next, _this = this, _null = null;
      _this.$ti._precomputed1._as(entry);
      ++_this._modificationCount;
      entry._collection$_next.set$_collection$_previous(entry._collection$_previous);
      t1 = entry._collection$_previous;
      next = entry._collection$_next;
      t1.set$_collection$_next(next);
      --_this._collection$_length;
      entry.set$_collection$_previous(_null);
      entry.set$_collection$_next(_null);
      entry.set$_list(_null);
      if (_this._collection$_length === 0)
        _this.set$_collection$_first(_null);
      else if (entry === _this._collection$_first)
        _this.set$_collection$_first(next);
    },
    set$_collection$_first(_first) {
      this._collection$_first = this.$ti._eval$1("1?")._as(_first);
    }
  };
  A._LinkedListIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this._list;
      if (_this._modificationCount !== t1._modificationCount)
        throw A.wrapException(A.ConcurrentModificationError$(_this));
      if (t1._collection$_length !== 0)
        t1 = _this._visitedFirst && _this._collection$_next === t1.get$first(0);
      else
        t1 = true;
      if (t1) {
        _this.set$_collection$_current(null);
        return false;
      }
      _this._visitedFirst = true;
      _this.set$_collection$_current(_this._collection$_next);
      _this.set$_collection$_next(_this._collection$_next._collection$_next);
      return true;
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    set$_collection$_next(_next) {
      this._collection$_next = this.$ti._eval$1("1?")._as(_next);
    },
    $isIterator: 1
  };
  A.LinkedListEntry.prototype = {
    set$_list(_list) {
      this._list = this.$ti._eval$1("LinkedList<LinkedListEntry.E>?")._as(_list);
    },
    set$_collection$_next(_next) {
      this._collection$_next = this.$ti._eval$1("LinkedListEntry.E?")._as(_next);
    },
    set$_collection$_previous(_previous) {
      this._collection$_previous = this.$ti._eval$1("LinkedListEntry.E?")._as(_previous);
    }
  };
  A.ListBase.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListBase.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    get$isEmpty(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$last(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, this.get$length(receiver) - 1);
    },
    contains$1(receiver, element) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(this.$index(receiver, i), element))
          return true;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    where$1(receiver, test) {
      var t1 = A.instanceType(receiver);
      return new A.WhereIterable(receiver, t1._eval$1("bool(ListBase.E)")._as(test), t1._eval$1("WhereIterable<ListBase.E>"));
    },
    map$1$1(receiver, f, $T) {
      var t1 = A.instanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(ListBase.E)")._as(f), t1._eval$1("@<ListBase.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(receiver, count) {
      return A.SubListIterable$(receiver, count, null, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    take$1(receiver, count) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(count, "count", type$.int), A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    toList$1$growable(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$isEmpty(receiver)) {
        t1 = A.instanceType(receiver)._eval$1("ListBase.E");
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      first = _this.$index(receiver, 0);
      result = A.List_List$filled(_this.get$length(receiver), first, growable, A.instanceType(receiver)._eval$1("ListBase.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        B.JSArray_methods.$indexSet(result, i, _this.$index(receiver, i));
      return result;
    },
    toList$0(receiver) {
      return this.toList$1$growable(receiver, true);
    },
    add$1(receiver, element) {
      var t1;
      A.instanceType(receiver)._eval$1("ListBase.E")._as(element);
      t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    clear$0(receiver) {
      this.set$length(receiver, 0);
    },
    removeLast$0(receiver) {
      var result, _this = this;
      if (_this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      result = _this.$index(receiver, _this.get$length(receiver) - 1);
      _this.set$length(receiver, _this.get$length(receiver) - 1);
      return result;
    },
    sort$1(receiver, compare) {
      var t2,
        t1 = A.instanceType(receiver);
      t1._eval$1("int(ListBase.E,ListBase.E)?")._as(compare);
      t2 = compare == null ? A.collection_ListBase__compareAny$closure() : compare;
      A.Sort__doSort(receiver, 0, this.get$length(receiver) - 1, t2, t1._eval$1("ListBase.E"));
    },
    fillRange$3(receiver, start, end, fill) {
      var i;
      A.instanceType(receiver)._eval$1("ListBase.E?")._as(fill);
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      for (i = start; i < end; ++i)
        this.$indexSet(receiver, i, fill);
    },
    indexOf$2(receiver, element, start) {
      var i;
      for (i = start; i < this.get$length(receiver); ++i)
        if (J.$eq$(this.$index(receiver, i), element))
          return i;
      return -1;
    },
    indexOf$1(receiver, element) {
      return this.indexOf$2(receiver, element, 0);
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.MapBase.prototype = {
    cast$2$0(_, RK, RV) {
      var t1 = A._instanceType(this);
      return A.Map_castFrom(this, t1._eval$1("MapBase.K"), t1._eval$1("MapBase.V"), RK, RV);
    },
    forEach$1(_, action) {
      var t2, key, t3,
        t1 = A._instanceType(this);
      t1._eval$1("~(MapBase.K,MapBase.V)")._as(action);
      for (t2 = J.get$iterator$ax(this.get$keys()), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
      }
    },
    get$entries(_) {
      return J.map$1$1$ax(this.get$keys(), new A.MapBase_entries_closure(this), A._instanceType(this)._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$keys());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$keys());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$keys());
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  A.MapBase_entries_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t2._eval$1("MapBase.K")._as(key);
      t1 = t1.$index(0, key);
      if (t1 == null)
        t1 = t2._eval$1("MapBase.V")._as(t1);
      return new A.MapEntry(key, t1, t2._eval$1("@<MapBase.K>")._bind$1(t2._eval$1("MapBase.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("MapEntry<MapBase.K,MapBase.V>(MapBase.K)");
    }
  };
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += A.S(k);
      t1._contents = t2 + ": ";
      t1._contents += A.S(v);
    },
    $signature: 18
  };
  A._DoubleLinkedQueueEntry.prototype = {
    _link$2(previous, next) {
      var _this = this,
        t1 = A._instanceType(_this)._eval$1("_DoubleLinkedQueueEntry<1>?");
      t1._as(previous);
      t1._as(next);
      _this.set$_nextLink(next);
      _this.set$_previousLink(previous);
      if (previous != null)
        previous.set$_nextLink(_this);
      if (next != null)
        next.set$_previousLink(_this);
    },
    set$_previousLink(_previousLink) {
      this._previousLink = A._instanceType(this)._eval$1("_DoubleLinkedQueueEntry<1>?")._as(_previousLink);
    },
    set$_nextLink(_nextLink) {
      this._nextLink = A._instanceType(this)._eval$1("_DoubleLinkedQueueEntry<1>?")._as(_nextLink);
    }
  };
  A._DoubleLinkedQueueElement.prototype = {
    _remove$0() {
      var t1, _this = this;
      _this.set$_queue(null);
      t1 = _this._previousLink;
      if (t1 != null)
        t1.set$_nextLink(_this._nextLink);
      t1 = _this._nextLink;
      if (t1 != null)
        t1.set$_previousLink(_this._previousLink);
      _this.set$_nextLink(null);
      _this.set$_previousLink(null);
      return _this.element;
    },
    _asNonSentinelEntry$0() {
      return this;
    },
    set$_queue(_queue) {
      this._queue = this.$ti._eval$1("DoubleLinkedQueue<1>?")._as(_queue);
    }
  };
  A._DoubleLinkedQueueSentinel.prototype = {
    _asNonSentinelEntry$0() {
      return null;
    },
    _remove$0() {
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A.DoubleLinkedQueue.prototype = {
    get$length(_) {
      return this._elementCount;
    },
    get$isEmpty(_) {
      var t1 = this._sentinel;
      return t1._nextLink === t1;
    },
    get$iterator(_) {
      return new A._DoubleLinkedQueueIterator(this, this._sentinel._nextLink, this.$ti._eval$1("_DoubleLinkedQueueIterator<1>"));
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    $isEfficientLengthIterable: 1,
    $isQueue: 1
  };
  A._DoubleLinkedQueueIterator.prototype = {
    moveNext$0() {
      var _this = this, _null = null,
        t1 = _this._nextEntry,
        nextElement = t1 == null ? _null : t1._asNonSentinelEntry$0();
      if (nextElement == null) {
        _this.set$_collection$_current(_null);
        _this.set$_nextEntry(_null);
        _this.set$_queue(_null);
        return false;
      }
      t1 = _this._queue;
      if (t1 != nextElement._queue)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      _this.set$_collection$_current(nextElement.element);
      _this.set$_nextEntry(nextElement._nextLink);
      return true;
    },
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    set$_queue(_queue) {
      this._queue = this.$ti._eval$1("DoubleLinkedQueue<1>?")._as(_queue);
    },
    set$_nextEntry(_nextEntry) {
      this._nextEntry = this.$ti._eval$1("_DoubleLinkedQueueEntry<1>?")._as(_nextEntry);
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.ListQueue.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head, _this.$ti._eval$1("_ListQueueIterator<1>"));
    },
    get$isEmpty(_) {
      return this._head === this._tail;
    },
    get$length(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    elementAt$1(_, index) {
      var t2, t3, _this = this,
        t1 = _this.get$length(0);
      if (0 > index || index >= t1)
        A.throwExpression(A.IndexError$withLength(index, t1, _this, null, "index"));
      t1 = _this._table;
      t2 = t1.length;
      t3 = (_this._head + index & t2 - 1) >>> 0;
      if (!(t3 >= 0 && t3 < t2))
        return A.ioore(t1, t3);
      t3 = t1[t3];
      return t3 == null ? _this.$ti._precomputed1._as(t3) : t3;
    },
    clear$0(_) {
      var _this = this,
        i = _this._head;
      if (i !== _this._tail) {
        for (; i !== _this._tail; i = (i + 1 & _this._table.length - 1) >>> 0)
          B.JSArray_methods.$indexSet(_this._table, i, null);
        _this._head = _this._tail = 0;
        ++_this._modificationCount;
      }
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    removeFirst$0() {
      var t2, result, _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      ++_this._modificationCount;
      t2 = _this._table;
      if (!(t1 < t2.length))
        return A.ioore(t2, t1);
      result = t2[t1];
      if (result == null)
        result = _this.$ti._precomputed1._as(result);
      B.JSArray_methods.$indexSet(t2, t1, null);
      _this._head = (_this._head + 1 & _this._table.length - 1) >>> 0;
      return result;
    },
    _add$1(element) {
      var t2, t3, newTable, split, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(element);
      B.JSArray_methods.$indexSet(_this._table, _this._tail, element);
      t2 = _this._tail;
      t3 = _this._table.length;
      t2 = (t2 + 1 & t3 - 1) >>> 0;
      _this._tail = t2;
      if (_this._head === t2) {
        newTable = A.List_List$filled(t3 * 2, null, false, t1._eval$1("1?"));
        t1 = _this._table;
        t2 = _this._head;
        split = t1.length - t2;
        B.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
        B.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
        _this._head = 0;
        _this._tail = _this._table.length;
        _this.set$_table(newTable);
      }
      ++_this._modificationCount;
    },
    set$_table(_table) {
      this._table = this.$ti._eval$1("List<1?>")._as(_table);
    },
    $isQueue: 1
  };
  A._ListQueueIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, t3, _this = this,
        t1 = _this._queue;
      if (_this._modificationCount !== t1._modificationCount)
        A.throwExpression(A.ConcurrentModificationError$(t1));
      t2 = _this._collection$_position;
      if (t2 === _this._end) {
        _this.set$_collection$_current(null);
        return false;
      }
      t3 = t1._table;
      if (!(t2 < t3.length))
        return A.ioore(t3, t2);
      _this.set$_collection$_current(t3[t2]);
      _this._collection$_position = (_this._collection$_position + 1 & t1._table.length - 1) >>> 0;
      return true;
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.SetBase.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    addAll$1(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(A._instanceType(this)._eval$1("Iterable<1>")._as(elements)); t1.moveNext$0();)
        this.add$1(0, t1.get$current());
    },
    removeAll$1(elements) {
      var t1, _i;
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, A.throwConcurrentModificationError)(elements), ++_i)
        this.remove$1(0, elements[_i]);
    },
    map$1$1(_, f, $T) {
      var t1 = A._instanceType(this);
      return new A.EfficientLengthMappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    take$1(_, n) {
      return A.TakeIterable_TakeIterable(this, n, A._instanceType(this)._precomputed1);
    },
    skip$1(_, n) {
      return A.SkipIterable_SkipIterable(this, n, A._instanceType(this)._precomputed1);
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current();
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  A._SetBase.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._convert$_data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._convert$_data.__js_helper$_length : this._convert$_computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(0) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(0) > 0;
    },
    get$keys() {
      if (this._processed == null) {
        var t1 = this._convert$_data;
        return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      type$.void_Function_String_dynamic._as(f);
      if (_this._processed == null)
        return _this._convert$_data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._convert$_data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0() {
      var keys = type$.nullable_List_dynamic._as(this._convert$_data);
      if (keys == null)
        keys = this._convert$_data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      return this._convert$_parent.get$length(0);
    },
    elementAt$1(_, index) {
      var t1 = this._convert$_parent;
      if (t1._processed == null)
        t1 = t1.get$keys().elementAt$1(0, index);
      else {
        t1 = t1._convert$_computeKeys$0();
        if (!(index >= 0 && index < t1.length))
          return A.ioore(t1, index);
        t1 = t1[index];
      }
      return t1;
    },
    get$iterator(_) {
      var t1 = this._convert$_parent;
      if (t1._processed == null) {
        t1 = t1.get$keys();
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    }
  };
  A._Utf8Decoder__decoder_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 19
  };
  A._Utf8Decoder__decoderNonfatal_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: false});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 19
  };
  A.AsciiCodec.prototype = {
    encode$1(source) {
      return B.AsciiEncoder_127.convert$1(source);
    },
    decode$1(_, bytes) {
      var t1;
      type$.List_int._as(bytes);
      t1 = B.AsciiDecoder_false_127.convert$1(bytes);
      return t1;
    }
  };
  A._UnicodeSubsetEncoder.prototype = {
    convert$1(string) {
      var stringLength, $length, result, t1, i, codeUnit;
      A._asString(string);
      stringLength = string.length;
      $length = A.RangeError_checkValidRange(0, null, stringLength) - 0;
      result = new Uint8Array($length);
      for (t1 = ~this._subsetMask, i = 0; i < $length; ++i) {
        if (!(i < stringLength))
          return A.ioore(string, i);
        codeUnit = string.charCodeAt(i);
        if ((codeUnit & t1) !== 0)
          throw A.wrapException(A.ArgumentError$value(string, "string", "Contains invalid characters."));
        if (!(i < $length))
          return A.ioore(result, i);
        result[i] = codeUnit;
      }
      return result;
    }
  };
  A.AsciiEncoder.prototype = {};
  A._UnicodeSubsetDecoder.prototype = {
    convert$1(bytes) {
      var t1, end, t2, i, byte;
      type$.List_int._as(bytes);
      t1 = J.getInterceptor$asx(bytes);
      end = A.RangeError_checkValidRange(0, null, t1.get$length(bytes));
      for (t2 = ~this._subsetMask, i = 0; i < end; ++i) {
        byte = t1.$index(bytes, i);
        if ((byte & t2) >>> 0 !== 0) {
          if (!this._allowInvalid)
            throw A.wrapException(A.FormatException$("Invalid value in input: " + A.S(byte), null, null));
          return this._convertInvalid$3(bytes, 0, end);
        }
      }
      return A.String_String$fromCharCodes(bytes, 0, end);
    },
    _convertInvalid$3(bytes, start, end) {
      var t1, t2, i, t3, value;
      type$.List_int._as(bytes);
      for (t1 = ~this._subsetMask, t2 = J.getInterceptor$asx(bytes), i = start, t3 = ""; i < end; ++i) {
        value = t2.$index(bytes, i);
        t3 += A.Primitives_stringFromCharCode((value & t1) >>> 0 !== 0 ? 65533 : value);
      }
      return t3.charCodeAt(0) == 0 ? t3 : t3;
    }
  };
  A.AsciiDecoder.prototype = {};
  A.Base64Codec.prototype = {
    normalize$3(source, start, end) {
      var inverseAlphabet, t2, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, t3, digit2, char0, value, endLength, $length,
        _s64_ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        _s31_ = "Invalid base64 encoding length ",
        t1 = source.length;
      end = A.RangeError_checkValidRange(start, end, t1);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (t2 = inverseAlphabet.length, i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        if (!(i < t1))
          return A.ioore(source, i);
        char = source.charCodeAt(i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            if (!(i0 < t1))
              return A.ioore(source, i0);
            digit1 = A.hexDigitValue(source.charCodeAt(i0));
            t3 = i0 + 1;
            if (!(t3 < t1))
              return A.ioore(source, t3);
            digit2 = A.hexDigitValue(source.charCodeAt(t3));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          if (!(char0 >= 0 && char0 < t2))
            return A.ioore(inverseAlphabet, char0);
          value = inverseAlphabet[char0];
          if (value >= 0) {
            if (!(value < 64))
              return A.ioore(_s64_, value);
            char0 = _s64_.charCodeAt(value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t3 = buffer == null ? null : buffer._contents.length;
                if (t3 == null)
                  t3 = 0;
                firstPadding = t3 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t3 = buffer;
            } else
              t3 = buffer;
            t3._contents += B.JSString_methods.substring$2(source, sliceStart, i);
            t3._contents += A.Primitives_stringFromCharCode(char);
            sliceStart = i0;
            continue;
          }
        }
        throw A.wrapException(A.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = buffer._contents += B.JSString_methods.substring$2(source, sliceStart, end);
        t2 = t1.length;
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = B.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw A.wrapException(A.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return B.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = B.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw A.wrapException(A.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = B.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {};
  A.Base64Decoder.prototype = {
    convert$1(input) {
      var end, decoder, t1, t2;
      A._asString(input);
      end = A.RangeError_checkValidRange(0, null, input.length);
      if (0 === end)
        return new Uint8Array(0);
      decoder = new A._Base64Decoder();
      t1 = decoder.decode$3(0, input, 0, end);
      t1.toString;
      t2 = decoder._convert$_state;
      if (t2 < -1)
        A.throwExpression(A.FormatException$("Missing padding character", input, end));
      if (t2 > 0)
        A.throwExpression(A.FormatException$("Invalid length, must be multiple of four", input, end));
      decoder._convert$_state = -1;
      return t1;
    }
  };
  A._Base64Decoder.prototype = {
    decode$3(_, input, start, end) {
      var buffer, _this = this,
        t1 = _this._convert$_state;
      if (t1 < 0) {
        _this._convert$_state = A._Base64Decoder__checkPadding(input, start, end, t1);
        return null;
      }
      if (start === end)
        return new Uint8Array(0);
      buffer = A._Base64Decoder__allocateBuffer(input, start, end, t1);
      _this._convert$_state = A._Base64Decoder_decodeChunk(input, start, end, buffer, 0, _this._convert$_state);
      return buffer;
    }
  };
  A.Codec.prototype = {};
  A._FusedCodec.prototype = {};
  A.Converter.prototype = {
    cast$2$0(_, RS, RT) {
      var t1 = A._instanceType(this);
      return new A.CastConverter(this, t1._eval$1("@<Converter.S>")._bind$1(t1._eval$1("Converter.T"))._bind$1(RS)._bind$1(RT)._eval$1("CastConverter<1,2,3,4>"));
    }
  };
  A.Encoding.prototype = {};
  A.JsonCodec.prototype = {
    decode$2$reviver(_, source, reviver) {
      var t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonDecoder.prototype = {};
  A.Utf8Codec.prototype = {
    decode$1(_, codeUnits) {
      type$.List_int._as(codeUnits);
      return B.Utf8Decoder_false.convert$1(codeUnits);
    }
  };
  A.Utf8Encoder.prototype = {
    convert$1(string) {
      var stringLength, end, $length, t1, t2, encoder, t3;
      A._asString(string);
      stringLength = string.length;
      end = A.RangeError_checkValidRange(0, null, stringLength);
      $length = end - 0;
      if ($length === 0)
        return new Uint8Array(0);
      t1 = $length * 3;
      t2 = new Uint8Array(t1);
      encoder = new A._Utf8Encoder(t2);
      if (encoder._fillBuffer$3(string, 0, end) !== end) {
        t3 = end - 1;
        if (!(t3 >= 0 && t3 < stringLength))
          return A.ioore(string, t3);
        encoder._writeReplacementCharacter$0();
      }
      return new Uint8Array(t2.subarray(0, A._checkValidRange(0, encoder._bufferIndex, t1)));
    }
  };
  A._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0() {
      var _this = this,
        t1 = _this._convert$_buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1,
        t4 = t1.length;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      if (!(t3 < t4))
        return A.ioore(t1, t3);
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 189;
    },
    _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, t4, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._convert$_buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t4 = t1.length;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3(str, start, end) {
      var t1, t2, t3, stringIndex, codeUnit, t4, t5, _this = this;
      if (start !== end) {
        t1 = end - 1;
        if (!(t1 >= 0 && t1 < str.length))
          return A.ioore(str, t1);
        t1 = (str.charCodeAt(t1) & 64512) === 55296;
      } else
        t1 = false;
      if (t1)
        --end;
      for (t1 = _this._convert$_buffer, t2 = t1.length, t3 = str.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        if (!(stringIndex < t3))
          return A.ioore(str, stringIndex);
        codeUnit = str.charCodeAt(stringIndex);
        if (codeUnit <= 127) {
          t4 = _this._bufferIndex;
          if (t4 >= t2)
            break;
          _this._bufferIndex = t4 + 1;
          t1[t4] = codeUnit;
        } else {
          t4 = codeUnit & 64512;
          if (t4 === 55296) {
            if (_this._bufferIndex + 4 > t2)
              break;
            t4 = stringIndex + 1;
            if (!(t4 < t3))
              return A.ioore(str, t4);
            if (_this._writeSurrogate$2(codeUnit, str.charCodeAt(t4)))
              stringIndex = t4;
          } else if (t4 === 56320) {
            if (_this._bufferIndex + 3 > t2)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t4 = _this._bufferIndex;
            t5 = t4 + 1;
            if (t5 >= t2)
              break;
            _this._bufferIndex = t5;
            if (!(t4 < t2))
              return A.ioore(t1, t4);
            t1[t4] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t5 + 1;
            t1[t5] = codeUnit & 63 | 128;
          } else {
            t4 = _this._bufferIndex;
            if (t4 + 2 >= t2)
              break;
            t5 = _this._bufferIndex = t4 + 1;
            if (!(t4 < t2))
              return A.ioore(t1, t4);
            t1[t4] = codeUnit >>> 12 | 224;
            t4 = _this._bufferIndex = t5 + 1;
            if (!(t5 < t2))
              return A.ioore(t1, t5);
            t1[t5] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t4 + 1;
            if (!(t4 < t2))
              return A.ioore(t1, t4);
            t1[t4] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  A.Utf8Decoder.prototype = {
    convert$1(codeUnits) {
      return new A._Utf8Decoder(this._allowMalformed)._convertGeneral$4(type$.List_int._as(codeUnits), 0, null, true);
    }
  };
  A._Utf8Decoder.prototype = {
    _convertGeneral$4(codeUnits, start, maybeEnd, single) {
      var end, casted, bytes, errorOffset, t1, result, message, _this = this;
      type$.List_int._as(codeUnits);
      end = A.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits));
      if (start === end)
        return "";
      if (codeUnits instanceof Uint8Array) {
        casted = codeUnits;
        bytes = casted;
        errorOffset = 0;
      } else {
        bytes = A._Utf8Decoder__makeNativeUint8List(codeUnits, start, end);
        end -= start;
        errorOffset = start;
        start = 0;
      }
      if (end - start >= 15) {
        t1 = _this.allowMalformed;
        result = A._Utf8Decoder__convertInterceptedUint8List(t1, bytes, start, end);
        if (result != null) {
          if (!t1)
            return result;
          if (result.indexOf("\ufffd") < 0)
            return result;
        }
      }
      result = _this._decodeRecursive$4(bytes, start, end, true);
      t1 = _this._convert$_state;
      if ((t1 & 1) !== 0) {
        message = A._Utf8Decoder_errorDescription(t1);
        _this._convert$_state = 0;
        throw A.wrapException(A.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));
      }
      return result;
    },
    _decodeRecursive$4(bytes, start, end, single) {
      var mid, s1, _this = this;
      if (end - start > 1000) {
        mid = B.JSInt_methods._tdivFast$1(start + end, 2);
        s1 = _this._decodeRecursive$4(bytes, start, mid, false);
        if ((_this._convert$_state & 1) !== 0)
          return s1;
        return s1 + _this._decodeRecursive$4(bytes, mid, end, single);
      }
      return _this.decodeGeneral$4(bytes, start, end, single);
    },
    decodeGeneral$4(bytes, start, end, single) {
      var byte, t2, type, t3, i0, markEnd, i1, m, _this = this,
        _s256_ = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE",
        _s144_ = " \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA",
        _65533 = 65533,
        state = _this._convert$_state,
        char = _this._charOrIndex,
        buffer = new A.StringBuffer(""),
        i = start + 1,
        t1 = bytes.length;
      if (!(start >= 0 && start < t1))
        return A.ioore(bytes, start);
      byte = bytes[start];
      $label0$0:
        for (t2 = _this.allowMalformed; true;) {
          for (; true; i = i0) {
            if (!(byte >= 0 && byte < 256))
              return A.ioore(_s256_, byte);
            type = _s256_.charCodeAt(byte) & 31;
            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
            t3 = state + type;
            if (!(t3 >= 0 && t3 < 144))
              return A.ioore(_s144_, t3);
            state = _s144_.charCodeAt(t3);
            if (state === 0) {
              buffer._contents += A.Primitives_stringFromCharCode(char);
              if (i === end)
                break $label0$0;
              break;
            } else if ((state & 1) !== 0) {
              if (t2)
                switch (state) {
                  case 69:
                  case 67:
                    buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    break;
                  case 65:
                    buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    --i;
                    break;
                  default:
                    t3 = buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    buffer._contents = t3 + A.Primitives_stringFromCharCode(_65533);
                    break;
                }
              else {
                _this._convert$_state = state;
                _this._charOrIndex = i - 1;
                return "";
              }
              state = 0;
            }
            if (i === end)
              break $label0$0;
            i0 = i + 1;
            if (!(i >= 0 && i < t1))
              return A.ioore(bytes, i);
            byte = bytes[i];
          }
          i0 = i + 1;
          if (!(i >= 0 && i < t1))
            return A.ioore(bytes, i);
          byte = bytes[i];
          if (byte < 128) {
            while (true) {
              if (!(i0 < end)) {
                markEnd = end;
                break;
              }
              i1 = i0 + 1;
              if (!(i0 >= 0 && i0 < t1))
                return A.ioore(bytes, i0);
              byte = bytes[i0];
              if (byte >= 128) {
                markEnd = i1 - 1;
                i0 = i1;
                break;
              }
              i0 = i1;
            }
            if (markEnd - i < 20)
              for (m = i; m < markEnd; ++m) {
                if (!(m < t1))
                  return A.ioore(bytes, m);
                buffer._contents += A.Primitives_stringFromCharCode(bytes[m]);
              }
            else
              buffer._contents += A.String_String$fromCharCodes(bytes, i, markEnd);
            if (markEnd === end)
              break $label0$0;
            i = i0;
          } else
            i = i0;
        }
      if (single && state > 32)
        if (t2)
          buffer._contents += A.Primitives_stringFromCharCode(_65533);
        else {
          _this._convert$_state = 77;
          _this._charOrIndex = end;
          return "";
        }
      _this._convert$_state = state;
      _this._charOrIndex = char;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.DateTime.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && this._core$_value === other._core$_value && true;
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._core$_value, type$.DateTime._as(other)._core$_value);
    },
    get$hashCode(_) {
      var t1 = this._core$_value;
      return (t1 ^ B.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this));
      return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
    },
    $isComparable: 1
  };
  A.Duration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && this._duration === other._duration;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._duration);
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._duration, type$.Duration._as(other)._duration);
    },
    toString$0(_) {
      var minutesPadding, seconds, secondsPadding,
        microseconds = this._duration,
        microseconds0 = microseconds % 3600000000,
        minutes = B.JSInt_methods._tdivFast$1(microseconds0, 60000000);
      microseconds0 %= 60000000;
      minutesPadding = minutes < 10 ? "0" : "";
      seconds = B.JSInt_methods._tdivFast$1(microseconds0, 1000000);
      secondsPadding = seconds < 10 ? "0" : "";
      return "" + (microseconds / 3600000000 | 0) + ":" + minutesPadding + minutes + ":" + secondsPadding + seconds + "." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(microseconds0 % 1000000), 6, "0");
    },
    $isComparable: 1
  };
  A._Enum.prototype = {
    toString$0(_) {
      return this._enumToString$0();
    }
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.getTraceFromException(this.$thrownJsError);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  A.TypeError.prototype = {};
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.get$invalidValue());
    },
    get$invalidValue() {
      return this.invalidValue;
    }
  };
  A.RangeError.prototype = {
    get$invalidValue() {
      return A._asNumQ(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$invalidValue() {
      return A._asInt(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (A._asInt(this.invalidValue) < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      var message = this.message;
      return message != null ? "UnimplementedError: " + message : "UnimplementedError";
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    },
    $isException: 1
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineEnd, lineNum, lineStart, previousCharWasCR, i, char, end, start, prefix, postfix,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineEnd = source.length, lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          if (!(i < lineEnd))
            return A.ioore(source, i);
          char = source.charCodeAt(i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        for (i = offset; i < lineEnd; ++i) {
          if (!(i >= 0))
            return A.ioore(source, i);
          char = source.charCodeAt(i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    },
    $isException: 1
  };
  A.Iterable.prototype = {
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(this, t1._bind$1($T)._eval$1("1(Iterable.E)")._as(toElement), t1._eval$1("Iterable.E"), $T);
    },
    where$1(_, test) {
      var t1 = A._instanceType(this);
      return new A.WhereIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("WhereIterable<Iterable.E>"));
    },
    join$1(_, separator) {
      var first, t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      first = J.toString$0$(iterator.get$current());
      if (!iterator.moveNext$0())
        return first;
      if (separator.length === 0) {
        t1 = first;
        do
          t1 += J.toString$0$(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        t1 = first;
        do
          t1 = t1 + separator + J.toString$0$(iterator.get$current());
        while (iterator.moveNext$0());
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A._instanceType(this)._eval$1("Iterable.E"));
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty(_) {
      return !this.get$isEmpty(this);
    },
    take$1(_, count) {
      return A.TakeIterable_TakeIterable(this, count, A._instanceType(this)._eval$1("Iterable.E"));
    },
    skip$1(_, count) {
      return A.SkipIterable_SkipIterable(this, count, A._instanceType(this)._eval$1("Iterable.E"));
    },
    skipWhile$1(_, test) {
      var t1 = A._instanceType(this);
      return new A.SkipWhileIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("SkipWhileIterable<Iterable.E>"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current();
    },
    get$last(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      do
        result = it.get$current();
      while (it.moveNext$0());
      return result;
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current();
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    toString$0(_) {
      return A.Iterable_iterableToShortString(this, "(", ")");
    }
  };
  A.MapEntry.prototype = {
    toString$0(_) {
      return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, 0);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    get$runtimeType(_) {
      return A.getRuntimeTypeOfDartObject(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return this._stackTrace;
    },
    $isStackTrace: 1
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isStringSink: 1
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 93
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    $signature: 44
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(B.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 45
  };
  A._Uri.prototype = {
    get$_text() {
      var t1, t2, t3, t4, _this = this,
        value = _this.___Uri__text_FI;
      if (value === $) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? "" + t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + A.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        value !== $ && A.throwLateFieldADI("_text");
        value = _this.___Uri__text_FI = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return value;
    },
    get$pathSegments() {
      var pathToSplit, t1, result, _this = this,
        value = _this.___Uri_pathSegments_FI;
      if (value === $) {
        pathToSplit = _this.path;
        t1 = pathToSplit.length;
        if (t1 !== 0) {
          if (0 >= t1)
            return A.ioore(pathToSplit, 0);
          t1 = pathToSplit.charCodeAt(0) === 47;
        } else
          t1 = false;
        if (t1)
          pathToSplit = B.JSString_methods.substring$1(pathToSplit, 1);
        result = pathToSplit.length === 0 ? B.List_empty1 : A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(pathToSplit.split("/"), type$.JSArray_String), type$.dynamic_Function_String._as(A.core_Uri_decodeComponent$closure()), type$.MappedListIterable_String_dynamic), type$.String);
        _this.___Uri_pathSegments_FI !== $ && A.throwLateFieldADI("pathSegments");
        _this.set$___Uri_pathSegments_FI(result);
        value = result;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode_FI;
      if (value === $) {
        result = B.JSString_methods.get$hashCode(_this.get$_text());
        _this.___Uri_hashCode_FI !== $ && A.throwLateFieldADI("hashCode");
        _this.___Uri_hashCode_FI = result;
        value = result;
      }
      return value;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host(_) {
      var host = this._host;
      if (host == null)
        return "";
      if (B.JSString_methods.startsWith$1(host, "["))
        return B.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port(_) {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query() {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    isScheme$1(scheme) {
      var thisScheme = this.scheme;
      if (scheme.length !== thisScheme.length)
        return false;
      return A._caseInsensitiveCompareStart(scheme, thisScheme, 0) >= 0;
    },
    _mergePaths$2(base, reference) {
      var backCount, refStart, baseEnd, t1, newEnd, delta, t2, t3;
      for (backCount = 0, refStart = 0; B.JSString_methods.startsWith$2(reference, "../", refStart);) {
        refStart += 3;
        ++backCount;
      }
      baseEnd = B.JSString_methods.lastIndexOf$1(base, "/");
      t1 = base.length;
      while (true) {
        if (!(baseEnd > 0 && backCount > 0))
          break;
        newEnd = B.JSString_methods.lastIndexOf$2(base, "/", baseEnd - 1);
        if (newEnd < 0)
          break;
        delta = baseEnd - newEnd;
        t2 = delta !== 2;
        if (!t2 || delta === 3) {
          t3 = newEnd + 1;
          if (!(t3 < t1))
            return A.ioore(base, t3);
          if (base.charCodeAt(t3) === 46)
            if (t2) {
              t2 = newEnd + 2;
              if (!(t2 < t1))
                return A.ioore(base, t2);
              t2 = base.charCodeAt(t2) === 46;
            } else
              t2 = true;
          else
            t2 = false;
        } else
          t2 = false;
        if (t2)
          break;
        --backCount;
        baseEnd = newEnd;
      }
      return B.JSString_methods.replaceRange$3(base, baseEnd + 1, null, B.JSString_methods.substring$1(reference, refStart - 3 * backCount));
    },
    resolve$1(reference) {
      return this.resolveUri$1(A.Uri_parse(reference));
    },
    resolveUri$1(reference) {
      var targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, packageNameEnd, packageName, mergedPath, t1, _this = this, _null = null;
      if (reference.get$scheme().length !== 0) {
        targetScheme = reference.get$scheme();
        if (reference.get$hasAuthority()) {
          targetUserInfo = reference.get$userInfo();
          targetHost = reference.get$host(reference);
          targetPort = reference.get$hasPort() ? reference.get$port(reference) : _null;
        } else {
          targetPort = _null;
          targetHost = targetPort;
          targetUserInfo = "";
        }
        targetPath = A._Uri__removeDotSegments(reference.get$path(reference));
        targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;
      } else {
        targetScheme = _this.scheme;
        if (reference.get$hasAuthority()) {
          targetUserInfo = reference.get$userInfo();
          targetHost = reference.get$host(reference);
          targetPort = A._Uri__makePort(reference.get$hasPort() ? reference.get$port(reference) : _null, targetScheme);
          targetPath = A._Uri__removeDotSegments(reference.get$path(reference));
          targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;
        } else {
          targetUserInfo = _this._userInfo;
          targetHost = _this._host;
          targetPort = _this._port;
          targetPath = _this.path;
          if (reference.get$path(reference) === "")
            targetQuery = reference.get$hasQuery() ? reference.get$query() : _this._query;
          else {
            packageNameEnd = A._Uri__packageNameEnd(_this, targetPath);
            if (packageNameEnd > 0) {
              packageName = B.JSString_methods.substring$2(targetPath, 0, packageNameEnd);
              targetPath = reference.get$hasAbsolutePath() ? packageName + A._Uri__removeDotSegments(reference.get$path(reference)) : packageName + A._Uri__removeDotSegments(_this._mergePaths$2(B.JSString_methods.substring$1(targetPath, packageName.length), reference.get$path(reference)));
            } else if (reference.get$hasAbsolutePath())
              targetPath = A._Uri__removeDotSegments(reference.get$path(reference));
            else if (targetPath.length === 0)
              if (targetHost == null)
                targetPath = targetScheme.length === 0 ? reference.get$path(reference) : A._Uri__removeDotSegments(reference.get$path(reference));
              else
                targetPath = A._Uri__removeDotSegments("/" + reference.get$path(reference));
            else {
              mergedPath = _this._mergePaths$2(targetPath, reference.get$path(reference));
              t1 = targetScheme.length === 0;
              if (!t1 || targetHost != null || B.JSString_methods.startsWith$1(targetPath, "/"))
                targetPath = A._Uri__removeDotSegments(mergedPath);
              else
                targetPath = A._Uri__normalizeRelativePath(mergedPath, !t1 || targetHost != null);
            }
            targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;
          }
        }
      }
      return A._Uri$_internal(targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, reference.get$hasFragment() ? reference.get$fragment() : _null);
    },
    get$hasAuthority() {
      return this._host != null;
    },
    get$hasPort() {
      return this._port != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    get$hasAbsolutePath() {
      return B.JSString_methods.startsWith$1(this.path, "/");
    },
    toFilePath$0() {
      var pathSegments, _this = this,
        t1 = _this.scheme;
      if (t1 !== "" && t1 !== "file")
        throw A.wrapException(A.UnsupportedError$("Cannot extract a file path from a " + t1 + " URI"));
      t1 = _this._query;
      if ((t1 == null ? "" : t1) !== "")
        throw A.wrapException(A.UnsupportedError$(string$.Cannotfq));
      t1 = _this._fragment;
      if ((t1 == null ? "" : t1) !== "")
        throw A.wrapException(A.UnsupportedError$(string$.Cannotff));
      t1 = $.$get$_Uri__isWindowsCached();
      if (t1)
        t1 = A._Uri__toWindowsFilePath(_this);
      else {
        if (_this._host != null && _this.get$host(0) !== "")
          A.throwExpression(A.UnsupportedError$(string$.Cannotn));
        pathSegments = _this.get$pathSegments();
        A._Uri__checkNonWindowsPathReservedCharacters(pathSegments, false);
        t1 = A.StringBuffer__writeAll(B.JSString_methods.startsWith$1(_this.path, "/") ? "" + "/" : "", pathSegments, "/");
        t1 = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return t1;
    },
    toString$0(_) {
      return this.get$_text();
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host(0) === other.get$host(other))
                if (_this.get$port(0) === other.get$port(other))
                  if (_this.path === other.get$path(other)) {
                    t1 = _this._query;
                    t2 = t1 == null;
                    if (!t2 === other.get$hasQuery()) {
                      if (t2)
                        t1 = "";
                      if (t1 === other.get$query()) {
                        t1 = _this._fragment;
                        t2 = t1 == null;
                        if (!t2 === other.get$hasFragment()) {
                          if (t2)
                            t1 = "";
                          t1 = t1 === other.get$fragment();
                        } else
                          t1 = false;
                      } else
                        t1 = false;
                    } else
                      t1 = false;
                  } else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    set$___Uri_pathSegments_FI(___Uri_pathSegments_FI) {
      this.___Uri_pathSegments_FI = type$.List_String._as(___Uri_pathSegments_FI);
    },
    $isUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path(receiver) {
      return this.path;
    }
  };
  A._Uri__makePath_closure.prototype = {
    call$1(s) {
      return A._Uri__uriEncode(B.List_XRg0, A._asString(s), B.C_Utf8Codec, false);
    },
    $signature: 8
  };
  A.UriData.prototype = {
    get$uri() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._separatorIndices;
        if (0 >= t1.length)
          return A.ioore(t1, 0);
        t2 = _this._text;
        t1 = t1[0] + 1;
        queryIndex = B.JSString_methods.indexOf$2(t2, "?", t1);
        end = t2.length;
        if (queryIndex >= 0) {
          query = A._Uri__normalizeOrSubstring(t2, queryIndex + 1, end, B.List_oFp, false, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new A._DataUri("data", "", _null, _null, A._Uri__normalizeOrSubstring(t2, t1, end, B.List_XRg, false, false), query, _null);
      }
      return t1;
    },
    toString$0(_) {
      var t2,
        t1 = this._separatorIndices;
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      t2 = this._text;
      return t1[0] === -1 ? "data:" + t2 : t2;
    }
  };
  A._createTables_build.prototype = {
    call$2(state, defaultTransition) {
      var t1 = this.tables;
      if (!(state < t1.length))
        return A.ioore(t1, state);
      t1 = t1[state];
      B.NativeUint8List_methods.fillRange$3(t1, 0, 96, defaultTransition);
      return t1;
    },
    $signature: 39
  };
  A._createTables_setChars.prototype = {
    call$3(target, chars, transition) {
      var t1, i, t2;
      for (t1 = chars.length, i = 0; i < t1; ++i) {
        t2 = chars.charCodeAt(i) ^ 96;
        if (!(t2 < 96))
          return A.ioore(target, t2);
        target[t2] = transition;
      }
    },
    $signature: 20
  };
  A._createTables_setRange.prototype = {
    call$3(target, range, transition) {
      var i, n,
        t1 = range.length;
      if (0 >= t1)
        return A.ioore(range, 0);
      i = range.charCodeAt(0);
      if (1 >= t1)
        return A.ioore(range, 1);
      n = range.charCodeAt(1);
      for (; i <= n; ++i) {
        t1 = (i ^ 96) >>> 0;
        if (!(t1 < 96))
          return A.ioore(target, t1);
        target[t1] = transition;
      }
    },
    $signature: 20
  };
  A._SimpleUri.prototype = {
    get$hasAuthority() {
      return this._hostStart > 0;
    },
    get$hasPort() {
      return this._hostStart > 0 && this._portStart + 1 < this._pathStart;
    },
    get$hasQuery() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment() {
      return this._fragmentStart < this._uri.length;
    },
    get$hasAbsolutePath() {
      return B.JSString_methods.startsWith$2(this._uri, "/", this._pathStart);
    },
    get$scheme() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && B.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return B.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? B.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host(_) {
      var t1 = this._hostStart;
      return t1 > 0 ? B.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port(_) {
      var t1, _this = this;
      if (_this.get$hasPort())
        return A.int_parse(B.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path(_) {
      return B.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query() {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? B.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments() {
      var parts, t2, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (B.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start === end)
        return B.List_empty1;
      parts = A._setArrayType([], type$.JSArray_String);
      for (t2 = t1.length, i = start; i < end; ++i) {
        if (!(i >= 0 && i < t2))
          return A.ioore(t1, i);
        if (t1.charCodeAt(i) === 47) {
          B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      }
      B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(t1, start, end));
      return A.List_List$unmodifiable(parts, type$.String);
    },
    _isPort$1(port) {
      var portDigitStart = this._portStart + 1;
      return portDigitStart + port.length === this._pathStart && B.JSString_methods.startsWith$2(this._uri, port, portDigitStart);
    },
    removeFragment$0() {
      var _this = this,
        t1 = _this._fragmentStart,
        t2 = _this._uri;
      if (t1 >= t2.length)
        return _this;
      return new A._SimpleUri(B.JSString_methods.substring$2(t2, 0, t1), _this._schemeEnd, _this._hostStart, _this._portStart, _this._pathStart, _this._queryStart, t1, _this._schemeCache);
    },
    resolve$1(reference) {
      return this.resolveUri$1(A.Uri_parse(reference));
    },
    resolveUri$1(reference) {
      if (reference instanceof A._SimpleUri)
        return this._simpleMerge$2(this, reference);
      return this._toNonSimple$0().resolveUri$1(reference);
    },
    _simpleMerge$2(base, ref) {
      var t2, t3, t4, isSimple, delta, refStart, basePathStart, packageNameEnd, basePathStart0, baseStart, baseEnd, baseUri, baseStart0, backCount, refStart0, insert,
        t1 = ref._schemeEnd;
      if (t1 > 0)
        return ref;
      t2 = ref._hostStart;
      if (t2 > 0) {
        t3 = base._schemeEnd;
        if (t3 <= 0)
          return ref;
        t4 = t3 === 4;
        if (t4 && B.JSString_methods.startsWith$1(base._uri, "file"))
          isSimple = ref._pathStart !== ref._queryStart;
        else if (t4 && B.JSString_methods.startsWith$1(base._uri, "http"))
          isSimple = !ref._isPort$1("80");
        else
          isSimple = !(t3 === 5 && B.JSString_methods.startsWith$1(base._uri, "https")) || !ref._isPort$1("443");
        if (isSimple) {
          delta = t3 + 1;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, delta) + B.JSString_methods.substring$1(ref._uri, t1 + 1), t3, t2 + delta, ref._portStart + delta, ref._pathStart + delta, ref._queryStart + delta, ref._fragmentStart + delta, base._schemeCache);
        } else
          return this._toNonSimple$0().resolveUri$1(ref);
      }
      refStart = ref._pathStart;
      t1 = ref._queryStart;
      if (refStart === t1) {
        t2 = ref._fragmentStart;
        if (t1 < t2) {
          t3 = base._queryStart;
          delta = t3 - t1;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, t3) + B.JSString_methods.substring$1(ref._uri, t1), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, t1 + delta, t2 + delta, base._schemeCache);
        }
        t1 = ref._uri;
        if (t2 < t1.length) {
          t3 = base._fragmentStart;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, t3) + B.JSString_methods.substring$1(t1, t2), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, base._queryStart, t2 + (t3 - t2), base._schemeCache);
        }
        return base.removeFragment$0();
      }
      t2 = ref._uri;
      if (B.JSString_methods.startsWith$2(t2, "/", refStart)) {
        basePathStart = base._pathStart;
        packageNameEnd = A._SimpleUri__packageNameEnd(this);
        basePathStart0 = packageNameEnd > 0 ? packageNameEnd : basePathStart;
        delta = basePathStart0 - refStart;
        return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, basePathStart0) + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, basePathStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
      }
      baseStart = base._pathStart;
      baseEnd = base._queryStart;
      if (baseStart === baseEnd && base._hostStart > 0) {
        for (; B.JSString_methods.startsWith$2(t2, "../", refStart);)
          refStart += 3;
        delta = baseStart - refStart + 1;
        return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, baseStart) + "/" + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
      }
      baseUri = base._uri;
      packageNameEnd = A._SimpleUri__packageNameEnd(this);
      if (packageNameEnd >= 0)
        baseStart0 = packageNameEnd;
      else
        for (baseStart0 = baseStart; B.JSString_methods.startsWith$2(baseUri, "../", baseStart0);)
          baseStart0 += 3;
      backCount = 0;
      while (true) {
        refStart0 = refStart + 3;
        if (!(refStart0 <= t1 && B.JSString_methods.startsWith$2(t2, "../", refStart)))
          break;
        ++backCount;
        refStart = refStart0;
      }
      for (t3 = baseUri.length, insert = ""; baseEnd > baseStart0;) {
        --baseEnd;
        if (!(baseEnd >= 0 && baseEnd < t3))
          return A.ioore(baseUri, baseEnd);
        if (baseUri.charCodeAt(baseEnd) === 47) {
          if (backCount === 0) {
            insert = "/";
            break;
          }
          --backCount;
          insert = "/";
        }
      }
      if (baseEnd === baseStart0 && base._schemeEnd <= 0 && !B.JSString_methods.startsWith$2(baseUri, "/", baseStart)) {
        refStart -= backCount * 3;
        insert = "";
      }
      delta = baseEnd - refStart + insert.length;
      return new A._SimpleUri(B.JSString_methods.substring$2(baseUri, 0, baseEnd) + insert + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
    },
    toFilePath$0() {
      var t2, t3, _this = this,
        t1 = _this._schemeEnd;
      if (t1 >= 0) {
        t2 = !(t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "file"));
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        throw A.wrapException(A.UnsupportedError$("Cannot extract a file path from a " + _this.get$scheme() + " URI"));
      t1 = _this._queryStart;
      t2 = _this._uri;
      if (t1 < t2.length) {
        if (t1 < _this._fragmentStart)
          throw A.wrapException(A.UnsupportedError$(string$.Cannotfq));
        throw A.wrapException(A.UnsupportedError$(string$.Cannotff));
      }
      t3 = $.$get$_Uri__isWindowsCached();
      if (t3)
        t1 = A._Uri__toWindowsFilePath(_this);
      else {
        if (_this._hostStart < _this._portStart)
          A.throwExpression(A.UnsupportedError$(string$.Cannotn));
        t1 = B.JSString_methods.substring$2(t2, _this._pathStart, t1);
      }
      return t1;
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = B.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    _toNonSimple$0() {
      var _this = this, _null = null,
        t1 = _this.get$scheme(),
        t2 = _this.get$userInfo(),
        t3 = _this._hostStart > 0 ? _this.get$host(0) : _null,
        t4 = _this.get$hasPort() ? _this.get$port(0) : _null,
        t5 = _this._uri,
        t6 = _this._queryStart,
        t7 = B.JSString_methods.substring$2(t5, _this._pathStart, t6),
        t8 = _this._fragmentStart;
      t6 = t6 < t8 ? _this.get$query() : _null;
      return A._Uri$_internal(t1, t2, t3, t4, t7, t6, t8 < t5.length ? _this.get$fragment() : _null);
    },
    toString$0(_) {
      return this._uri;
    },
    $isUri: 1
  };
  A._DataUri.prototype = {};
  A.HtmlElement.prototype = {};
  A.AnchorElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.AreaElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.Blob.prototype = {};
  A.CharacterData.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.DomException.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A._FrozenElementList.prototype = {
    get$length(_) {
      return this._nodeList.length;
    },
    $index(_, index) {
      var t1 = this._nodeList;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return this.$ti._precomputed1._as(t1[index]);
    },
    $indexSet(_, index, value) {
      this.$ti._precomputed1._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot modify list"));
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify list"));
    },
    sort$1(_, compare) {
      this.$ti._eval$1("int(1,1)?")._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot sort list"));
    }
  };
  A.Element1.prototype = {
    toString$0(receiver) {
      var t1 = receiver.localName;
      t1.toString;
      return t1;
    },
    _removeAttribute$1(receiver, $name) {
      return receiver.removeAttribute($name);
    },
    $isElement1: 1
  };
  A.Event.prototype = {
    get$target(receiver) {
      return A._convertNativeToDart_EventTarget(receiver.target);
    },
    $isEvent: 1
  };
  A.Events.prototype = {};
  A.ElementEvents.prototype = {
    $index(_, type) {
      var t1 = $.$get$ElementEvents_webkitEvents();
      if (t1.containsKey$1(type.toLowerCase()))
        if ($.$get$Device_isWebKit())
          return new A._ElementEventStreamImpl(this._ptr, A._asString(t1.$index(0, type.toLowerCase())), false, type$._ElementEventStreamImpl_Event);
      return new A._ElementEventStreamImpl(this._ptr, type, false, type$._ElementEventStreamImpl_Event);
    }
  };
  A.EventTarget.prototype = {
    _addEventListener$3(receiver, type, listener, options) {
      return receiver.addEventListener(type, A.convertDartClosureToJS(type$.nullable_dynamic_Function_Event._as(listener), 1), false);
    },
    _removeEventListener$3(receiver, type, listener, options) {
      return receiver.removeEventListener(type, A.convertDartClosureToJS(type$.nullable_dynamic_Function_Event._as(listener), 1), false);
    },
    $isEventTarget: 1
  };
  A.File.prototype = {$isFile: 1};
  A.FileList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.File._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.FormElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.HtmlCollection.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.InputElement.prototype = {
    set$value(receiver, value) {
      receiver.value = value;
    },
    $isInputElement: 1
  };
  A.Location.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A._ChildNodeListLazy.prototype = {
    add$1(_, value) {
      this._this.appendChild(type$.Node._as(value)).toString;
    },
    $indexSet(_, index, value) {
      var t1, t2;
      type$.Node._as(value);
      t1 = this._this;
      t2 = t1.childNodes;
      if (!(index >= 0 && index < t2.length))
        return A.ioore(t2, index);
      t1.replaceChild(value, t2[index]).toString;
    },
    get$iterator(_) {
      var t1 = this._this.childNodes;
      return new A.FixedSizeListIterator(t1, t1.length, A.instanceType(t1)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    sort$1(_, compare) {
      type$.nullable_int_Function_Node_Node._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot sort Node list"));
    },
    get$length(_) {
      return this._this.childNodes.length;
    },
    set$length(_, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index(_, index) {
      var t1 = this._this.childNodes;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    }
  };
  A.Node0.prototype = {
    remove$0(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver).toString;
    },
    replaceWith$1(receiver, otherNode) {
      var $parent, t1, exception;
      try {
        t1 = receiver.parentNode;
        t1.toString;
        $parent = t1;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
      }
      return receiver;
    },
    toString$0(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    set$text(receiver, value) {
      receiver.textContent = value;
    },
    append$1(receiver, node) {
      var t1 = receiver.appendChild(node);
      t1.toString;
      return t1;
    },
    insertBefore$2(receiver, node, child) {
      var t1 = receiver.insertBefore(node, child);
      t1.toString;
      return t1;
    },
    _removeChild$1(receiver, child) {
      var t1 = receiver.removeChild(child);
      t1.toString;
      return t1;
    },
    _replaceChild$2(receiver, node, child) {
      var t1 = receiver.replaceChild(node, child);
      t1.toString;
      return t1;
    },
    $isNode0: 1
  };
  A.NodeList0.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.OptionElement.prototype = {$isOptionElement: 1};
  A.SelectElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    get$options(receiver) {
      var t1, options;
      A.checkTypeBound(type$.OptionElement, type$.Element, "T", "querySelectorAll");
      t1 = receiver.querySelectorAll("option");
      t1.toString;
      options = new A._FrozenElementList(t1, type$._FrozenElementList_OptionElement);
      return new A.UnmodifiableListView(options.toList$0(options), type$.UnmodifiableListView_OptionElement);
    },
    get$selectedOptions(receiver) {
      var t2, t3,
        t1 = receiver.multiple;
      t1.toString;
      if (t1) {
        t1 = this.get$options(receiver);
        t2 = t1.$ti;
        t3 = t2._eval$1("WhereIterable<ListBase.E>");
        return new A.UnmodifiableListView(A.List_List$of(new A.WhereIterable(t1, t2._eval$1("bool(ListBase.E)")._as(new A.SelectElement_selectedOptions_closure()), t3), true, t3._eval$1("Iterable.E")), type$.UnmodifiableListView_OptionElement);
      } else {
        t1 = this.get$options(receiver);
        t2 = receiver.selectedIndex;
        t2.toString;
        return A._setArrayType([J.elementAt$1$ax(t1._collection$_source, t2)], type$.JSArray_OptionElement);
      }
    },
    $isSelectElement: 1
  };
  A.SelectElement_selectedOptions_closure.prototype = {
    call$1(o) {
      var t1 = type$.OptionElement._as(o).selected;
      t1.toString;
      return t1;
    },
    $signature: 49
  };
  A.Text1.prototype = {$isText1: 1};
  A.TextAreaElement.prototype = {
    set$value(receiver, value) {
      receiver.value = value;
    },
    $isTextAreaElement: 1
  };
  A.Window.prototype = {
    _requestAnimationFrame$1(receiver, callback) {
      var t1 = receiver.requestAnimationFrame(A.convertDartClosureToJS(type$.void_Function_num._as(callback), 1));
      t1.toString;
      return t1;
    },
    _ensureRequestAnimationFrame$0(receiver) {
      var t1 = !!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame);
      t1.toString;
      if (t1)
        return;
      (function($this) {
        var vendors = ["ms", "moz", "webkit", "o"];
        for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
          $this.requestAnimationFrame = $this[vendors[i] + "RequestAnimationFrame"];
          $this.cancelAnimationFrame = $this[vendors[i] + "CancelAnimationFrame"] || $this[vendors[i] + "CancelRequestAnimationFrame"];
        }
        if ($this.requestAnimationFrame && $this.cancelAnimationFrame)
          return;
        $this.requestAnimationFrame = function(callback) {
          return window.setTimeout(function() {
            callback(Date.now());
          }, 16);
        };
        $this.cancelAnimationFrame = function(id) {
          clearTimeout(id);
        };
      })(receiver);
    },
    $isWindowBase: 1
  };
  A._Attr.prototype = {$is_Attr: 1};
  A._NamedNodeMap.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._AttributeMap.prototype = {
    cast$2$0(_, $K, $V) {
      var t1 = type$.String;
      return A.Map_castFrom(this, t1, t1, $K, $V);
    },
    forEach$1(_, f) {
      var t1, t2, t3, _i, t4, value;
      type$.void_Function_String_String._as(f);
      for (t1 = this.get$keys(), t2 = t1.length, t3 = this._element, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        t4 = A._asString(t1[_i]);
        value = t3.getAttribute(t4);
        f.call$2(t4, value == null ? A._asString(value) : value);
      }
    },
    get$keys() {
      var keys, len, t2, i, attr, t3,
        t1 = this._element.attributes;
      t1.toString;
      keys = A._setArrayType([], type$.JSArray_String);
      for (len = t1.length, t2 = type$._Attr, i = 0; i < len; ++i) {
        if (!(i < t1.length))
          return A.ioore(t1, i);
        attr = t2._as(t1[i]);
        if (attr.namespaceURI == null) {
          t3 = attr.name;
          t3.toString;
          B.JSArray_methods.add$1(keys, t3);
        }
      }
      return keys;
    },
    get$isEmpty(_) {
      return this.get$keys().length === 0;
    },
    get$isNotEmpty(_) {
      return this.get$keys().length !== 0;
    }
  };
  A._ElementAttributeMap.prototype = {
    $index(_, key) {
      return this._element.getAttribute(A._asString(key));
    },
    get$length(_) {
      return this.get$keys().length;
    }
  };
  A._EventStream.prototype = {};
  A._ElementEventStreamImpl.prototype = {};
  A._EventStreamSubscription.prototype = {
    cancel$0() {
      var t2, _this = this,
        t1 = _this._target;
      if (t1 == null)
        return $.$get$nullFuture();
      t2 = _this._onData;
      if (t2 != null)
        J._removeEventListener$3$x(t1, _this._eventType, type$.nullable_dynamic_Function_Event._as(t2), false);
      _this._target = null;
      _this.set$_onData(null);
      return $.$get$nullFuture();
    },
    set$_onData(_onData) {
      this._onData = type$.nullable_dynamic_Function_Event._as(_onData);
    },
    $isStreamSubscription: 1
  };
  A._EventStreamSubscription_closure.prototype = {
    call$1(e) {
      return this.onData.call$1(type$.Event._as(e));
    },
    $signature: 9
  };
  A.ImmutableListMixin.prototype = {
    get$iterator(receiver) {
      return new A.FixedSizeListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    add$1(receiver, value) {
      A.instanceType(receiver)._eval$1("ImmutableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to immutable List."));
    },
    sort$1(receiver, compare) {
      A.instanceType(receiver)._eval$1("int(ImmutableListMixin.E,ImmutableListMixin.E)?")._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot sort immutable List."));
    }
  };
  A.FixedSizeListIterator.prototype = {
    moveNext$0() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._length;
      if (nextPosition < t1) {
        _this.set$_current(J.$index$asx(_this._array, nextPosition));
        _this._position = nextPosition;
        return true;
      }
      _this.set$_current(null);
      _this._position = t1;
      return false;
    },
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    set$_current(_current) {
      this._current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._DOMWindowCrossFrame.prototype = {$isEventTarget: 1, $isWindowBase: 1};
  A._FileList_JavaScriptObject_ListMixin.prototype = {};
  A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.VersionChangeEvent.prototype = {
    get$target(receiver) {
      var t1 = receiver.target;
      t1.toString;
      return t1;
    }
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      return this.completer.complete$1(0, this.T._eval$1("0/?")._as(r));
    },
    $signature: 7
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(new A.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 7
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    },
    $isException: 1
  };
  A.BinaryCodec.prototype = {
    get$decoder() {
      return new A.Decoder();
    }
  };
  A.Decoder.prototype = {
    convert$1(input) {
      return this.decode$1(0, new A.ByteReader(type$.Uint8List._as(input)));
    },
    decode$1(_, reader) {
      var _this = this,
        tag = reader.read$0(0);
      if (tag < 128)
        return tag - 0;
      else if (tag < 192)
        return -(tag - 128);
      else if (tag < 216)
        return reader.readAll$1(tag - 192);
      else if (tag < 240)
        return B.C_Utf8Codec.decode$1(0, reader.readAll$1(tag - 216));
      else if (tag < 248)
        return _this.decodeInt$2(tag, reader);
      else if (tag === 248)
        return null;
      else if (tag === 249)
        return true;
      else if (tag === 250)
        return false;
      else if (tag === 251)
        return _this.decodeDouble$1(reader);
      else if (tag === 252)
        return reader.readAll$1(_this.decodeLength$1(reader));
      else if (tag === 253)
        return B.C_Utf8Codec.decode$1(0, reader.readAll$1(_this.decodeLength$1(reader)));
      else if (tag === 254)
        return _this.decodeList$1(reader);
      else if (tag === 255)
        return _this.decodeMap$1(reader);
      else
        throw A.wrapException("Tag '" + tag + "' not handled");
    },
    decodeInt$2(tag, reader) {
      var t1, t2, value, i, t3, t4, t5, last,
        byteCountMinusOne = tag - 240;
      for (t1 = reader._byte_reader$_data, t2 = t1.length, value = 0, i = 0; i < byteCountMinusOne; ++i) {
        t3 = Math.pow(2, i * 8);
        t4 = reader._byte_reader$_index;
        t5 = t4 + 1;
        if (t5 > t2)
          A.throwExpression(A.ArgumentError$("No more elements", null));
        reader._byte_reader$_index = t5;
        if (!(t4 >= 0 && t4 < t2))
          return A.ioore(t1, t4);
        value += A._asInt(t3 * t1[t4]);
      }
      last = reader.read$0(0);
      t1 = byteCountMinusOne * 8;
      value += A._asInt(Math.pow(2, t1) * (last & 127));
      return (last & 128) !== 0 ? value - A._asInt(Math.pow(2, t1 + 7)) : value;
    },
    decodeDouble$1(reader) {
      var bytes = reader.readAll$1(8);
      return B.NativeByteData_methods._getFloat64$2(A.NativeByteData_NativeByteData$view(bytes.buffer, bytes.byteOffset, 8), 0, true);
    },
    decodeLength$1(reader) {
      var $length, rounded,
        tag = reader.read$0(0);
      if (tag < 128)
        return tag - 0;
      else if (tag < 240)
        throw A.wrapException("Tag '" + tag + "' is no length");
      else if (tag < 248)
        return this.decodeInt$2(tag, reader);
      else if (tag === 251) {
        $length = this.decodeDouble$1(reader);
        rounded = B.JSNumber_methods.round$0($length);
        if ($length !== rounded)
          throw A.wrapException("Tag '" + tag + "' is a double value (" + A.S($length) + ") and no length (lengths must have no decimal places)");
        return rounded;
      } else
        throw A.wrapException("Tag '" + tag + "' is no length");
    },
    decodeList$1(reader) {
      var i,
        $length = this.decodeLength$1(reader),
        list = [];
      for (i = 0; i < $length; ++i)
        list.push(this.decode$1(0, reader));
      return list;
    },
    decodeMap$1(reader) {
      var i,
        $length = this.decodeLength$1(reader),
        map = new A.JsLinkedHashMap(type$.JsLinkedHashMap_dynamic_dynamic);
      for (i = 0; i < $length; ++i)
        map.$indexSet(0, this.decode$1(0, reader), this.decode$1(0, reader));
      return map;
    }
  };
  A.ByteReader.prototype = {
    _require$1(byteCount) {
      if (this._byte_reader$_index + byteCount > this._byte_reader$_data.length)
        throw A.wrapException(A.ArgumentError$("No more elements", null));
    },
    read$0(_) {
      var t1, t2;
      this._require$1(1);
      t1 = this._byte_reader$_data;
      t2 = this._byte_reader$_index++;
      if (!(t2 >= 0 && t2 < t1.length))
        return A.ioore(t1, t2);
      return t1[t2];
    },
    readAll$1(byteCount) {
      var t1, result, _this = this;
      _this._require$1(byteCount);
      t1 = _this._byte_reader$_data;
      result = A.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + _this._byte_reader$_index, byteCount);
      _this._byte_reader$_index += byteCount;
      return result;
    }
  };
  A.AttributeName.prototype = {
    toString$0(_) {
      var t1 = this.prefix,
        t2 = this.name;
      return t1 != null ? t1 + ":" + t2 : t2;
    },
    get$hashCode(_) {
      return 37 * (37 * (J.get$hashCode$(this.prefix) & 2097151) + B.JSString_methods.get$hashCode(this.name) & 2097151) + B.JSString_methods.get$hashCode(this.namespace) & 1073741823;
    },
    compareTo$1(_, other) {
      var t1, t2, cmp;
      if (!(other instanceof A.AttributeName))
        return 1;
      t1 = this.prefix;
      if (t1 == null)
        t1 = "";
      t2 = other.prefix;
      cmp = B.JSString_methods.compareTo$1(t1, t2 == null ? "" : t2);
      if (cmp !== 0)
        return cmp;
      cmp = B.JSString_methods.compareTo$1(this.name, other.name);
      if (cmp !== 0)
        return cmp;
      return B.JSString_methods.compareTo$1(this.namespace, other.namespace);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.AttributeName && this.prefix == other.prefix && this.name === other.name && this.namespace === other.namespace;
    },
    $isComparable: 1
  };
  A._ParentNode.prototype = {};
  A._NonElementParentNode.prototype = {};
  A._ElementAndDocument.prototype = {};
  A.Node.prototype = {
    get$nodes(_) {
      var t1, _this = this,
        value = _this.__Node_nodes_FI;
      if (value === $) {
        t1 = A._setArrayType([], type$.JSArray_Node);
        _this.__Node_nodes_FI !== $ && A.throwLateFieldADI("nodes");
        value = _this.__Node_nodes_FI = new A.NodeList(_this, t1);
      }
      return value;
    },
    get$children(_) {
      var result, _this = this,
        value = _this.__Node_children_FI;
      if (value === $) {
        result = new A.FilteredElementList(_this.get$nodes(0));
        _this.__Node_children_FI !== $ && A.throwLateFieldADI("children");
        _this.set$__Node_children_FI(result);
        value = result;
      }
      return value;
    },
    get$text(_) {
      return null;
    },
    remove$0(_) {
      var t1 = this.parentNode;
      if (t1 != null)
        B.JSArray_methods.remove$1(t1.get$nodes(0)._list_proxy$_list, this);
      return this;
    },
    insertBefore$2(_, node, refNode) {
      var t1, t2;
      if (refNode == null)
        this.get$nodes(0).add$1(0, node);
      else {
        t1 = this.get$nodes(0);
        t2 = this.get$nodes(0);
        t1.insert$2(0, t2.indexOf$1(t2, refNode), node);
      }
    },
    _clone$1$2(shallowClone, deep, $T) {
      var t1, t2, t3, t4, value, t5, value0, t6;
      A.checkTypeBound($T, type$.Node_2, "T", "_clone");
      $T._as(shallowClone);
      if (deep)
        for (t1 = this.get$nodes(0)._list_proxy$_list, t2 = A._arrayInstanceType(t1), t1 = new J.ArrayIterator(t1, t1.length, t2._eval$1("ArrayIterator<1>")), t2 = t2._precomputed1, t3 = type$.JSArray_Node; t1.moveNext$0();) {
          t4 = t1.__interceptors$_current;
          t4 = (t4 == null ? t2._as(t4) : t4).clone$1(0, true);
          value = shallowClone.__Node_nodes_FI;
          if (value === $) {
            t5 = A._setArrayType([], t3);
            shallowClone.__Node_nodes_FI !== $ && A.throwLateFieldADI("nodes");
            value = shallowClone.__Node_nodes_FI = new A.NodeList(shallowClone, t5);
          }
          t5 = t4.parentNode;
          if (t5 != null) {
            value0 = t5.__Node_nodes_FI;
            if (value0 === $) {
              t6 = A._setArrayType([], t3);
              t5.__Node_nodes_FI !== $ && A.throwLateFieldADI("nodes");
              value0 = t5.__Node_nodes_FI = new A.NodeList(t5, t6);
            }
            B.JSArray_methods.remove$1(value0._list_proxy$_list, t4);
          }
          t4.parentNode = value._dom$_parent;
          value.super$ListProxy$add(0, t4);
        }
      return shallowClone;
    },
    set$attributes(_, attributes) {
      this.attributes = type$.LinkedHashMap_Object_String._as(attributes);
    },
    set$__Node_children_FI(__Node_children_FI) {
      this.__Node_children_FI = type$.List_Element._as(__Node_children_FI);
    }
  };
  A.Document.prototype = {
    get$nodeType(_) {
      return 9;
    },
    toString$0(_) {
      return "#document";
    },
    clone$1(_, deep) {
      return this._clone$1$2(A.Document$(), true, type$.Document);
    }
  };
  A.DocumentType.prototype = {
    get$nodeType(_) {
      return 10;
    },
    toString$0(_) {
      var sid, _this = this,
        pid = _this.publicId,
        t1 = pid == null;
      if (!t1 || _this.systemId != null) {
        if (t1)
          pid = "";
        sid = _this.systemId;
        if (sid == null)
          sid = "";
        return "<!DOCTYPE " + A.S(_this.name) + ' "' + pid + '" "' + sid + '">';
      } else
        return "<!DOCTYPE " + A.S(_this.name) + ">";
    },
    clone$1(_, deep) {
      return A.DocumentType$(this.name, this.publicId, this.systemId);
    }
  };
  A.Text0.prototype = {
    get$nodeType(_) {
      return 3;
    },
    toString$0(_) {
      var t1 = J.toString$0$(this._data);
      this._data = t1;
      return '"' + t1 + '"';
    },
    clone$1(_, deep) {
      var t1 = J.toString$0$(this._data);
      this._data = t1;
      return A.Text$(t1);
    },
    appendData$1(_, data) {
      var sb = this._data;
      (!(sb instanceof A.StringBuffer) ? this._data = new A.StringBuffer(A.S(sb)) : sb)._contents += data;
    },
    get$text(_) {
      return this._data = J.toString$0$(this._data);
    }
  };
  A.Element0.prototype = {
    get$nodeType(_) {
      return 1;
    },
    toString$0(_) {
      var prefix = A.Namespaces_getPrefix(this.namespaceUri);
      return "<" + (prefix == null ? "" : prefix + " ") + A.S(this.localName) + ">";
    },
    get$text(_) {
      var t1 = new A.StringBuffer("");
      new A._ConcatTextVisitor(t1).visit$1(this);
      t1 = t1._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    clone$1(_, deep) {
      var _this = this,
        result = A.Element$_(_this.localName, _this.namespaceUri);
      result.set$attributes(0, A.LinkedHashMap_LinkedHashMap$from(_this.attributes, type$.Object, type$.String));
      return _this._clone$1$2(result, deep, type$.Element_2);
    },
    get$className(_) {
      var result = this.attributes.$index(0, "class");
      return result == null ? "" : result;
    }
  };
  A.Comment.prototype = {
    get$nodeType(_) {
      return 8;
    },
    toString$0(_) {
      return "<!-- " + this.data + " -->";
    },
    clone$1(_, deep) {
      return A.Comment$(this.data);
    },
    get$text(_) {
      return this.data;
    }
  };
  A.NodeList.prototype = {
    add$1(_, element) {
      type$.Node_2._as(element);
      element.remove$0(0);
      element.parentNode = this._dom$_parent;
      this.super$ListProxy$add(0, element);
    },
    addAll$1(_, iterable) {
      var t1, t2, t3, t4, t5, t6, value, t7,
        list = this._flattenDocFragments$1(type$.Iterable_Node._as(iterable));
      for (t1 = A._arrayInstanceType(list)._eval$1("ReversedListIterable<1>"), t2 = new A.ReversedListIterable(list, t1), t2 = new A.ListIterator(t2, t2.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t3 = this._dom$_parent, t1 = t1._eval$1("ListIterable.E"), t4 = type$.JSArray_Node; t2.moveNext$0();) {
        t5 = t2.__internal$_current;
        if (t5 == null)
          t5 = t1._as(t5);
        t6 = t5.parentNode;
        if (t6 != null) {
          value = t6.__Node_nodes_FI;
          if (value === $) {
            t7 = A._setArrayType([], t4);
            t6.__Node_nodes_FI !== $ && A.throwLateFieldADI("nodes");
            value = t6.__Node_nodes_FI = new A.NodeList(t6, t7);
          }
          B.JSArray_methods.remove$1(value._list_proxy$_list, t5);
        }
        t5.parentNode = t3;
      }
      this.super$ListProxy$addAll(0, list);
    },
    insert$2(_, index, element) {
      element.remove$0(0);
      element.parentNode = this._dom$_parent;
      this.super$ListProxy$insert(0, index, element);
    },
    clear$0(_) {
      var t1, t2, t3;
      for (t1 = this._list_proxy$_list, t2 = A._arrayInstanceType(t1), t1 = new J.ArrayIterator(t1, t1.length, t2._eval$1("ArrayIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
        t3 = t1.__interceptors$_current;
        (t3 == null ? t2._as(t3) : t3).parentNode = null;
      }
      this.super$ListBase$clear(this);
    },
    $indexSet(_, index, value) {
      var t1;
      type$.Node_2._as(value);
      t1 = this._list_proxy$_list;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      t1[index].parentNode = null;
      value.remove$0(0);
      value.parentNode = this._dom$_parent;
      this.super$ListProxy$$indexSet(0, index, value);
    },
    _flattenDocFragments$1(collection) {
      var result, t1;
      type$.Iterable_Node._as(collection);
      result = A._setArrayType([], type$.JSArray_Node);
      for (t1 = collection.get$iterator(collection); t1.moveNext$0();)
        B.JSArray_methods.add$1(result, t1.get$current());
      return result;
    }
  };
  A.FilteredElementList.prototype = {
    $indexSet(_, index, value) {
      var t1, t2, t3;
      type$.Element_2._as(value);
      t1 = type$.WhereTypeIterable_Element;
      t1 = A.List_List$of(new A.WhereTypeIterable(this._childNodes, t1), false, t1._eval$1("Iterable.E"));
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      t1 = t1[index];
      t2 = t1.parentNode;
      if (t2 == null)
        A.throwExpression(A.UnsupportedError$("Node must have a parent to replace it."));
      t2 = t2.get$nodes(0);
      t3 = t1.parentNode.get$nodes(0);
      t2.$indexSet(0, t3.indexOf$1(t3, t1), value);
    },
    set$length(_, newLength) {
      var t1 = type$.WhereTypeIterable_Element,
        len = A.List_List$of(new A.WhereTypeIterable(this._childNodes, t1), false, t1._eval$1("Iterable.E")).length;
      if (newLength >= len)
        return;
      else if (newLength < 0)
        throw A.wrapException(A.ArgumentError$("Invalid list length", null));
      this.removeRange$2(0, newLength, len);
    },
    add$1(_, element) {
      this._childNodes.add$1(0, type$.Element_2._as(element));
    },
    sort$1(_, compare) {
      type$.nullable_int_Function_Element_Element._as(compare);
      throw A.wrapException(A.UnsupportedError$("TODO(jacobr): should we impl?"));
    },
    removeRange$2(_, start, end) {
      var t1 = type$.WhereTypeIterable_Element;
      B.JSArray_methods.forEach$1(B.JSArray_methods.sublist$2(A.List_List$of(new A.WhereTypeIterable(this._childNodes, t1), false, t1._eval$1("Iterable.E")), start, end), new A.FilteredElementList_removeRange_closure());
    },
    map$1$1(_, f, $T) {
      var t1, t2;
      $T._eval$1("0(Element0)")._as(f);
      t1 = type$.WhereTypeIterable_Element;
      t1 = A.List_List$of(new A.WhereTypeIterable(this._childNodes, t1), false, t1._eval$1("Iterable.E"));
      t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._bind$1($T)._eval$1("1(2)")._as(f), t2._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    where$1(_, test) {
      var t1, t2;
      type$.bool_Function_Element._as(test);
      t1 = type$.WhereTypeIterable_Element;
      t1 = A.List_List$of(new A.WhereTypeIterable(this._childNodes, t1), false, t1._eval$1("Iterable.E"));
      t2 = A._arrayInstanceType(t1);
      return new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(test), t2._eval$1("WhereIterable<1>"));
    },
    elementAt$1(_, index) {
      var t1 = type$.WhereTypeIterable_Element;
      t1 = A.List_List$of(new A.WhereTypeIterable(this._childNodes, t1), false, t1._eval$1("Iterable.E"));
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    get$isEmpty(_) {
      var t1 = type$.WhereTypeIterable_Element;
      return A.List_List$of(new A.WhereTypeIterable(this._childNodes, t1), false, t1._eval$1("Iterable.E")).length === 0;
    },
    get$length(_) {
      var t1 = type$.WhereTypeIterable_Element;
      return A.List_List$of(new A.WhereTypeIterable(this._childNodes, t1), false, t1._eval$1("Iterable.E")).length;
    },
    $index(_, index) {
      var t1 = type$.WhereTypeIterable_Element;
      t1 = A.List_List$of(new A.WhereTypeIterable(this._childNodes, t1), false, t1._eval$1("Iterable.E"));
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    get$iterator(_) {
      var t1 = type$.WhereTypeIterable_Element;
      t1 = A.List_List$of(new A.WhereTypeIterable(this._childNodes, t1), false, t1._eval$1("Iterable.E"));
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A.FilteredElementList_removeRange_closure.prototype = {
    call$1(el) {
      return type$.Element_2._as(el).remove$0(0);
    },
    $signature: 64
  };
  A._ConcatTextVisitor.prototype = {
    toString$0(_) {
      var t1 = this._str._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._Document_Node__ParentNode.prototype = {};
  A._Document_Node__ParentNode__NonElementParentNode.prototype = {};
  A._Document_Node__ParentNode__NonElementParentNode__ElementAndDocument.prototype = {};
  A._Element_Node__ParentNode.prototype = {};
  A._Element_Node__ParentNode__ElementAndDocument.prototype = {};
  A._FilteredElementList_IterableBase_ListMixin.prototype = {};
  A.TreeVisitor.prototype = {
    visit$1(node) {
      var t1, _this = this;
      switch (node.get$nodeType(node)) {
        case 1:
          return _this.visitChildren$1(type$.Element_2._as(node));
        case 3:
          type$.Text._as(node);
          t1 = J.toString$0$(node._data);
          node._data = t1;
          _this._str._contents += t1;
          return null;
        case 8:
          return _this.visitChildren$1(type$.Comment._as(node));
        case 11:
          return _this.visitChildren$1(type$.DocumentFragment._as(node));
        case 9:
          return _this.visitChildren$1(type$.Document._as(node));
        case 10:
          return _this.visitChildren$1(type$.DocumentType._as(node));
        default:
          throw A.wrapException(A.UnsupportedError$("DOM node type " + node.get$nodeType(node)));
      }
    },
    visitChildren$1(node) {
      var t1, t2, _i;
      for (t1 = node.get$nodes(0), t1 = t1.toList$1$growable(t1, false), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        this.visit$1(t1[_i]);
    }
  };
  A.HtmlParser.prototype = {
    get$phase() {
      var value = this.__HtmlParser_phase_AI;
      return value === $ ? this.__HtmlParser_phase_AI = this.get$_initialPhase() : value;
    },
    get$_initialPhase() {
      var _this = this,
        value = _this.__HtmlParser__initialPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_initialPhase");
        value = _this.__HtmlParser__initialPhase_FI = new A.InitialPhase(_this, _this.tree);
      }
      return value;
    },
    get$_beforeHtmlPhase() {
      var _this = this,
        value = _this.__HtmlParser__beforeHtmlPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_beforeHtmlPhase");
        value = _this.__HtmlParser__beforeHtmlPhase_FI = new A.BeforeHtmlPhase(_this, _this.tree);
      }
      return value;
    },
    get$_beforeHeadPhase() {
      var _this = this,
        value = _this.__HtmlParser__beforeHeadPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_beforeHeadPhase");
        value = _this.__HtmlParser__beforeHeadPhase_FI = new A.BeforeHeadPhase(_this, _this.tree);
      }
      return value;
    },
    get$_inHeadPhase() {
      var _this = this,
        value = _this.__HtmlParser__inHeadPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_inHeadPhase");
        value = _this.__HtmlParser__inHeadPhase_FI = new A.InHeadPhase(_this, _this.tree);
      }
      return value;
    },
    get$_inBodyPhase() {
      var _this = this,
        value = _this.__HtmlParser__inBodyPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_inBodyPhase");
        value = _this.__HtmlParser__inBodyPhase_FI = new A.InBodyPhase(_this, _this.tree);
      }
      return value;
    },
    get$_textPhase() {
      var _this = this,
        value = _this.__HtmlParser__textPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_textPhase");
        value = _this.__HtmlParser__textPhase_FI = new A.TextPhase(_this, _this.tree);
      }
      return value;
    },
    get$_inTablePhase() {
      var _this = this,
        value = _this.__HtmlParser__inTablePhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_inTablePhase");
        value = _this.__HtmlParser__inTablePhase_FI = new A.InTablePhase(_this, _this.tree);
      }
      return value;
    },
    get$_inTableTextPhase() {
      var t1, _this = this,
        value = _this.__HtmlParser__inTableTextPhase_FI;
      if (value === $) {
        t1 = A._setArrayType([], type$.JSArray_StringToken);
        _this.__HtmlParser__inTableTextPhase_FI !== $ && A.throwLateFieldADI("_inTableTextPhase");
        value = _this.__HtmlParser__inTableTextPhase_FI = new A.InTableTextPhase(t1, _this, _this.tree);
      }
      return value;
    },
    get$_inCaptionPhase() {
      var _this = this,
        value = _this.__HtmlParser__inCaptionPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_inCaptionPhase");
        value = _this.__HtmlParser__inCaptionPhase_FI = new A.InCaptionPhase(_this, _this.tree);
      }
      return value;
    },
    get$_inColumnGroupPhase() {
      var _this = this,
        value = _this.__HtmlParser__inColumnGroupPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_inColumnGroupPhase");
        value = _this.__HtmlParser__inColumnGroupPhase_FI = new A.InColumnGroupPhase(_this, _this.tree);
      }
      return value;
    },
    get$_inTableBodyPhase() {
      var _this = this,
        value = _this.__HtmlParser__inTableBodyPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_inTableBodyPhase");
        value = _this.__HtmlParser__inTableBodyPhase_FI = new A.InTableBodyPhase(_this, _this.tree);
      }
      return value;
    },
    get$_inRowPhase() {
      var _this = this,
        value = _this.__HtmlParser__inRowPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_inRowPhase");
        value = _this.__HtmlParser__inRowPhase_FI = new A.InRowPhase(_this, _this.tree);
      }
      return value;
    },
    get$_inCellPhase() {
      var _this = this,
        value = _this.__HtmlParser__inCellPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_inCellPhase");
        value = _this.__HtmlParser__inCellPhase_FI = new A.InCellPhase(_this, _this.tree);
      }
      return value;
    },
    get$_inSelectPhase() {
      var _this = this,
        value = _this.__HtmlParser__inSelectPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_inSelectPhase");
        value = _this.__HtmlParser__inSelectPhase_FI = new A.InSelectPhase(_this, _this.tree);
      }
      return value;
    },
    get$_inFramesetPhase() {
      var _this = this,
        value = _this.__HtmlParser__inFramesetPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_inFramesetPhase");
        value = _this.__HtmlParser__inFramesetPhase_FI = new A.InFramesetPhase(_this, _this.tree);
      }
      return value;
    },
    _parse$0() {
      var exception;
      this.reset$0(0);
      for (; true;)
        try {
          this.mainLoop$0();
          break;
        } catch (exception) {
          if (A.unwrapException(exception) instanceof A.ReparseException)
            this.reset$0(0);
          else
            throw exception;
        }
    },
    reset$0(_) {
      var _this = this;
      _this.tokenizer.reset$0(0);
      _this.tree.reset$0(0);
      _this.firstStartTag = false;
      B.JSArray_methods.clear$0(_this.errors);
      _this.compatMode = "no quirks";
      _this.__HtmlParser_phase_AI = _this.get$_initialPhase();
      _this.framesetOK = true;
    },
    isHTMLIntegrationPoint$1(element) {
      var enc, t2,
        t1 = element.localName;
      if (t1 === "annotation-xml" && element.namespaceUri === "http://www.w3.org/1998/Math/MathML") {
        t1 = element.attributes.$index(0, "encoding");
        if (t1 == null)
          enc = null;
        else {
          t2 = type$.CodeUnits;
          enc = A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t1), t2._eval$1("int(ListBase.E)")._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t2._eval$1("MappedListIterable<ListBase.E,int>")), 0, null);
        }
        return enc === "text/html" || enc === "application/xhtml+xml";
      } else
        return B.JSArray_methods.contains$1(B.List_VRr, new A.Pair(element.namespaceUri, t1, type$.Pair_of_nullable_String_and_nullable_String));
    },
    inForeignContent$2(token, type) {
      var node,
        t1 = this.tree,
        t2 = t1.openElements;
      if (t2.length === 0)
        return false;
      node = B.JSArray_methods.get$last(t2);
      t2 = node.namespaceUri;
      if (t2 == t1.defaultNamespace)
        return false;
      t1 = node.localName;
      if (B.JSArray_methods.contains$1(B.List_6pl, new A.Pair(t2, t1, type$.Pair_of_nullable_String_and_nullable_String))) {
        if (type === 2) {
          t2 = type$.StartTagToken._as(token).name;
          t2 = t2 !== "mglyph" && t2 !== "malignmark";
        } else
          t2 = false;
        if (t2)
          return false;
        if (type === 1 || type === 0)
          return false;
      }
      if (t1 === "annotation-xml" && type === 2 && type$.StartTagToken._as(token).name === "svg")
        return false;
      if (this.isHTMLIntegrationPoint$1(node))
        if (type === 2 || type === 1 || type === 0)
          return false;
      return true;
    },
    mainLoop$0() {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, newToken, type, span, t16, t17, t18, t19, value, result, localPhase, reprocessPhases, reprocess, _this = this,
        _s13_ = "_initialPhase";
      for (t1 = _this.tokenizer, t2 = _this.tree, t3 = type$.DoctypeToken, t4 = type$.CommentToken, t5 = type$.EndTagToken, t6 = type$.StartTagToken, t7 = type$.SpaceCharactersToken, t8 = type$.CharactersToken, t9 = _this.errors, t10 = type$.nullable_Map_of_String_and_nullable_Object, t11 = type$.ParseErrorToken, t12 = t1.stream, t13 = type$.String, t14 = type$.nullable_Object; t1.moveNext$0();) {
        t15 = t1._tokenizer$_current;
        t15.toString;
        for (newToken = t15; newToken != null;) {
          type = newToken.get$kind(newToken);
          if (type === 6) {
            t11._as(newToken);
            span = newToken.span;
            t16 = newToken._token$_string;
            if (t16 == null) {
              t16 = newToken._token$_string = J.toString$0$(newToken._buffer);
              newToken._buffer = null;
            }
            t17 = t10._as(newToken.messageParams);
            if (span == null) {
              t18 = t12.fileInfo;
              if (t18 == null)
                span = null;
              else {
                t19 = t12._html_input_stream$_offset;
                new A.FileLocation(t18, t19).FileLocation$_$2(t18, t19);
                span = new A._FileSpan(t18, t19, t19);
                span._FileSpan$3(t18, t19, t19);
              }
            }
            B.JSArray_methods.add$1(t9, new A.ParseError(t16, span, t17));
            newToken = null;
          } else {
            value = _this.__HtmlParser_phase_AI;
            if (value === $) {
              value = _this.__HtmlParser__initialPhase_FI;
              if (value === $) {
                result = new A.InitialPhase(_this, t2);
                value !== $ && A.throwLateFieldADI(_s13_);
                _this.__HtmlParser__initialPhase_FI = result;
                value = result;
              }
              _this.__HtmlParser_phase_AI = value;
            }
            if (_this.inForeignContent$2(t15, type)) {
              value = _this.__HtmlParser__inForeignContentPhase_FI;
              if (value === $) {
                result = new A.InForeignContentPhase(_this, t2);
                value !== $ && A.throwLateFieldADI("_inForeignContentPhase");
                _this.__HtmlParser__inForeignContentPhase_FI = result;
                value = result;
              }
              localPhase = value;
            } else
              localPhase = value;
            switch (type) {
              case 1:
                newToken = localPhase.processCharacters$1(t8._as(newToken));
                break;
              case 0:
                newToken = localPhase.processSpaceCharacters$1(t7._as(newToken));
                break;
              case 2:
                newToken = localPhase.processStartTag$1(t6._as(newToken));
                break;
              case 3:
                newToken = localPhase.processEndTag$1(t5._as(newToken));
                break;
              case 4:
                newToken = localPhase.processComment$1(t4._as(newToken));
                break;
              case 5:
                newToken = localPhase.processDoctype$1(t3._as(newToken));
                break;
            }
          }
        }
        if (t15 instanceof A.StartTagToken)
          if (t15.selfClosing && !t15.selfClosingAcknowledged) {
            span = t15.span;
            t15 = t10._as(A.LinkedHashMap_LinkedHashMap$_literal(["name", t15.name], t13, t14));
            if (span == null) {
              t16 = t12.fileInfo;
              if (t16 == null)
                span = null;
              else {
                t17 = t12._html_input_stream$_offset;
                new A.FileLocation(t16, t17).FileLocation$_$2(t16, t17);
                span = new A._FileSpan(t16, t17, t17);
                span._FileSpan$3(t16, t17, t17);
              }
            }
            B.JSArray_methods.add$1(t9, new A.ParseError("non-void-element-with-trailing-solidus", span, t15));
          }
      }
      reprocessPhases = A._setArrayType([], type$.JSArray_Phase);
      for (reprocess = true; reprocess;) {
        value = _this.__HtmlParser_phase_AI;
        if (value === $) {
          value = _this.__HtmlParser__initialPhase_FI;
          if (value === $) {
            result = new A.InitialPhase(_this, t2);
            value !== $ && A.throwLateFieldADI(_s13_);
            _this.__HtmlParser__initialPhase_FI = result;
            value = result;
          }
          value = _this.__HtmlParser_phase_AI = value;
        }
        B.JSArray_methods.add$1(reprocessPhases, value);
        value = _this.__HtmlParser_phase_AI;
        if (value === $) {
          value = _this.__HtmlParser__initialPhase_FI;
          if (value === $) {
            result = new A.InitialPhase(_this, t2);
            value !== $ && A.throwLateFieldADI(_s13_);
            _this.__HtmlParser__initialPhase_FI = result;
            value = result;
          }
          value = _this.__HtmlParser_phase_AI = value;
        }
        reprocess = value.processEOF$0();
      }
    },
    get$_lastSpan() {
      var t1 = this.tokenizer.stream,
        t2 = t1.fileInfo;
      if (t2 == null)
        t1 = null;
      else {
        t1 = A.FileLocation$_(t2, t1._html_input_stream$_offset);
        t2 = t1.offset;
        t2 = A._FileSpan$(t1.file, t2, t2);
        t1 = t2;
      }
      return t1;
    },
    parseError$3(span, errorcode, datavars) {
      var err;
      type$.nullable_Map_of_String_and_nullable_Object._as(datavars);
      err = new A.ParseError(errorcode, span == null ? this.get$_lastSpan() : span, datavars);
      B.JSArray_methods.add$1(this.errors, err);
    },
    parseError$2(span, errorcode) {
      return this.parseError$3(span, errorcode, B.Map_empty);
    },
    adjustMathMLAttributes$1(token) {
      var orig = token.data.remove$1(0, "definitionurl");
      if (orig != null)
        token.data.$indexSet(0, "definitionURL", orig);
    },
    adjustSVGAttributes$1(token) {
      var t1, t2, _i, t3, svgName, t4;
      for (t1 = token.data, t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"), t2 = A.List_List$of(new A.LinkedHashMapKeyIterable(t1, t2), false, t2._eval$1("Iterable.E")), t1 = t2.length, _i = 0; _i < t1; ++_i) {
        t3 = A._asString(t2[_i]);
        svgName = B.Map_bp8kq.$index(0, t3);
        if (svgName != null) {
          t4 = token.data;
          t3 = t4.remove$1(0, t3);
          t3.toString;
          t4.$indexSet(0, svgName, t3);
        }
      }
    },
    adjustForeignAttributes$1(token) {
      var t1, t2, _i, t3, foreignName, t4;
      for (t1 = token.data, t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"), t2 = A.List_List$of(new A.LinkedHashMapKeyIterable(t1, t2), false, t2._eval$1("Iterable.E")), t1 = t2.length, _i = 0; _i < t1; ++_i) {
        t3 = A._asString(t2[_i]);
        foreignName = B.Map_kfbiD.$index(0, t3);
        if (foreignName != null) {
          t4 = token.data;
          t3 = t4.remove$1(0, t3);
          t3.toString;
          t4.$indexSet(0, foreignName, t3);
        }
      }
    },
    resetInsertionMode$0() {
      var t1, t2, t3, t4, t5, t6, nodeName, last, value, _this = this,
        _s12_ = "_inCellPhase",
        _s17_ = "_inTableBodyPhase",
        _s12_0 = "_inBodyPhase";
      for (t1 = _this.tree, t2 = t1.openElements, t3 = A._arrayInstanceType(t2)._eval$1("ReversedListIterable<1>"), t4 = new A.ReversedListIterable(t2, t3), t4 = new A.ListIterator(t4, t4.get$length(0), t3._eval$1("ListIterator<ListIterable.E>")), t3 = t3._eval$1("ListIterable.E"), t5 = t1.defaultNamespace; t4.moveNext$0();) {
        t6 = t4.__internal$_current;
        if (t6 == null)
          t6 = t3._as(t6);
        nodeName = t6.localName;
        if (0 >= t2.length)
          return A.ioore(t2, 0);
        last = t6 === t2[0];
        if (last)
          nodeName = _this.innerHTML;
        switch (nodeName) {
          case "select":
          case "colgroup":
          case "head":
          case "html":
            break;
        }
        if (!last && t6.namespaceUri != t5)
          continue;
        switch (nodeName) {
          case "select":
            value = _this.__HtmlParser__inSelectPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI("_inSelectPhase");
              value = _this.__HtmlParser__inSelectPhase_FI = new A.InSelectPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "td":
            value = _this.__HtmlParser__inCellPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI(_s12_);
              value = _this.__HtmlParser__inCellPhase_FI = new A.InCellPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "th":
            value = _this.__HtmlParser__inCellPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI(_s12_);
              value = _this.__HtmlParser__inCellPhase_FI = new A.InCellPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "tr":
            value = _this.__HtmlParser__inRowPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI("_inRowPhase");
              value = _this.__HtmlParser__inRowPhase_FI = new A.InRowPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "tbody":
            value = _this.__HtmlParser__inTableBodyPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI(_s17_);
              value = _this.__HtmlParser__inTableBodyPhase_FI = new A.InTableBodyPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "thead":
            value = _this.__HtmlParser__inTableBodyPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI(_s17_);
              value = _this.__HtmlParser__inTableBodyPhase_FI = new A.InTableBodyPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "tfoot":
            value = _this.__HtmlParser__inTableBodyPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI(_s17_);
              value = _this.__HtmlParser__inTableBodyPhase_FI = new A.InTableBodyPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "caption":
            value = _this.__HtmlParser__inCaptionPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI("_inCaptionPhase");
              value = _this.__HtmlParser__inCaptionPhase_FI = new A.InCaptionPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "colgroup":
            value = _this.__HtmlParser__inColumnGroupPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI("_inColumnGroupPhase");
              value = _this.__HtmlParser__inColumnGroupPhase_FI = new A.InColumnGroupPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "table":
            value = _this.__HtmlParser__inTablePhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI("_inTablePhase");
              value = _this.__HtmlParser__inTablePhase_FI = new A.InTablePhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "head":
            value = _this.__HtmlParser__inBodyPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI(_s12_0);
              value = _this.__HtmlParser__inBodyPhase_FI = new A.InBodyPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "body":
            value = _this.__HtmlParser__inBodyPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI(_s12_0);
              value = _this.__HtmlParser__inBodyPhase_FI = new A.InBodyPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "frameset":
            value = _this.__HtmlParser__inFramesetPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI("_inFramesetPhase");
              value = _this.__HtmlParser__inFramesetPhase_FI = new A.InFramesetPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
          case "html":
            value = _this.__HtmlParser__beforeHeadPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI("_beforeHeadPhase");
              value = _this.__HtmlParser__beforeHeadPhase_FI = new A.BeforeHeadPhase(_this, t1);
            }
            _this.__HtmlParser_phase_AI = value;
            return;
        }
      }
      _this.__HtmlParser_phase_AI = _this.get$_inBodyPhase();
    },
    parseRCDataRawtext$2(token, contentType) {
      var t1, t2, _this = this;
      _this.tree.insertElement$1(token);
      t1 = type$.bool_Function;
      t2 = _this.tokenizer;
      if (contentType === "RAWTEXT")
        t2.set$__HtmlTokenizer_state_A(t1._as(t2.get$rawtextState()));
      else
        t2.set$__HtmlTokenizer_state_A(t1._as(t2.get$rcdataState()));
      _this.originalPhase = _this.get$phase();
      _this.__HtmlParser_phase_AI = _this.get$_textPhase();
    }
  };
  A.Phase.prototype = {
    processEOF$0() {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    processComment$1(token) {
      var t1 = this.tree;
      t1.insertComment$2(token, B.JSArray_methods.get$last(t1.openElements));
      return null;
    },
    processDoctype$1(token) {
      this.parser.parseError$2(token.span, "unexpected-doctype");
      return null;
    },
    processCharacters$1(token) {
      this.tree.insertText$2(token.get$data(0), token.span);
      return null;
    },
    processSpaceCharacters$1(token) {
      this.tree.insertText$2(token.get$data(0), token.span);
      return null;
    },
    processStartTag$1(token) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    startTagHtml$1(token) {
      var t2,
        t1 = this.parser;
      if (!t1.firstStartTag && token.name === "html")
        t1.parseError$2(token.span, "non-html-root");
      t2 = this.tree.openElements;
      if (0 >= t2.length)
        return A.ioore(t2, 0);
      t2[0].sourceSpan = token.span;
      token.data.forEach$1(0, new A.Phase_startTagHtml_closure(this));
      t1.firstStartTag = false;
      return null;
    },
    processEndTag$1(token) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    popOpenElementsUntil$1(token) {
      var node,
        $name = token.name,
        t1 = this.tree.openElements;
      if (0 >= t1.length)
        return A.ioore(t1, -1);
      node = t1.pop();
      for (; node.localName != $name;) {
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        node = t1.pop();
      }
    }
  };
  A.Phase_startTagHtml_closure.prototype = {
    call$2(attr, value) {
      var t1;
      type$.Object._as(attr);
      A._asString(value);
      t1 = this.$this.tree.openElements;
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      t1[0].attributes.putIfAbsent$2(attr, new A.Phase_startTagHtml__closure(value));
    },
    $signature: 21
  };
  A.Phase_startTagHtml__closure.prototype = {
    call$0() {
      return this.value;
    },
    $signature: 13
  };
  A.InitialPhase.prototype = {
    processSpaceCharacters$1(token) {
      return null;
    },
    processComment$1(token) {
      var t1 = this.tree,
        t2 = t1.__TreeBuilder_document_A;
      t2 === $ && A.throwLateFieldNI("document");
      t1.insertComment$2(token, t2);
      return null;
    },
    processDoctype$1(token) {
      var publicId, t2, systemId, correct, doctype, _this = this,
        $name = token.name,
        t1 = token.publicId;
      if (t1 == null)
        publicId = null;
      else {
        t2 = type$.CodeUnits;
        publicId = A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t1), t2._eval$1("int(ListBase.E)")._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t2._eval$1("MappedListIterable<ListBase.E,int>")), 0, null);
      }
      systemId = token.systemId;
      correct = token.correct;
      if ($name === "html")
        if (publicId == null)
          t1 = systemId != null && systemId !== "about:legacy-compat";
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        _this.parser.parseError$2(token.span, "unknown-doctype");
      if (publicId == null)
        publicId = "";
      doctype = A.DocumentType$(token.name, token.publicId, token.systemId);
      doctype.sourceSpan = token.span;
      t1 = _this.tree.__TreeBuilder_document_A;
      t1 === $ && A.throwLateFieldNI("document");
      t1.get$nodes(0).add$1(0, doctype);
      if (correct)
        if (token.name === "html") {
          t1 = B.JSString_methods.get$startsWith(publicId);
          if (!B.JSArray_methods.any$1(B.List_GJC, t1))
            if (!B.JSArray_methods.contains$1(B.List_chs, publicId))
              if (!(B.JSArray_methods.any$1(B.List_2jH, t1) && systemId == null))
                t1 = systemId != null && systemId.toLowerCase() === "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd";
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        } else
          t1 = true;
      else
        t1 = true;
      if (t1)
        _this.parser.compatMode = "quirks";
      else {
        t1 = B.JSString_methods.get$startsWith(publicId);
        if (!B.JSArray_methods.any$1(B.List_k6K, t1))
          t1 = B.JSArray_methods.any$1(B.List_2jH, t1) && systemId != null;
        else
          t1 = true;
        if (t1)
          _this.parser.compatMode = "limited quirks";
      }
      t1 = _this.parser;
      t1.__HtmlParser_phase_AI = t1.get$_beforeHtmlPhase();
      return null;
    },
    anythingElse$0() {
      var t1 = this.parser;
      t1.compatMode = "quirks";
      t1.__HtmlParser_phase_AI = t1.get$_beforeHtmlPhase();
    },
    processCharacters$1(token) {
      this.parser.parseError$2(token.span, "expected-doctype-but-got-chars");
      this.anythingElse$0();
      return token;
    },
    processStartTag$1(token) {
      this.parser.parseError$3(token.span, "expected-doctype-but-got-start-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
      this.anythingElse$0();
      return token;
    },
    processEndTag$1(token) {
      this.parser.parseError$3(token.span, "expected-doctype-but-got-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
      this.anythingElse$0();
      return token;
    },
    processEOF$0() {
      var t1 = this.parser;
      t1.parseError$2(t1.get$_lastSpan(), "expected-doctype-but-got-eof");
      this.anythingElse$0();
      return true;
    }
  };
  A.BeforeHtmlPhase.prototype = {
    insertHtmlElement$0() {
      var t1 = this.tree,
        element = t1.createElement$1(0, A.StartTagToken$("html", A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String), null, false));
      B.JSArray_methods.add$1(t1.openElements, element);
      t1 = t1.__TreeBuilder_document_A;
      t1 === $ && A.throwLateFieldNI("document");
      t1.get$nodes(0).add$1(0, element);
      t1 = this.parser;
      t1.__HtmlParser_phase_AI = t1.get$_beforeHeadPhase();
    },
    processEOF$0() {
      this.insertHtmlElement$0();
      return true;
    },
    processComment$1(token) {
      var t1 = this.tree,
        t2 = t1.__TreeBuilder_document_A;
      t2 === $ && A.throwLateFieldNI("document");
      t1.insertComment$2(token, t2);
      return null;
    },
    processSpaceCharacters$1(token) {
      return null;
    },
    processCharacters$1(token) {
      this.insertHtmlElement$0();
      return token;
    },
    processStartTag$1(token) {
      if (token.name === "html")
        this.parser.firstStartTag = true;
      this.insertHtmlElement$0();
      return token;
    },
    processEndTag$1(token) {
      var t1 = token.name;
      switch (t1) {
        case "head":
        case "body":
        case "html":
        case "br":
          this.insertHtmlElement$0();
          return token;
        default:
          this.parser.parseError$3(token.span, "unexpected-end-tag-before-html", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
      }
    }
  };
  A.BeforeHeadPhase.prototype = {
    processStartTag$1(token) {
      switch (token.name) {
        case "html":
          return this.parser.get$_inBodyPhase().processStartTag$1(token);
        case "head":
          this.startTagHead$1(token);
          return null;
        default:
          this.startTagHead$1(A.StartTagToken$("head", A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String), null, false));
          return token;
      }
    },
    processEndTag$1(token) {
      var t1 = token.name;
      switch (t1) {
        case "head":
        case "body":
        case "html":
        case "br":
          this.startTagHead$1(A.StartTagToken$("head", A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String), null, false));
          return token;
        default:
          this.parser.parseError$3(token.span, "end-tag-after-implied-root", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
      }
    },
    processEOF$0() {
      this.startTagHead$1(A.StartTagToken$("head", A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String), null, false));
      return true;
    },
    processSpaceCharacters$1(token) {
      return null;
    },
    processCharacters$1(token) {
      this.startTagHead$1(A.StartTagToken$("head", A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String), null, false));
      return token;
    },
    startTagHead$1(token) {
      var t1 = this.tree;
      t1.insertElement$1(token);
      t1.set$headPointer(B.JSArray_methods.get$last(t1.openElements));
      t1 = this.parser;
      t1.__HtmlParser_phase_AI = t1.get$_inHeadPhase();
    }
  };
  A.InHeadPhase.prototype = {
    processStartTag$1(token) {
      var t1, t2, attributes, charset, $content, _this = this, _null = null;
      switch (token.name) {
        case "html":
          return _this.parser.get$_inBodyPhase().processStartTag$1(token);
        case "title":
          _this.parser.parseRCDataRawtext$2(token, "RCDATA");
          return _null;
        case "noscript":
        case "noframes":
        case "style":
          _this.parser.parseRCDataRawtext$2(token, "RAWTEXT");
          return _null;
        case "script":
          _this.tree.insertElement$1(token);
          t1 = _this.parser;
          t2 = t1.tokenizer;
          t2.set$__HtmlTokenizer_state_A(type$.bool_Function._as(t2.get$scriptDataState()));
          t1.originalPhase = t1.get$phase();
          t1.__HtmlParser_phase_AI = t1.get$_textPhase();
          return _null;
        case "base":
        case "basefont":
        case "bgsound":
        case "command":
        case "link":
          t1 = _this.tree;
          t1.insertElement$1(token);
          t1 = t1.openElements;
          if (0 >= t1.length)
            return A.ioore(t1, -1);
          t1.pop();
          token.selfClosingAcknowledged = true;
          return _null;
        case "meta":
          t1 = _this.tree;
          t1.insertElement$1(token);
          t1 = t1.openElements;
          if (0 >= t1.length)
            return A.ioore(t1, -1);
          t1.pop();
          token.selfClosingAcknowledged = true;
          attributes = token.data;
          t1 = _this.parser.tokenizer.stream;
          if (!t1.charEncodingCertain) {
            charset = attributes.$index(0, "charset");
            $content = attributes.$index(0, "content");
            if (charset != null)
              t1.changeEncoding$1(charset);
            else if ($content != null)
              t1.changeEncoding$1(new A.ContentAttrParser(new A.EncodingBytes($content)).parse$0());
          }
          return _null;
        case "head":
          _this.parser.parseError$2(token.span, "two-heads-are-not-better-than-one");
          return _null;
        default:
          _this.endTagHead$1(new A.EndTagToken("head", false));
          return token;
      }
    },
    processEndTag$1(token) {
      var t1 = token.name;
      switch (t1) {
        case "head":
          this.endTagHead$1(token);
          return null;
        case "br":
        case "html":
        case "body":
          this.endTagHead$1(new A.EndTagToken("head", false));
          return token;
        default:
          this.parser.parseError$3(token.span, "unexpected-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
      }
    },
    processEOF$0() {
      this.endTagHead$1(new A.EndTagToken("head", false));
      return true;
    },
    processCharacters$1(token) {
      this.endTagHead$1(new A.EndTagToken("head", false));
      return token;
    },
    endTagHead$1(token) {
      var value,
        t1 = this.parser,
        t2 = t1.tree,
        t3 = t2.openElements;
      if (0 >= t3.length)
        return A.ioore(t3, -1);
      t3.pop();
      value = t1.__HtmlParser__afterHeadPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_afterHeadPhase");
        value = t1.__HtmlParser__afterHeadPhase_FI = new A.AfterHeadPhase(t1, t2);
      }
      t1.__HtmlParser_phase_AI = value;
    }
  };
  A.AfterHeadPhase.prototype = {
    processStartTag$1(token) {
      var _this = this, _null = null,
        t1 = token.name;
      switch (t1) {
        case "html":
          return _this.parser.get$_inBodyPhase().processStartTag$1(token);
        case "body":
          t1 = _this.parser;
          t1.framesetOK = false;
          _this.tree.insertElement$1(token);
          t1.__HtmlParser_phase_AI = t1.get$_inBodyPhase();
          return _null;
        case "frameset":
          _this.tree.insertElement$1(token);
          t1 = _this.parser;
          t1.__HtmlParser_phase_AI = t1.get$_inFramesetPhase();
          return _null;
        case "base":
        case "basefont":
        case "bgsound":
        case "link":
        case "meta":
        case "noframes":
        case "script":
        case "style":
        case "title":
          _this.startTagFromHead$1(token);
          return _null;
        case "head":
          _this.parser.parseError$3(token.span, "unexpected-start-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return _null;
        default:
          _this.anythingElse$0();
          return token;
      }
    },
    processEndTag$1(token) {
      var t1 = token.name;
      switch (t1) {
        case "body":
        case "html":
        case "br":
          this.anythingElse$0();
          return token;
        default:
          this.parser.parseError$3(token.span, "unexpected-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
      }
    },
    processEOF$0() {
      this.anythingElse$0();
      return true;
    },
    processCharacters$1(token) {
      this.anythingElse$0();
      return token;
    },
    startTagFromHead$1(token) {
      var t2, t3, t4,
        t1 = this.parser;
      t1.parseError$3(token.span, "unexpected-start-tag-out-of-my-head", A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
      t2 = this.tree;
      t3 = t2.openElements;
      B.JSArray_methods.add$1(t3, type$.Element_2._as(t2.headPointer));
      t1.get$_inHeadPhase().processStartTag$1(token);
      for (t1 = A._arrayInstanceType(t3)._eval$1("ReversedListIterable<1>"), t2 = new A.ReversedListIterable(t3, t1), t2 = new A.ListIterator(t2, t2.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"); t2.moveNext$0();) {
        t4 = t2.__internal$_current;
        if (t4 == null)
          t4 = t1._as(t4);
        if (t4.localName === "head") {
          B.JSArray_methods.remove$1(t3, t4);
          break;
        }
      }
    },
    anythingElse$0() {
      this.tree.insertElement$1(A.StartTagToken$("body", A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String), null, false));
      var t1 = this.parser;
      t1.__HtmlParser_phase_AI = t1.get$_inBodyPhase();
      t1.framesetOK = true;
    }
  };
  A.InBodyPhase.prototype = {
    processStartTag$1(token) {
      var t2, afeAElement, savedFramesetOK, t3, value, last, _this = this, _null = null, _s1_ = "p", _s6_ = "button",
        _s20_ = "unexpected-start-tag",
        _s36_ = "unexpected-start-tag-implies-end-tag",
        _s7_ = "RAWTEXT",
        t1 = token.name;
      switch (t1) {
        case "html":
          return _this.startTagHtml$1(token);
        case "base":
        case "basefont":
        case "bgsound":
        case "command":
        case "link":
        case "meta":
        case "noframes":
        case "script":
        case "style":
        case "title":
          return _this.parser.get$_inHeadPhase().processStartTag$1(token);
        case "body":
          _this.startTagBody$1(token);
          return _null;
        case "frameset":
          _this.startTagFrameset$1(token);
          return _null;
        case "address":
        case "article":
        case "aside":
        case "blockquote":
        case "center":
        case "details":
        case "dir":
        case "div":
        case "dl":
        case "fieldset":
        case "figcaption":
        case "figure":
        case "footer":
        case "header":
        case "hgroup":
        case "menu":
        case "nav":
        case "ol":
        case "p":
        case "section":
        case "summary":
        case "ul":
          _this.startTagCloseP$1(token);
          return _null;
        case "h1":
        case "h2":
        case "h3":
        case "h4":
        case "h5":
        case "h6":
          t1 = _this.tree;
          if (t1.elementInScope$2$variant(_s1_, _s6_))
            _this.endTagP$1(new A.EndTagToken(_s1_, false));
          t2 = t1.openElements;
          if (B.JSArray_methods.contains$1(B.List_adS, B.JSArray_methods.get$last(t2).localName)) {
            _this.parser.parseError$3(token.span, _s20_, A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
            if (0 >= t2.length)
              return A.ioore(t2, -1);
            t2.pop();
          }
          t1.insertElement$1(token);
          return _null;
        case "pre":
        case "listing":
          t1 = _this.tree;
          if (t1.elementInScope$2$variant(_s1_, _s6_))
            _this.endTagP$1(new A.EndTagToken(_s1_, false));
          t1.insertElement$1(token);
          _this.parser.framesetOK = false;
          _this.dropNewline = true;
          return _null;
        case "form":
          t1 = _this.tree;
          if (t1.formPointer != null)
            _this.parser.parseError$3(token.span, _s20_, A.LinkedHashMap_LinkedHashMap$_literal(["name", "form"], type$.String, type$.nullable_Object));
          else {
            if (t1.elementInScope$2$variant(_s1_, _s6_))
              _this.endTagP$1(new A.EndTagToken(_s1_, false));
            t1.insertElement$1(token);
            t1.set$formPointer(B.JSArray_methods.get$last(t1.openElements));
          }
          return _null;
        case "li":
        case "dd":
        case "dt":
          _this.startTagListItem$1(token);
          return _null;
        case "plaintext":
          t1 = _this.tree;
          if (t1.elementInScope$2$variant(_s1_, _s6_))
            _this.endTagP$1(new A.EndTagToken(_s1_, false));
          t1.insertElement$1(token);
          t1 = _this.parser.tokenizer;
          t1.set$__HtmlTokenizer_state_A(type$.bool_Function._as(t1.get$plaintextState()));
          return _null;
        case "a":
          t1 = _this.tree;
          afeAElement = t1.elementInActiveFormattingElements$1("a");
          if (afeAElement != null) {
            _this.parser.parseError$3(token.span, _s36_, A.LinkedHashMap_LinkedHashMap$_literal(["startName", "a", "endName", "a"], type$.String, type$.nullable_Object));
            _this.endTagFormatting$1(new A.EndTagToken("a", false));
            B.JSArray_methods.remove$1(t1.openElements, afeAElement);
            B.JSArray_methods.remove$1(t1.activeFormattingElements._list_proxy$_list, afeAElement);
          }
          t1.reconstructActiveFormattingElements$0();
          _this.addFormattingElement$1(token);
          return _null;
        case "b":
        case "big":
        case "code":
        case "em":
        case "font":
        case "i":
        case "s":
        case "small":
        case "strike":
        case "strong":
        case "tt":
        case "u":
          _this.tree.reconstructActiveFormattingElements$0();
          _this.addFormattingElement$1(token);
          return _null;
        case "nobr":
          t1 = _this.tree;
          t1.reconstructActiveFormattingElements$0();
          if (t1.elementInScope$1("nobr")) {
            _this.parser.parseError$3(token.span, _s36_, A.LinkedHashMap_LinkedHashMap$_literal(["startName", "nobr", "endName", "nobr"], type$.String, type$.nullable_Object));
            _this.processEndTag$1(new A.EndTagToken("nobr", false));
            t1.reconstructActiveFormattingElements$0();
          }
          _this.addFormattingElement$1(token);
          return _null;
        case "button":
          return _this.startTagButton$1(token);
        case "applet":
        case "marquee":
        case "object":
          t1 = _this.tree;
          t1.reconstructActiveFormattingElements$0();
          t1.insertElement$1(token);
          t1.activeFormattingElements.add$1(0, _null);
          _this.parser.framesetOK = false;
          return _null;
        case "xmp":
          t1 = _this.tree;
          if (t1.elementInScope$2$variant(_s1_, _s6_))
            _this.endTagP$1(new A.EndTagToken(_s1_, false));
          t1.reconstructActiveFormattingElements$0();
          t1 = _this.parser;
          t1.framesetOK = false;
          t1.parseRCDataRawtext$2(token, _s7_);
          return _null;
        case "table":
          t1 = _this.parser;
          if (t1.compatMode !== "quirks")
            if (_this.tree.elementInScope$2$variant(_s1_, _s6_))
              _this.processEndTag$1(new A.EndTagToken(_s1_, false));
          _this.tree.insertElement$1(token);
          t1.framesetOK = false;
          t1.__HtmlParser_phase_AI = t1.get$_inTablePhase();
          return _null;
        case "area":
        case "br":
        case "embed":
        case "img":
        case "keygen":
        case "wbr":
          _this.startTagVoidFormatting$1(token);
          return _null;
        case "param":
        case "source":
        case "track":
          t1 = _this.tree;
          t1.insertElement$1(token);
          t1 = t1.openElements;
          if (0 >= t1.length)
            return A.ioore(t1, -1);
          t1.pop();
          token.selfClosingAcknowledged = true;
          return _null;
        case "input":
          t1 = _this.parser;
          savedFramesetOK = t1.framesetOK;
          _this.startTagVoidFormatting$1(token);
          t2 = token.data.$index(0, "type");
          if (t2 == null)
            t2 = _null;
          else {
            t3 = type$.CodeUnits;
            t3 = A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t2), t3._eval$1("int(ListBase.E)")._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t3._eval$1("MappedListIterable<ListBase.E,int>")), 0, _null);
            t2 = t3;
          }
          if (t2 === "hidden")
            t1.framesetOK = savedFramesetOK;
          return _null;
        case "hr":
          t1 = _this.tree;
          if (t1.elementInScope$2$variant(_s1_, _s6_))
            _this.endTagP$1(new A.EndTagToken(_s1_, false));
          t1.insertElement$1(token);
          t1 = t1.openElements;
          if (0 >= t1.length)
            return A.ioore(t1, -1);
          t1.pop();
          token.selfClosingAcknowledged = true;
          _this.parser.framesetOK = false;
          return _null;
        case "image":
          _this.parser.parseError$3(token.span, "unexpected-start-tag-treated-as", A.LinkedHashMap_LinkedHashMap$_literal(["originalName", "image", "newName", "img"], type$.String, type$.nullable_Object));
          _this.processStartTag$1(A.StartTagToken$("img", token.data, _null, token.selfClosing));
          return _null;
        case "isindex":
          _this.startTagIsIndex$1(token);
          return _null;
        case "textarea":
          _this.tree.insertElement$1(token);
          t1 = _this.parser;
          t2 = t1.tokenizer;
          t2.set$__HtmlTokenizer_state_A(type$.bool_Function._as(t2.get$rcdataState()));
          _this.dropNewline = true;
          t1.framesetOK = false;
          return _null;
        case "iframe":
          t1 = _this.parser;
          t1.framesetOK = false;
          t1.parseRCDataRawtext$2(token, _s7_);
          return _null;
        case "noembed":
        case "noscript":
          _this.parser.parseRCDataRawtext$2(token, _s7_);
          return _null;
        case "select":
          t1 = _this.tree;
          t1.reconstructActiveFormattingElements$0();
          t1.insertElement$1(token);
          t1 = _this.parser;
          t1.framesetOK = false;
          if (t1.get$_inTablePhase() === t1.get$phase() || t1.get$_inCaptionPhase() === t1.get$phase() || t1.get$_inColumnGroupPhase() === t1.get$phase() || t1.get$_inTableBodyPhase() === t1.get$phase() || t1.get$_inRowPhase() === t1.get$phase() || t1.get$_inCellPhase() === t1.get$phase()) {
            value = t1.__HtmlParser__inSelectInTablePhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI("_inSelectInTablePhase");
              value = t1.__HtmlParser__inSelectInTablePhase_FI = new A.InSelectInTablePhase(t1, t1.tree);
            }
            t1.__HtmlParser_phase_AI = value;
          } else
            t1.__HtmlParser_phase_AI = t1.get$_inSelectPhase();
          return _null;
        case "rp":
        case "rt":
          t1 = _this.tree;
          if (t1.elementInScope$1("ruby")) {
            t1.generateImpliedEndTags$0();
            last = B.JSArray_methods.get$last(t1.openElements);
            if (last.localName !== "ruby")
              _this.parser.parseError$2(last.sourceSpan, "undefined-error");
          }
          t1.insertElement$1(token);
          return _null;
        case "option":
        case "optgroup":
          t1 = _this.tree;
          if (B.JSArray_methods.get$last(t1.openElements).localName === "option")
            _this.parser.get$phase().processEndTag$1(new A.EndTagToken("option", false));
          t1.reconstructActiveFormattingElements$0();
          _this.parser.tree.insertElement$1(token);
          return _null;
        case "math":
          t1 = _this.tree;
          t1.reconstructActiveFormattingElements$0();
          t2 = _this.parser;
          t2.adjustMathMLAttributes$1(token);
          t2.adjustForeignAttributes$1(token);
          token.namespace = "http://www.w3.org/1998/Math/MathML";
          t1.insertElement$1(token);
          if (token.selfClosing) {
            t1 = t1.openElements;
            if (0 >= t1.length)
              return A.ioore(t1, -1);
            t1.pop();
            token.selfClosingAcknowledged = true;
          }
          return _null;
        case "svg":
          t1 = _this.tree;
          t1.reconstructActiveFormattingElements$0();
          t2 = _this.parser;
          t2.adjustSVGAttributes$1(token);
          t2.adjustForeignAttributes$1(token);
          token.namespace = "http://www.w3.org/2000/svg";
          t1.insertElement$1(token);
          if (token.selfClosing) {
            t1 = t1.openElements;
            if (0 >= t1.length)
              return A.ioore(t1, -1);
            t1.pop();
            token.selfClosingAcknowledged = true;
          }
          return _null;
        case "caption":
        case "col":
        case "colgroup":
        case "frame":
        case "head":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
          _this.parser.parseError$3(token.span, "unexpected-start-tag-ignored", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return _null;
        default:
          t1 = _this.tree;
          t1.reconstructActiveFormattingElements$0();
          t1.insertElement$1(token);
          return _null;
      }
    },
    processEndTag$1(token) {
      var t2, inScope, node, variant, t3, _this = this, _null = null,
        _s17_ = "end-tag-too-early",
        _s18_ = "unexpected-end-tag",
        t1 = token.name;
      switch (t1) {
        case "body":
          _this.endTagBody$1(token);
          return _null;
        case "html":
          return _this.endTagHtml$1(token);
        case "address":
        case "article":
        case "aside":
        case "blockquote":
        case "button":
        case "center":
        case "details":
        case "dir":
        case "div":
        case "dl":
        case "fieldset":
        case "figcaption":
        case "figure":
        case "footer":
        case "header":
        case "hgroup":
        case "listing":
        case "menu":
        case "nav":
        case "ol":
        case "pre":
        case "section":
        case "summary":
        case "ul":
          if (t1 === "pre")
            _this.dropNewline = false;
          t2 = _this.tree;
          inScope = t2.elementInScope$1(t1);
          if (inScope)
            t2.generateImpliedEndTags$0();
          t1 = B.JSArray_methods.get$last(t2.openElements).localName;
          t2 = token.name;
          if (t1 != t2)
            _this.parser.parseError$3(token.span, _s17_, A.LinkedHashMap_LinkedHashMap$_literal(["name", t2], type$.String, type$.nullable_Object));
          if (inScope)
            _this.popOpenElementsUntil$1(token);
          return _null;
        case "form":
          t1 = _this.tree;
          node = t1.formPointer;
          t1.formPointer = null;
          if (node == null || !t1.elementInScope$1(node))
            _this.parser.parseError$3(token.span, _s18_, A.LinkedHashMap_LinkedHashMap$_literal(["name", "form"], type$.String, type$.nullable_Object));
          else {
            t1.generateImpliedEndTags$0();
            t1 = t1.openElements;
            if (!J.$eq$(B.JSArray_methods.get$last(t1), node))
              _this.parser.parseError$3(token.span, "end-tag-too-early-ignored", A.LinkedHashMap_LinkedHashMap$_literal(["name", "form"], type$.String, type$.nullable_Object));
            B.JSArray_methods.remove$1(t1, node);
          }
          return _null;
        case "p":
          _this.endTagP$1(token);
          return _null;
        case "dd":
        case "dt":
        case "li":
          variant = t1 === "li" ? "list" : _null;
          t2 = _this.tree;
          t1 = t2.elementInScope$2$variant(t1, variant);
          t3 = token.name;
          if (!t1)
            _this.parser.parseError$3(token.span, _s18_, A.LinkedHashMap_LinkedHashMap$_literal(["name", t3], type$.String, type$.nullable_Object));
          else {
            t2.generateImpliedEndTags$1(t3);
            t1 = B.JSArray_methods.get$last(t2.openElements).localName;
            t2 = token.name;
            if (t1 != t2)
              _this.parser.parseError$3(token.span, _s17_, A.LinkedHashMap_LinkedHashMap$_literal(["name", t2], type$.String, type$.nullable_Object));
            _this.popOpenElementsUntil$1(token);
          }
          return _null;
        case "h1":
        case "h2":
        case "h3":
        case "h4":
        case "h5":
        case "h6":
          _this.endTagHeading$1(token);
          return _null;
        case "a":
        case "b":
        case "big":
        case "code":
        case "em":
        case "font":
        case "i":
        case "nobr":
        case "s":
        case "small":
        case "strike":
        case "strong":
        case "tt":
        case "u":
          _this.endTagFormatting$1(token);
          return _null;
        case "applet":
        case "marquee":
        case "object":
          t2 = _this.tree;
          if (t2.elementInScope$1(t1))
            t2.generateImpliedEndTags$0();
          t1 = B.JSArray_methods.get$last(t2.openElements).localName;
          t3 = token.name;
          if (t1 != t3)
            _this.parser.parseError$3(token.span, _s17_, A.LinkedHashMap_LinkedHashMap$_literal(["name", t3], type$.String, type$.nullable_Object));
          if (t2.elementInScope$1(token.name)) {
            _this.popOpenElementsUntil$1(token);
            t2.clearActiveFormattingElements$0();
          }
          return _null;
        case "br":
          t1 = type$.String;
          _this.parser.parseError$3(token.span, "unexpected-end-tag-treated-as", A.LinkedHashMap_LinkedHashMap$_literal(["originalName", "br", "newName", "br element"], t1, type$.nullable_Object));
          t2 = _this.tree;
          t2.reconstructActiveFormattingElements$0();
          t2.insertElement$1(A.StartTagToken$("br", A.LinkedHashMap_LinkedHashMap(type$.Object, t1), _null, false));
          t2 = t2.openElements;
          if (0 >= t2.length)
            return A.ioore(t2, -1);
          t2.pop();
          return _null;
        default:
          _this.endTagOther$1(token);
          return _null;
      }
    },
    isMatchingFormattingElement$2(node1, node2) {
      var t1, t2;
      if (node1.localName != node2.localName || node1.namespaceUri != node2.namespaceUri)
        return false;
      else {
        t1 = node1.attributes;
        if (t1.__js_helper$_length !== node2.attributes.__js_helper$_length)
          return false;
        else
          for (t1 = A.LinkedHashMapKeyIterator$(t1, t1._modifications, A._instanceType(t1)._precomputed1); t1.moveNext$0();) {
            t2 = t1.__js_helper$_current;
            if (!J.$eq$(node1.attributes.$index(0, t2), node2.attributes.$index(0, t2)))
              return false;
          }
      }
      return true;
    },
    addFormattingElement$1(token) {
      var element, matchingElements, t2, t3, t4, t5,
        t1 = this.tree;
      t1.insertElement$1(token);
      element = B.JSArray_methods.get$last(t1.openElements);
      matchingElements = A._setArrayType([], type$.JSArray_nullable_Node);
      for (t1 = t1.activeFormattingElements, t2 = A._instanceType(t1)._eval$1("ReversedListIterable<ListBase.E>"), t3 = new A.ReversedListIterable(t1, t2), t3 = new A.ListIterator(t3, t3.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t4 = type$.Element_2, t2 = t2._eval$1("ListIterable.E"); t3.moveNext$0();) {
        t5 = t3.__internal$_current;
        if (t5 == null)
          t5 = t2._as(t5);
        if (t5 == null)
          break;
        else {
          t4._as(t5);
          if (this.isMatchingFormattingElement$2(t5, element))
            B.JSArray_methods.add$1(matchingElements, t5);
        }
      }
      if (matchingElements.length === 3)
        B.JSArray_methods.remove$1(t1._list_proxy$_list, B.JSArray_methods.get$last(matchingElements));
      t1.add$1(0, element);
    },
    processEOF$0() {
      var t1, t2, t3, span;
      $label0$1:
        for (t1 = this.tree.openElements, t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"), t1 = new A.ReversedListIterable(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          if (t3 == null)
            t3 = t2._as(t3);
          switch (t3.localName) {
            case "dd":
            case "dt":
            case "li":
            case "p":
            case "tbody":
            case "td":
            case "tfoot":
            case "th":
            case "thead":
            case "tr":
            case "body":
            case "html":
              continue $label0$1;
          }
          t1 = this.parser;
          span = t3.sourceSpan;
          type$.nullable_Map_of_String_and_nullable_Object._as(B.Map_empty);
          if (span == null) {
            t2 = t1.tokenizer.stream;
            t3 = t2.fileInfo;
            if (t3 == null)
              span = null;
            else {
              t2 = t2._html_input_stream$_offset;
              new A.FileLocation(t3, t2).FileLocation$_$2(t3, t2);
              span = new A._FileSpan(t3, t2, t2);
              span._FileSpan$3(t3, t2, t2);
            }
          }
          B.JSArray_methods.add$1(t1.errors, new A.ParseError("expected-closing-tag-but-got-eof", span, B.Map_empty));
          break $label0$1;
        }
      return false;
    },
    processCharacters$1(token) {
      var t1;
      if (token.get$data(0) === "\x00")
        return null;
      t1 = this.tree;
      t1.reconstructActiveFormattingElements$0();
      t1.insertText$2(token.get$data(0), token.span);
      t1 = this.parser;
      if (t1.framesetOK && !A.allWhitespace(token.get$data(0)))
        t1.framesetOK = false;
      return null;
    },
    processSpaceCharacters$1(token) {
      var data, t1, lastOpen, _this = this;
      if (_this.dropNewline) {
        data = token.get$data(0);
        t1 = _this.dropNewline = false;
        if (B.JSString_methods.startsWith$1(data, "\n")) {
          lastOpen = B.JSArray_methods.get$last(_this.tree.openElements);
          if (B.JSArray_methods.contains$1(B.List_pre_listing_textarea, lastOpen.localName)) {
            t1 = lastOpen.get$nodes(0);
            t1 = t1.get$isEmpty(t1);
          }
          if (t1)
            data = B.JSString_methods.substring$1(data, 1);
        }
        if (data.length !== 0) {
          t1 = _this.tree;
          t1.reconstructActiveFormattingElements$0();
          t1.insertText$2(data, token.span);
        }
      } else {
        t1 = _this.tree;
        t1.reconstructActiveFormattingElements$0();
        t1.insertText$2(token.get$data(0), token.span);
      }
      return null;
    },
    startTagBody$1(token) {
      var t2, t3,
        t1 = this.parser;
      t1.parseError$3(token.span, "unexpected-start-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", "body"], type$.String, type$.nullable_Object));
      t2 = this.tree.openElements;
      t3 = t2.length;
      if (t3 !== 1) {
        if (1 >= t3)
          return A.ioore(t2, 1);
        t2 = t2[1].localName !== "body";
      } else
        t2 = true;
      if (!t2) {
        t1.framesetOK = false;
        token.data.forEach$1(0, new A.InBodyPhase_startTagBody_closure(this));
      }
    },
    startTagFrameset$1(token) {
      var t2, t3, t4, t5,
        t1 = this.parser;
      t1.parseError$3(token.span, "unexpected-start-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", "frameset"], type$.String, type$.nullable_Object));
      t2 = this.tree;
      t3 = t2.openElements;
      t4 = t3.length;
      if (t4 !== 1) {
        if (1 >= t4)
          return A.ioore(t3, 1);
        t5 = t3[1].localName !== "body";
      } else
        t5 = true;
      if (!t5)
        if (t1.framesetOK) {
          if (1 >= t4)
            return A.ioore(t3, 1);
          t4 = t3[1].parentNode;
          if (t4 != null) {
            t4 = t4.get$nodes(0);
            if (1 >= t3.length)
              return A.ioore(t3, 1);
            B.JSArray_methods.remove$1(t4._list_proxy$_list, t3[1]);
          }
          for (; B.JSArray_methods.get$last(t3).localName !== "html";) {
            if (0 >= t3.length)
              return A.ioore(t3, -1);
            t3.pop();
          }
          t2.insertElement$1(token);
          t1.__HtmlParser_phase_AI = t1.get$_inFramesetPhase();
        }
    },
    startTagCloseP$1(token) {
      var t1 = this.tree;
      if (t1.elementInScope$2$variant("p", "button"))
        this.endTagP$1(new A.EndTagToken("p", false));
      t1.insertElement$1(token);
    },
    startTagListItem$1(token) {
      var t2, t3, t4, t5, t6, t7, t8, value, result, ns,
        t1 = this.parser;
      t1.framesetOK = false;
      t2 = token.name;
      t2.toString;
      t2 = B.Map_G38Gl.$index(0, t2);
      t2.toString;
      for (t3 = this.tree, t4 = t3.openElements, t5 = A._arrayInstanceType(t4)._eval$1("ReversedListIterable<1>"), t4 = new A.ReversedListIterable(t4, t5), t4 = new A.ListIterator(t4, t4.get$length(0), t5._eval$1("ListIterator<ListIterable.E>")), t6 = type$.Pair_of_String_and_nullable_String, t5 = t5._eval$1("ListIterable.E"); t4.moveNext$0();) {
        t7 = t4.__internal$_current;
        if (t7 == null)
          t7 = t5._as(t7);
        t8 = t7.localName;
        if (B.JSArray_methods.contains$1(t2, t8)) {
          value = t1.__HtmlParser_phase_AI;
          if (value === $) {
            value = t1.__HtmlParser__initialPhase_FI;
            if (value === $) {
              result = new A.InitialPhase(t1, t1.tree);
              value !== $ && A.throwLateFieldADI("_initialPhase");
              t1.__HtmlParser__initialPhase_FI = result;
              value = result;
            }
            value = t1.__HtmlParser_phase_AI = value;
          }
          value.processEndTag$1(new A.EndTagToken(t8, false));
          break;
        }
        ns = t7.namespaceUri;
        if (B.JSArray_methods.contains$1(B.List_AeS, new A.Pair(ns == null ? "http://www.w3.org/1999/xhtml" : ns, t8, t6)) && !B.JSArray_methods.contains$1(B.List_address_div_p, t8))
          break;
      }
      if (t3.elementInScope$2$variant("p", "button"))
        t1.get$phase().processEndTag$1(new A.EndTagToken("p", false));
      t3.insertElement$1(token);
    },
    startTagButton$1(token) {
      var t1 = this.tree,
        t2 = this.parser;
      if (t1.elementInScope$1("button")) {
        t2.parseError$3(token.span, "unexpected-start-tag-implies-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["startName", "button", "endName", "button"], type$.String, type$.nullable_Object));
        this.processEndTag$1(new A.EndTagToken("button", false));
        return token;
      } else {
        t1.reconstructActiveFormattingElements$0();
        t1.insertElement$1(token);
        t2.framesetOK = false;
      }
      return null;
    },
    startTagVoidFormatting$1(token) {
      var t1 = this.tree;
      t1.reconstructActiveFormattingElements$0();
      t1.insertElement$1(token);
      t1 = t1.openElements;
      if (0 >= t1.length)
        return A.ioore(t1, -1);
      t1.pop();
      token.selfClosingAcknowledged = true;
      this.parser.framesetOK = false;
    },
    startTagIsIndex$1(token) {
      var t2, formAttrs, dataAction, $prompt, attributes, _this = this, _null = null, _s6_ = "action",
        t1 = type$.String;
      _this.parser.parseError$3(token.span, "deprecated-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", "isindex"], t1, type$.nullable_Object));
      if (_this.tree.formPointer != null)
        return;
      t2 = type$.Object;
      formAttrs = A.LinkedHashMap_LinkedHashMap(t2, t1);
      dataAction = token.data.$index(0, _s6_);
      if (dataAction != null)
        formAttrs.$indexSet(0, _s6_, dataAction);
      _this.processStartTag$1(A.StartTagToken$("form", formAttrs, _null, false));
      _this.processStartTag$1(A.StartTagToken$("hr", A.LinkedHashMap_LinkedHashMap(t2, t1), _null, false));
      _this.processStartTag$1(A.StartTagToken$("label", A.LinkedHashMap_LinkedHashMap(t2, t1), _null, false));
      $prompt = token.data.$index(0, "prompt");
      if ($prompt == null)
        $prompt = "This is a searchable index. Enter search keywords: ";
      _this.processCharacters$1(new A.CharactersToken(_null, $prompt));
      attributes = A.LinkedHashMap_LinkedHashMap$from(token.data, t2, t1);
      attributes.remove$1(0, _s6_);
      attributes.remove$1(0, "prompt");
      attributes.$indexSet(0, "name", "isindex");
      _this.processStartTag$1(A.StartTagToken$("input", attributes, _null, token.selfClosing));
      _this.processEndTag$1(new A.EndTagToken("label", false));
      _this.processStartTag$1(A.StartTagToken$("hr", A.LinkedHashMap_LinkedHashMap(t2, t1), _null, false));
      _this.processEndTag$1(new A.EndTagToken("form", false));
    },
    endTagP$1(token) {
      var _this = this,
        _s18_ = "unexpected-end-tag",
        t1 = _this.tree;
      if (!t1.elementInScope$2$variant("p", "button")) {
        t1 = type$.String;
        _this.startTagCloseP$1(A.StartTagToken$("p", A.LinkedHashMap_LinkedHashMap(type$.Object, t1), null, false));
        _this.parser.parseError$3(token.span, _s18_, A.LinkedHashMap_LinkedHashMap$_literal(["name", "p"], t1, type$.nullable_Object));
        _this.endTagP$1(new A.EndTagToken("p", false));
      } else {
        t1.generateImpliedEndTags$1("p");
        if (B.JSArray_methods.get$last(t1.openElements).localName !== "p")
          _this.parser.parseError$3(token.span, _s18_, A.LinkedHashMap_LinkedHashMap$_literal(["name", "p"], type$.String, type$.nullable_Object));
        _this.popOpenElementsUntil$1(token);
      }
    },
    endTagBody$1(token) {
      var t2, _i, t3, span, t4, value, _this = this,
        t1 = _this.tree;
      if (!t1.elementInScope$1("body")) {
        _this.parser.parseError$2(token.span, "undefined-error");
        return;
      } else {
        t1 = t1.openElements;
        if (B.JSArray_methods.get$last(t1).localName === "body")
          B.JSArray_methods.get$last(t1);
        else
          $label0$1:
            for (t1 = A.slice(t1, 2, null, type$.Element_2), t2 = t1.length, _i = 0; _i < t2; ++_i) {
              t3 = t1[_i].localName;
              switch (t3) {
                case "dd":
                case "dt":
                case "li":
                case "optgroup":
                case "option":
                case "p":
                case "rp":
                case "rt":
                case "tbody":
                case "td":
                case "tfoot":
                case "th":
                case "thead":
                case "tr":
                case "body":
                case "html":
                  continue $label0$1;
              }
              t1 = _this.parser;
              span = token.span;
              t3 = type$.nullable_Map_of_String_and_nullable_Object._as(A.LinkedHashMap_LinkedHashMap$_literal(["gotName", "body", "expectedName", t3], type$.String, type$.nullable_Object));
              if (span == null) {
                t2 = t1.tokenizer.stream;
                t4 = t2.fileInfo;
                if (t4 == null)
                  span = null;
                else {
                  t2 = t2._html_input_stream$_offset;
                  new A.FileLocation(t4, t2).FileLocation$_$2(t4, t2);
                  span = new A._FileSpan(t4, t2, t2);
                  span._FileSpan$3(t4, t2, t2);
                }
              }
              B.JSArray_methods.add$1(t1.errors, new A.ParseError("expected-one-end-tag-but-got-another", span, t3));
              break $label0$1;
            }
      }
      t1 = _this.parser;
      value = t1.__HtmlParser__afterBodyPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_afterBodyPhase");
        value = t1.__HtmlParser__afterBodyPhase_FI = new A.AfterBodyPhase(t1, t1.tree);
      }
      t1.__HtmlParser_phase_AI = value;
    },
    endTagHtml$1(token) {
      if (this.tree.elementInScope$1("body")) {
        this.endTagBody$1(new A.EndTagToken("body", false));
        return token;
      }
      return null;
    },
    endTagHeading$1(token) {
      var t1, _i, t2, $name, t3, t4, node;
      for (t1 = this.tree, _i = 0; _i < 6; ++_i)
        if (t1.elementInScope$1(B.List_adS[_i])) {
          t2 = t1.openElements;
          $name = B.JSArray_methods.get$last(t2).localName;
          if ($name != null && B.JSArray_methods.contains$1(B.List_qBb, $name)) {
            if (0 >= t2.length)
              return A.ioore(t2, -1);
            t2.pop();
            t1.generateImpliedEndTags$1(null);
          }
          break;
        }
      t2 = t1.openElements;
      t3 = B.JSArray_methods.get$last(t2).localName;
      t4 = token.name;
      if (t3 != t4)
        this.parser.parseError$3(token.span, "end-tag-too-early", A.LinkedHashMap_LinkedHashMap$_literal(["name", t4], type$.String, type$.nullable_Object));
      for (_i = 0; _i < 6; ++_i)
        if (t1.elementInScope$1(B.List_adS[_i])) {
          if (0 >= t2.length)
            return A.ioore(t2, -1);
          node = t2.pop();
          for (; !B.JSArray_methods.contains$1(B.List_adS, node.localName);) {
            if (0 >= t2.length)
              return A.ioore(t2, -1);
            node = t2.pop();
          }
          break;
        }
    },
    endTagFormatting$1(token) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, outerLoopCounter, formattingElement, t15, span, t16, t17, afeIndex, furthestBlock, _i, element, ns, commonAncestor, bookmark, index, lastNode, innerLoopCounter, node, result, lastNode0, value, value0, nodePos, _null = null, _s5_ = "nodes";
      for (t1 = this.tree, t2 = t1.activeFormattingElements, t3 = t2._list_proxy$_list, t4 = A._instanceType(t2)._eval$1("ListProxy.E"), t5 = t1.openElements, t6 = type$.Object, t7 = type$.String, t8 = type$.Element_2, t9 = type$.JSArray_Node, t10 = type$.Pair_of_String_and_nullable_String, t11 = this.parser, t12 = type$.nullable_Object, t13 = type$.nullable_Map_of_String_and_nullable_Object, t14 = t11.tokenizer.stream, t11 = t11.errors, outerLoopCounter = 0; outerLoopCounter < 8;) {
        ++outerLoopCounter;
        formattingElement = t1.elementInActiveFormattingElements$1(token.name);
        if (formattingElement != null)
          t15 = B.JSArray_methods.contains$1(t5, formattingElement) && !t1.elementInScope$1(formattingElement.localName);
        else
          t15 = true;
        if (t15) {
          span = token.span;
          t1 = t13._as(A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], t7, t12));
          if (span == null) {
            t2 = t14.fileInfo;
            if (t2 == null)
              span = _null;
            else {
              t3 = t14._html_input_stream$_offset;
              new A.FileLocation(t2, t3).FileLocation$_$2(t2, t3);
              span = new A._FileSpan(t2, t3, t3);
              span._FileSpan$3(t2, t3, t3);
            }
          }
          B.JSArray_methods.add$1(t11, new A.ParseError("adoption-agency-1.1", span, t1));
          return;
        } else if (!B.JSArray_methods.contains$1(t5, formattingElement)) {
          span = token.span;
          t1 = t13._as(A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], t7, t12));
          if (span == null) {
            t2 = t14.fileInfo;
            if (t2 == null)
              span = _null;
            else {
              t4 = t14._html_input_stream$_offset;
              new A.FileLocation(t2, t4).FileLocation$_$2(t2, t4);
              span = new A._FileSpan(t2, t4, t4);
              span._FileSpan$3(t2, t4, t4);
            }
          }
          B.JSArray_methods.add$1(t11, new A.ParseError("adoption-agency-1.2", span, t1));
          B.JSArray_methods.remove$1(t3, formattingElement);
          return;
        }
        t15 = B.JSArray_methods.get$last(t5);
        if (formattingElement == null ? t15 != null : formattingElement !== t15) {
          span = token.span;
          t15 = t13._as(A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], t7, t12));
          if (span == null) {
            t16 = t14.fileInfo;
            if (t16 == null)
              span = _null;
            else {
              t17 = t14._html_input_stream$_offset;
              new A.FileLocation(t16, t17).FileLocation$_$2(t16, t17);
              span = new A._FileSpan(t16, t17, t17);
              span._FileSpan$3(t16, t17, t17);
            }
          }
          B.JSArray_methods.add$1(t11, new A.ParseError("adoption-agency-1.3", span, t15));
        }
        afeIndex = B.JSArray_methods.indexOf$1(t5, formattingElement);
        t15 = A.slice(t5, afeIndex, _null, t8);
        t16 = t15.length;
        _i = 0;
        while (true) {
          if (!(_i < t15.length)) {
            furthestBlock = _null;
            break;
          }
          element = t15[_i];
          ns = element.namespaceUri;
          if (ns == null)
            ns = "http://www.w3.org/1999/xhtml";
          if (B.JSArray_methods.contains$1(B.List_AeS, new A.Pair(ns, element.localName, t10))) {
            furthestBlock = element;
            break;
          }
          t15.length === t16 || (0, A.throwConcurrentModificationError)(t15);
          ++_i;
        }
        if (furthestBlock == null) {
          if (0 >= t5.length)
            return A.ioore(t5, -1);
          element = t5.pop();
          for (; element !== formattingElement;) {
            if (0 >= t5.length)
              return A.ioore(t5, -1);
            element = t5.pop();
          }
          B.JSArray_methods.remove$1(t3, element);
          return;
        }
        t15 = afeIndex - 1;
        if (!(t15 >= 0 && t15 < t5.length))
          return A.ioore(t5, t15);
        commonAncestor = t5[t15];
        bookmark = t2.indexOf$1(t2, formattingElement);
        index = B.JSArray_methods.indexOf$1(t5, furthestBlock);
        for (lastNode = furthestBlock, innerLoopCounter = 0; innerLoopCounter < 3;) {
          ++innerLoopCounter;
          --index;
          if (!(index >= 0 && index < t5.length))
            return A.ioore(t5, index);
          node = t5[index];
          if (!t2.contains$1(t2, node)) {
            B.JSArray_methods.remove$1(t5, node);
            continue;
          }
          if (node === formattingElement)
            break;
          if (lastNode === furthestBlock)
            bookmark = t2.indexOf$1(t2, node) + 1;
          t15 = node.localName;
          result = new A.Element0(node.namespaceUri, t15, A.LinkedHashMap_LinkedHashMap(t6, t7));
          result.set$attributes(0, A.LinkedHashMap_LinkedHashMap$from(node.attributes, t6, t7));
          lastNode0 = node._clone$1$2(result, false, t8);
          B.JSArray_methods.$indexSet(t3, t2.indexOf$1(t2, node), t4._as(lastNode0));
          B.JSArray_methods.$indexSet(t5, B.JSArray_methods.indexOf$1(t5, node), lastNode0);
          t15 = lastNode.parentNode;
          if (t15 != null) {
            value = t15.__Node_nodes_FI;
            if (value === $) {
              t16 = A._setArrayType([], t9);
              t15.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
              value = t15.__Node_nodes_FI = new A.NodeList(t15, t16);
            }
            B.JSArray_methods.remove$1(value._list_proxy$_list, lastNode);
          }
          value = lastNode0.__Node_nodes_FI;
          if (value === $) {
            t15 = A._setArrayType([], t9);
            lastNode0.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
            value = lastNode0.__Node_nodes_FI = new A.NodeList(lastNode0, t15);
          }
          t15 = lastNode.parentNode;
          if (t15 != null) {
            value0 = t15.__Node_nodes_FI;
            if (value0 === $) {
              t16 = A._setArrayType([], t9);
              t15.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
              value0 = t15.__Node_nodes_FI = new A.NodeList(t15, t16);
            }
            B.JSArray_methods.remove$1(value0._list_proxy$_list, lastNode);
          }
          lastNode.parentNode = value._dom$_parent;
          value.super$ListProxy$add(0, lastNode);
          lastNode = lastNode0;
        }
        t15 = lastNode.parentNode;
        if (t15 != null) {
          value = t15.__Node_nodes_FI;
          if (value === $) {
            t16 = A._setArrayType([], t9);
            t15.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
            value = t15.__Node_nodes_FI = new A.NodeList(t15, t16);
          }
          B.JSArray_methods.remove$1(value._list_proxy$_list, lastNode);
        }
        if (B.JSArray_methods.contains$1(B.List_kYS, commonAncestor.localName)) {
          nodePos = t1.getTableMisnestedNodePosition$0();
          t15 = nodePos[0];
          t16 = nodePos[1];
          value = t15.__Node_nodes_FI;
          if (t16 == null) {
            if (value === $) {
              t16 = A._setArrayType([], t9);
              t15.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
              value = t15.__Node_nodes_FI = new A.NodeList(t15, t16);
            }
            t15 = lastNode.parentNode;
            if (t15 != null) {
              value0 = t15.__Node_nodes_FI;
              if (value0 === $) {
                t16 = A._setArrayType([], t9);
                t15.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
                value0 = t15.__Node_nodes_FI = new A.NodeList(t15, t16);
              }
              B.JSArray_methods.remove$1(value0._list_proxy$_list, lastNode);
            }
            lastNode.parentNode = value._dom$_parent;
            value.super$ListProxy$add(0, lastNode);
          } else {
            if (value === $) {
              t17 = A._setArrayType([], t9);
              t15.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
              result = t15.__Node_nodes_FI = new A.NodeList(t15, t17);
              value0 = result;
              value = value0;
            } else
              value0 = value;
            if (value0 === $) {
              t17 = A._setArrayType([], t9);
              t15.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
              value0 = t15.__Node_nodes_FI = new A.NodeList(t15, t17);
            }
            t15 = value0.indexOf$1(value0, t16);
            t16 = lastNode.parentNode;
            if (t16 != null) {
              value0 = t16.__Node_nodes_FI;
              if (value0 === $) {
                t17 = A._setArrayType([], t9);
                t16.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
                value0 = t16.__Node_nodes_FI = new A.NodeList(t16, t17);
              }
              B.JSArray_methods.remove$1(value0._list_proxy$_list, lastNode);
            }
            lastNode.parentNode = value._dom$_parent;
            value.super$ListProxy$insert(0, t15, lastNode);
          }
        } else {
          value = commonAncestor.__Node_nodes_FI;
          if (value === $) {
            t15 = A._setArrayType([], t9);
            commonAncestor.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
            value = commonAncestor.__Node_nodes_FI = new A.NodeList(commonAncestor, t15);
          }
          t15 = lastNode.parentNode;
          if (t15 != null) {
            value0 = t15.__Node_nodes_FI;
            if (value0 === $) {
              t16 = A._setArrayType([], t9);
              t15.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
              value0 = t15.__Node_nodes_FI = new A.NodeList(t15, t16);
            }
            B.JSArray_methods.remove$1(value0._list_proxy$_list, lastNode);
          }
          lastNode.parentNode = value._dom$_parent;
          value.super$ListProxy$add(0, lastNode);
        }
        t15 = formattingElement.localName;
        result = new A.Element0(formattingElement.namespaceUri, t15, A.LinkedHashMap_LinkedHashMap(t6, t7));
        result.set$attributes(0, A.LinkedHashMap_LinkedHashMap$from(formattingElement.attributes, t6, t7));
        t15 = formattingElement._clone$1$2(result, false, t8);
        value = t15.__Node_nodes_FI;
        if (value === $) {
          t16 = A._setArrayType([], t9);
          t15.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
          value = t15.__Node_nodes_FI = new A.NodeList(t15, t16);
        }
        value0 = furthestBlock.__Node_nodes_FI;
        if (value0 === $) {
          t16 = A._setArrayType([], t9);
          furthestBlock.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
          value0 = furthestBlock.__Node_nodes_FI = new A.NodeList(furthestBlock, t16);
        }
        value.addAll$1(0, value0);
        value = furthestBlock.__Node_nodes_FI;
        if (value === $) {
          t16 = A._setArrayType([], t9);
          furthestBlock.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
          value = furthestBlock.__Node_nodes_FI = new A.NodeList(furthestBlock, t16);
        }
        value.clear$0(0);
        value = furthestBlock.__Node_nodes_FI;
        if (value === $) {
          t16 = A._setArrayType([], t9);
          furthestBlock.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
          value = furthestBlock.__Node_nodes_FI = new A.NodeList(furthestBlock, t16);
        }
        t16 = t15.parentNode;
        if (t16 != null) {
          value0 = t16.__Node_nodes_FI;
          if (value0 === $) {
            t17 = A._setArrayType([], t9);
            t16.__Node_nodes_FI !== $ && A.throwLateFieldADI(_s5_);
            value0 = t16.__Node_nodes_FI = new A.NodeList(t16, t17);
          }
          B.JSArray_methods.remove$1(value0._list_proxy$_list, t15);
        }
        t15.parentNode = value._dom$_parent;
        value.super$ListProxy$add(0, t15);
        B.JSArray_methods.remove$1(t3, formattingElement);
        B.JSArray_methods.insert$2(t3, A._asInt(Math.min(bookmark, t3.length)), t4._as(t15));
        B.JSArray_methods.remove$1(t5, formattingElement);
        B.JSArray_methods.insert$2(t5, B.JSArray_methods.indexOf$1(t5, furthestBlock) + 1, t15);
      }
    },
    endTagOther$1(token) {
      var t1, t2, t3, t4, t5, t6, t7, t8, $name, span, ns,
        _s18_ = "unexpected-end-tag";
      for (t1 = this.tree, t2 = t1.openElements, t3 = A._arrayInstanceType(t2)._eval$1("ReversedListIterable<1>"), t4 = new A.ReversedListIterable(t2, t3), t4 = new A.ListIterator(t4, t4.get$length(0), t3._eval$1("ListIterator<ListIterable.E>")), t5 = type$.Pair_of_String_and_nullable_String, t3 = t3._eval$1("ListIterable.E"); t4.moveNext$0();) {
        t6 = t4.__internal$_current;
        if (t6 == null)
          t6 = t3._as(t6);
        t7 = t6.localName;
        t8 = token.name;
        if (t7 == t8) {
          $name = B.JSArray_methods.get$last(t2).localName;
          if ($name != t8 && B.JSArray_methods.contains$1(B.List_qBb, $name)) {
            if (0 >= t2.length)
              return A.ioore(t2, -1);
            t2.pop();
            t1.generateImpliedEndTags$1(t8);
          }
          t1 = B.JSArray_methods.get$last(t2).localName;
          t3 = token.name;
          if (t1 != t3) {
            t1 = this.parser;
            span = token.span;
            t3 = type$.nullable_Map_of_String_and_nullable_Object._as(A.LinkedHashMap_LinkedHashMap$_literal(["name", t3], type$.String, type$.nullable_Object));
            if (span == null) {
              t4 = t1.tokenizer.stream;
              t5 = t4.fileInfo;
              if (t5 == null)
                span = null;
              else {
                t4 = t4._html_input_stream$_offset;
                new A.FileLocation(t5, t4).FileLocation$_$2(t5, t4);
                span = new A._FileSpan(t5, t4, t4);
                span._FileSpan$3(t5, t4, t4);
              }
            }
            B.JSArray_methods.add$1(t1.errors, new A.ParseError(_s18_, span, t3));
          }
          while (true) {
            if (0 >= t2.length)
              return A.ioore(t2, -1);
            if (!!J.$eq$(t2.pop(), t6))
              break;
          }
          break;
        } else {
          ns = t6.namespaceUri;
          if (B.JSArray_methods.contains$1(B.List_AeS, new A.Pair(ns == null ? "http://www.w3.org/1999/xhtml" : ns, t7, t5))) {
            t1 = this.parser;
            span = token.span;
            t2 = type$.nullable_Map_of_String_and_nullable_Object._as(A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
            if (span == null) {
              t3 = t1.tokenizer.stream;
              t4 = t3.fileInfo;
              if (t4 == null)
                span = null;
              else {
                t3 = t3._html_input_stream$_offset;
                new A.FileLocation(t4, t3).FileLocation$_$2(t4, t3);
                span = new A._FileSpan(t4, t3, t3);
                span._FileSpan$3(t4, t3, t3);
              }
            }
            B.JSArray_methods.add$1(t1.errors, new A.ParseError(_s18_, span, t2));
            break;
          }
        }
      }
    }
  };
  A.InBodyPhase_startTagBody_closure.prototype = {
    call$2(attr, value) {
      var t1;
      type$.Object._as(attr);
      A._asString(value);
      t1 = this.$this.tree.openElements;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t1[1].attributes.putIfAbsent$2(attr, new A.InBodyPhase_startTagBody__closure(value));
    },
    $signature: 21
  };
  A.InBodyPhase_startTagBody__closure.prototype = {
    call$0() {
      return this.value;
    },
    $signature: 13
  };
  A.TextPhase.prototype = {
    processStartTag$1(token) {
      throw A.wrapException(A.StateError$("Cannot process start stag in text phase"));
    },
    processEndTag$1(token) {
      var t1, t2, _this = this;
      if (token.name === "script") {
        t1 = _this.tree.openElements;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        t1 = _this.parser;
        t2 = t1.originalPhase;
        t2.toString;
        t1.__HtmlParser_phase_AI = t2;
        return null;
      }
      t1 = _this.tree.openElements;
      if (0 >= t1.length)
        return A.ioore(t1, -1);
      t1.pop();
      t1 = _this.parser;
      t2 = t1.originalPhase;
      t2.toString;
      t1.__HtmlParser_phase_AI = t2;
      return null;
    },
    processCharacters$1(token) {
      this.tree.insertText$2(token.get$data(0), token.span);
      return null;
    },
    processEOF$0() {
      var t1 = this.tree.openElements,
        last = B.JSArray_methods.get$last(t1),
        t2 = this.parser;
      t2.parseError$3(last.sourceSpan, "expected-named-closing-tag-but-got-eof", A.LinkedHashMap_LinkedHashMap$_literal(["name", last.localName], type$.String, type$.nullable_Object));
      if (0 >= t1.length)
        return A.ioore(t1, -1);
      t1.pop();
      t1 = t2.originalPhase;
      t1.toString;
      t2.__HtmlParser_phase_AI = t1;
      return true;
    }
  };
  A.InTablePhase.prototype = {
    processStartTag$1(token) {
      var t1, t2, _this = this, _null = null;
      switch (token.name) {
        case "html":
          return _this.startTagHtml$1(token);
        case "caption":
          _this.clearStackToTableContext$0();
          t1 = _this.tree;
          t1.activeFormattingElements.add$1(0, _null);
          t1.insertElement$1(token);
          t1 = _this.parser;
          t1.__HtmlParser_phase_AI = t1.get$_inCaptionPhase();
          return _null;
        case "colgroup":
          _this.startTagColgroup$1(token);
          return _null;
        case "col":
          _this.startTagColgroup$1(A.StartTagToken$("colgroup", A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String), _null, false));
          return token;
        case "tbody":
        case "tfoot":
        case "thead":
          _this.startTagRowGroup$1(token);
          return _null;
        case "td":
        case "th":
        case "tr":
          _this.startTagRowGroup$1(A.StartTagToken$("tbody", A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String), _null, false));
          return token;
        case "table":
          return _this.startTagTable$1(token);
        case "style":
        case "script":
          return _this.parser.get$_inHeadPhase().processStartTag$1(token);
        case "input":
          t1 = token.data.$index(0, "type");
          if (t1 == null)
            t1 = _null;
          else {
            t2 = type$.CodeUnits;
            t2 = A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t1), t2._eval$1("int(ListBase.E)")._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t2._eval$1("MappedListIterable<ListBase.E,int>")), 0, _null);
            t1 = t2;
          }
          if (t1 === "hidden") {
            _this.parser.parseError$2(token.span, "unexpected-hidden-input-in-table");
            t1 = _this.tree;
            t1.insertElement$1(token);
            t1 = t1.openElements;
            if (0 >= t1.length)
              return A.ioore(t1, -1);
            t1.pop();
          } else
            _this.startTagOther$1(token);
          return _null;
        case "form":
          _this.parser.parseError$2(token.span, "unexpected-form-in-table");
          t1 = _this.tree;
          if (t1.formPointer == null) {
            t1.insertElement$1(token);
            t2 = t1.openElements;
            t1.set$formPointer(B.JSArray_methods.get$last(t2));
            if (0 >= t2.length)
              return A.ioore(t2, -1);
            t2.pop();
          }
          return _null;
        default:
          _this.startTagOther$1(token);
          return _null;
      }
    },
    processEndTag$1(token) {
      var t2, _this = this,
        t1 = token.name;
      switch (t1) {
        case "table":
          _this.endTagTable$1(token);
          return null;
        case "body":
        case "caption":
        case "col":
        case "colgroup":
        case "html":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
          _this.parser.parseError$3(token.span, "unexpected-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
        default:
          t2 = _this.parser;
          t2.parseError$3(token.span, "unexpected-end-tag-implies-table-voodoo", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          t1 = _this.tree;
          t1.insertFromTable = true;
          t2.get$_inBodyPhase().processEndTag$1(token);
          t1.insertFromTable = false;
          return null;
      }
    },
    clearStackToTableContext$0() {
      var t1 = this.tree.openElements;
      while (true) {
        if (!(B.JSArray_methods.get$last(t1).localName !== "table" && B.JSArray_methods.get$last(t1).localName !== "html"))
          break;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      }
    },
    processEOF$0() {
      var last = B.JSArray_methods.get$last(this.tree.openElements);
      if (last.localName !== "html")
        this.parser.parseError$2(last.sourceSpan, "eof-in-table");
      return false;
    },
    processSpaceCharacters$1(token) {
      var t1 = this.parser,
        originalPhase = t1.get$phase();
      t1.__HtmlParser_phase_AI = t1.get$_inTableTextPhase();
      t1.get$_inTableTextPhase().originalPhase = originalPhase;
      t1.get$phase().processSpaceCharacters$1(token);
      return null;
    },
    processCharacters$1(token) {
      var t1 = this.parser,
        originalPhase = t1.get$phase();
      t1.__HtmlParser_phase_AI = t1.get$_inTableTextPhase();
      t1.get$_inTableTextPhase().originalPhase = originalPhase;
      t1.get$phase().processCharacters$1(token);
      return null;
    },
    startTagColgroup$1(token) {
      var t1;
      this.clearStackToTableContext$0();
      this.tree.insertElement$1(token);
      t1 = this.parser;
      t1.__HtmlParser_phase_AI = t1.get$_inColumnGroupPhase();
    },
    startTagRowGroup$1(token) {
      var t1;
      this.clearStackToTableContext$0();
      this.tree.insertElement$1(token);
      t1 = this.parser;
      t1.__HtmlParser_phase_AI = t1.get$_inTableBodyPhase();
    },
    startTagTable$1(token) {
      var t1 = this.parser;
      t1.parseError$3(token.span, "unexpected-start-tag-implies-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["startName", "table", "endName", "table"], type$.String, type$.nullable_Object));
      t1.get$phase().processEndTag$1(new A.EndTagToken("table", false));
      return token;
    },
    startTagOther$1(token) {
      var t2,
        t1 = this.parser;
      t1.parseError$3(token.span, string$.unexpes, A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
      t2 = this.tree;
      t2.insertFromTable = true;
      t1.get$_inBodyPhase().processStartTag$1(token);
      t2.insertFromTable = false;
    },
    endTagTable$1(token) {
      var t2, _this = this,
        t1 = _this.tree;
      if (t1.elementInScope$2$variant("table", "table")) {
        t1.generateImpliedEndTags$0();
        t1 = t1.openElements;
        t2 = B.JSArray_methods.get$last(t1).localName;
        if (t2 !== "table")
          _this.parser.parseError$3(token.span, "end-tag-too-early-named", A.LinkedHashMap_LinkedHashMap$_literal(["gotName", "table", "expectedName", t2], type$.String, type$.nullable_Object));
        for (; B.JSArray_methods.get$last(t1).localName !== "table";) {
          if (0 >= t1.length)
            return A.ioore(t1, -1);
          t1.pop();
        }
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        _this.parser.resetInsertionMode$0();
      } else
        _this.parser.parseError$2(token.span, "undefined-error");
    }
  };
  A.InTableTextPhase.prototype = {
    flushCharacters$0() {
      var t2, data, _this = this,
        t1 = _this.characterTokens;
      if (t1.length === 0)
        return;
      t2 = A._arrayInstanceType(t1);
      data = new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.InTableTextPhase_flushCharacters_closure()), t2._eval$1("MappedListIterable<1,String>")).join$1(0, "");
      if (!A.allWhitespace(data)) {
        t1 = _this.parser.get$_inTablePhase();
        t2 = t1.tree;
        t2.insertFromTable = true;
        t1.parser.get$_inBodyPhase().processCharacters$1(new A.CharactersToken(null, data));
        t2.insertFromTable = false;
      } else if (data.length !== 0)
        _this.tree.insertText$2(data, null);
      _this.set$characterTokens(A._setArrayType([], type$.JSArray_StringToken));
    },
    processComment$1(token) {
      var t1;
      this.flushCharacters$0();
      t1 = this.originalPhase;
      t1.toString;
      this.parser.__HtmlParser_phase_AI = t1;
      return token;
    },
    processEOF$0() {
      this.flushCharacters$0();
      var t1 = this.originalPhase;
      t1.toString;
      this.parser.__HtmlParser_phase_AI = t1;
      return true;
    },
    processCharacters$1(token) {
      if (token.get$data(0) === "\x00")
        return null;
      B.JSArray_methods.add$1(this.characterTokens, token);
      return null;
    },
    processSpaceCharacters$1(token) {
      B.JSArray_methods.add$1(this.characterTokens, token);
      return null;
    },
    processStartTag$1(token) {
      var t1;
      this.flushCharacters$0();
      t1 = this.originalPhase;
      t1.toString;
      this.parser.__HtmlParser_phase_AI = t1;
      return token;
    },
    processEndTag$1(token) {
      var t1;
      this.flushCharacters$0();
      t1 = this.originalPhase;
      t1.toString;
      this.parser.__HtmlParser_phase_AI = t1;
      return token;
    },
    set$characterTokens(characterTokens) {
      this.characterTokens = type$.List_StringToken._as(characterTokens);
    }
  };
  A.InTableTextPhase_flushCharacters_closure.prototype = {
    call$1(t) {
      return type$.StringToken._as(t).get$data(0);
    },
    $signature: 75
  };
  A.InCaptionPhase.prototype = {
    processStartTag$1(token) {
      switch (token.name) {
        case "html":
          return this.startTagHtml$1(token);
        case "caption":
        case "col":
        case "colgroup":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
          return this.startTagTableElement$1(token);
        default:
          return this.parser.get$_inBodyPhase().processStartTag$1(token);
      }
    },
    processEndTag$1(token) {
      var _this = this,
        t1 = token.name;
      switch (t1) {
        case "caption":
          _this.endTagCaption$1(token);
          return null;
        case "table":
          return _this.endTagTable$1(token);
        case "body":
        case "col":
        case "colgroup":
        case "html":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
          _this.parser.parseError$3(token.span, "unexpected-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
        default:
          return _this.parser.get$_inBodyPhase().processEndTag$1(token);
      }
    },
    processEOF$0() {
      this.parser.get$_inBodyPhase().processEOF$0();
      return false;
    },
    processCharacters$1(token) {
      return this.parser.get$_inBodyPhase().processCharacters$1(token);
    },
    startTagTableElement$1(token) {
      var t2,
        t1 = this.parser;
      t1.parseError$2(token.span, "undefined-error");
      t2 = this.tree.elementInScope$2$variant("caption", "table");
      t1.get$phase().processEndTag$1(new A.EndTagToken("caption", false));
      if (t2)
        return token;
      return null;
    },
    endTagCaption$1(token) {
      var t2, _this = this,
        t1 = _this.tree;
      if (t1.elementInScope$2$variant("caption", "table")) {
        t1.generateImpliedEndTags$0();
        t2 = t1.openElements;
        if (B.JSArray_methods.get$last(t2).localName !== "caption")
          _this.parser.parseError$3(token.span, "expected-one-end-tag-but-got-another", A.LinkedHashMap_LinkedHashMap$_literal(["gotName", "caption", "expectedName", B.JSArray_methods.get$last(t2).localName], type$.String, type$.nullable_Object));
        for (; B.JSArray_methods.get$last(t2).localName !== "caption";) {
          if (0 >= t2.length)
            return A.ioore(t2, -1);
          t2.pop();
        }
        if (0 >= t2.length)
          return A.ioore(t2, -1);
        t2.pop();
        t1.clearActiveFormattingElements$0();
        t1 = _this.parser;
        t1.__HtmlParser_phase_AI = t1.get$_inTablePhase();
      } else
        _this.parser.parseError$2(token.span, "undefined-error");
    },
    endTagTable$1(token) {
      var t2,
        t1 = this.parser;
      t1.parseError$2(token.span, "undefined-error");
      t2 = this.tree.elementInScope$2$variant("caption", "table");
      t1.get$phase().processEndTag$1(new A.EndTagToken("caption", false));
      if (t2)
        return token;
      return null;
    }
  };
  A.InColumnGroupPhase.prototype = {
    processStartTag$1(token) {
      var t1, _this = this;
      switch (token.name) {
        case "html":
          return _this.startTagHtml$1(token);
        case "col":
          t1 = _this.tree;
          t1.insertElement$1(token);
          t1 = t1.openElements;
          if (0 >= t1.length)
            return A.ioore(t1, -1);
          t1.pop();
          return null;
        default:
          t1 = B.JSArray_methods.get$last(_this.tree.openElements).localName;
          _this.endTagColgroup$1(new A.EndTagToken("colgroup", false));
          return t1 === "html" ? null : token;
      }
    },
    processEndTag$1(token) {
      var t1, _this = this;
      switch (token.name) {
        case "colgroup":
          _this.endTagColgroup$1(token);
          return null;
        case "col":
          _this.parser.parseError$3(token.span, "no-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", "col"], type$.String, type$.nullable_Object));
          return null;
        default:
          t1 = B.JSArray_methods.get$last(_this.tree.openElements).localName;
          _this.endTagColgroup$1(new A.EndTagToken("colgroup", false));
          return t1 === "html" ? null : token;
      }
    },
    processEOF$0() {
      if (B.JSArray_methods.get$last(this.tree.openElements).localName === "html")
        return false;
      else {
        this.endTagColgroup$1(new A.EndTagToken("colgroup", false));
        return true;
      }
    },
    processCharacters$1(token) {
      var t1 = B.JSArray_methods.get$last(this.tree.openElements).localName;
      this.endTagColgroup$1(new A.EndTagToken("colgroup", false));
      return t1 === "html" ? null : token;
    },
    endTagColgroup$1(token) {
      var t1 = this.tree.openElements,
        t2 = this.parser;
      if (B.JSArray_methods.get$last(t1).localName === "html")
        t2.parseError$2(token.span, "undefined-error");
      else {
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        t2.__HtmlParser_phase_AI = t2.get$_inTablePhase();
      }
    }
  };
  A.InTableBodyPhase.prototype = {
    processStartTag$1(token) {
      var t2, _this = this,
        t1 = token.name;
      switch (t1) {
        case "html":
          return _this.startTagHtml$1(token);
        case "tr":
          _this.startTagTr$1(token);
          return null;
        case "td":
        case "th":
          t2 = type$.String;
          _this.parser.parseError$3(token.span, "unexpected-cell-in-table-body", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], t2, type$.nullable_Object));
          _this.startTagTr$1(A.StartTagToken$("tr", A.LinkedHashMap_LinkedHashMap(type$.Object, t2), null, false));
          return token;
        case "caption":
        case "col":
        case "colgroup":
        case "tbody":
        case "tfoot":
        case "thead":
          return _this.endTagTable$1(token);
        default:
          return _this.parser.get$_inTablePhase().processStartTag$1(token);
      }
    },
    processEndTag$1(token) {
      var _this = this,
        t1 = token.name;
      switch (t1) {
        case "tbody":
        case "tfoot":
        case "thead":
          _this.endTagTableRowGroup$1(token);
          return null;
        case "table":
          return _this.endTagTable$1(token);
        case "body":
        case "caption":
        case "col":
        case "colgroup":
        case "html":
        case "td":
        case "th":
        case "tr":
          _this.parser.parseError$3(token.span, "unexpected-end-tag-in-table-body", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
        default:
          return _this.parser.get$_inTablePhase().processEndTag$1(token);
      }
    },
    clearStackToTableBodyContext$0() {
      for (var t1 = this.tree.openElements; !B.JSArray_methods.contains$1(B.List_tbody_tfoot_thead_html, B.JSArray_methods.get$last(t1).localName);) {
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      }
      B.JSArray_methods.get$last(t1).toString;
    },
    processEOF$0() {
      this.parser.get$_inTablePhase().processEOF$0();
      return false;
    },
    processSpaceCharacters$1(token) {
      return this.parser.get$_inTablePhase().processSpaceCharacters$1(token);
    },
    processCharacters$1(token) {
      return this.parser.get$_inTablePhase().processCharacters$1(token);
    },
    startTagTr$1(token) {
      var t1;
      this.clearStackToTableBodyContext$0();
      this.tree.insertElement$1(token);
      t1 = this.parser;
      t1.__HtmlParser_phase_AI = t1.get$_inRowPhase();
    },
    endTagTableRowGroup$1(token) {
      var t1 = this.tree,
        t2 = this.parser;
      if (t1.elementInScope$2$variant(token.name, "table")) {
        this.clearStackToTableBodyContext$0();
        t1 = t1.openElements;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        t2.__HtmlParser_phase_AI = t2.get$_inTablePhase();
      } else
        t2.parseError$3(token.span, "unexpected-end-tag-in-table-body", A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
    },
    endTagTable$1(token) {
      var _this = this, _s5_ = "table",
        t1 = _this.tree;
      if (t1.elementInScope$2$variant("tbody", _s5_) || t1.elementInScope$2$variant("thead", _s5_) || t1.elementInScope$2$variant("tfoot", _s5_)) {
        _this.clearStackToTableBodyContext$0();
        _this.endTagTableRowGroup$1(new A.EndTagToken(B.JSArray_methods.get$last(t1.openElements).localName, false));
        return token;
      } else
        _this.parser.parseError$2(token.span, "undefined-error");
      return null;
    }
  };
  A.InRowPhase.prototype = {
    processStartTag$1(token) {
      var t1, t2, _this = this;
      switch (token.name) {
        case "html":
          return _this.startTagHtml$1(token);
        case "td":
        case "th":
          _this.clearStackToTableRowContext$0();
          t1 = _this.tree;
          t1.insertElement$1(token);
          t2 = _this.parser;
          t2.__HtmlParser_phase_AI = t2.get$_inCellPhase();
          t1.activeFormattingElements.add$1(0, null);
          return null;
        case "caption":
        case "col":
        case "colgroup":
        case "tbody":
        case "tfoot":
        case "thead":
        case "tr":
          t1 = _this.tree.elementInScope$2$variant("tr", "table");
          _this.endTagTr$1(new A.EndTagToken("tr", false));
          return !t1 ? null : token;
        default:
          return _this.parser.get$_inTablePhase().processStartTag$1(token);
      }
    },
    processEndTag$1(token) {
      var _this = this,
        t1 = token.name;
      switch (t1) {
        case "tr":
          _this.endTagTr$1(token);
          return null;
        case "table":
          t1 = _this.tree.elementInScope$2$variant("tr", "table");
          _this.endTagTr$1(new A.EndTagToken("tr", false));
          return !t1 ? null : token;
        case "tbody":
        case "tfoot":
        case "thead":
          return _this.endTagTableRowGroup$1(token);
        case "body":
        case "caption":
        case "col":
        case "colgroup":
        case "html":
        case "td":
        case "th":
          _this.parser.parseError$3(token.span, "unexpected-end-tag-in-table-row", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
        default:
          return _this.parser.get$_inTablePhase().processEndTag$1(token);
      }
    },
    clearStackToTableRowContext$0() {
      var t1, t2, t3, t4, t5, t6, last, t7, span, t8, t9;
      for (t1 = this.tree.openElements, t2 = this.parser, t3 = type$.String, t4 = type$.nullable_Object, t5 = type$.nullable_Map_of_String_and_nullable_Object, t6 = t2.tokenizer.stream; true;) {
        last = B.JSArray_methods.get$last(t1);
        t7 = last.localName;
        if (t7 === "tr" || t7 === "html")
          break;
        span = last.sourceSpan;
        t7 = t5._as(A.LinkedHashMap_LinkedHashMap$_literal(["name", B.JSArray_methods.get$last(t1).localName], t3, t4));
        if (span == null) {
          t8 = t6.fileInfo;
          if (t8 == null)
            span = null;
          else {
            t9 = t6._html_input_stream$_offset;
            new A.FileLocation(t8, t9).FileLocation$_$2(t8, t9);
            span = new A._FileSpan(t8, t9, t9);
            span._FileSpan$3(t8, t9, t9);
          }
        }
        B.JSArray_methods.add$1(t2.errors, new A.ParseError("unexpected-implied-end-tag-in-table-row", span, t7));
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      }
    },
    processEOF$0() {
      this.parser.get$_inTablePhase().processEOF$0();
      return false;
    },
    processSpaceCharacters$1(token) {
      return this.parser.get$_inTablePhase().processSpaceCharacters$1(token);
    },
    processCharacters$1(token) {
      return this.parser.get$_inTablePhase().processCharacters$1(token);
    },
    endTagTr$1(token) {
      var t1 = this.tree,
        t2 = this.parser;
      if (t1.elementInScope$2$variant("tr", "table")) {
        this.clearStackToTableRowContext$0();
        t1 = t1.openElements;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        t2.__HtmlParser_phase_AI = t2.get$_inTableBodyPhase();
      } else
        t2.parseError$2(token.span, "undefined-error");
    },
    endTagTableRowGroup$1(token) {
      if (this.tree.elementInScope$2$variant(token.name, "table")) {
        this.endTagTr$1(new A.EndTagToken("tr", false));
        return token;
      } else {
        this.parser.parseError$2(token.span, "undefined-error");
        return null;
      }
    }
  };
  A.InCellPhase.prototype = {
    processStartTag$1(token) {
      switch (token.name) {
        case "html":
          return this.startTagHtml$1(token);
        case "caption":
        case "col":
        case "colgroup":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
          return this.startTagTableOther$1(token);
        default:
          return this.parser.get$_inBodyPhase().processStartTag$1(token);
      }
    },
    processEndTag$1(token) {
      var _this = this,
        t1 = token.name;
      switch (t1) {
        case "td":
        case "th":
          _this.endTagTableCell$1(token);
          return null;
        case "body":
        case "caption":
        case "col":
        case "colgroup":
        case "html":
          _this.parser.parseError$3(token.span, "unexpected-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
        case "table":
        case "tbody":
        case "tfoot":
        case "thead":
        case "tr":
          return _this.endTagImply$1(token);
        default:
          return _this.parser.get$_inBodyPhase().processEndTag$1(token);
      }
    },
    closeCell$0() {
      var t1 = this.tree;
      if (t1.elementInScope$2$variant("td", "table"))
        this.endTagTableCell$1(new A.EndTagToken("td", false));
      else if (t1.elementInScope$2$variant("th", "table"))
        this.endTagTableCell$1(new A.EndTagToken("th", false));
    },
    processEOF$0() {
      this.parser.get$_inBodyPhase().processEOF$0();
      return false;
    },
    processCharacters$1(token) {
      return this.parser.get$_inBodyPhase().processCharacters$1(token);
    },
    startTagTableOther$1(token) {
      var t1 = this.tree;
      if (t1.elementInScope$2$variant("td", "table") || t1.elementInScope$2$variant("th", "table")) {
        this.closeCell$0();
        return token;
      } else {
        this.parser.parseError$2(token.span, "undefined-error");
        return null;
      }
    },
    endTagTableCell$1(token) {
      var t4, _this = this,
        t1 = _this.tree,
        t2 = t1.elementInScope$2$variant(token.name, "table"),
        t3 = token.name;
      if (t2) {
        t1.generateImpliedEndTags$1(t3);
        t2 = t1.openElements;
        t3 = B.JSArray_methods.get$last(t2).localName;
        t4 = token.name;
        if (t3 != t4) {
          _this.parser.parseError$3(token.span, "unexpected-cell-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t4], type$.String, type$.nullable_Object));
          _this.popOpenElementsUntil$1(token);
        } else {
          if (0 >= t2.length)
            return A.ioore(t2, -1);
          t2.pop();
        }
        t1.clearActiveFormattingElements$0();
        t1 = _this.parser;
        t1.__HtmlParser_phase_AI = t1.get$_inRowPhase();
      } else
        _this.parser.parseError$3(token.span, "unexpected-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t3], type$.String, type$.nullable_Object));
    },
    endTagImply$1(token) {
      if (this.tree.elementInScope$2$variant(token.name, "table")) {
        this.closeCell$0();
        return token;
      } else
        this.parser.parseError$2(token.span, "undefined-error");
      return null;
    }
  };
  A.InSelectPhase.prototype = {
    processStartTag$1(token) {
      var t2, _this = this, _null = null,
        t1 = token.name;
      switch (t1) {
        case "html":
          return _this.startTagHtml$1(token);
        case "option":
          t1 = _this.tree;
          t2 = t1.openElements;
          if (B.JSArray_methods.get$last(t2).localName === "option") {
            if (0 >= t2.length)
              return A.ioore(t2, -1);
            t2.pop();
          }
          t1.insertElement$1(token);
          return _null;
        case "optgroup":
          t1 = _this.tree;
          t2 = t1.openElements;
          if (B.JSArray_methods.get$last(t2).localName === "option") {
            if (0 >= t2.length)
              return A.ioore(t2, -1);
            t2.pop();
          }
          if (B.JSArray_methods.get$last(t2).localName === "optgroup") {
            if (0 >= t2.length)
              return A.ioore(t2, -1);
            t2.pop();
          }
          t1.insertElement$1(token);
          return _null;
        case "select":
          _this.parser.parseError$2(token.span, "unexpected-select-in-select");
          _this.endTagSelect$1(new A.EndTagToken("select", false));
          return _null;
        case "input":
        case "keygen":
        case "textarea":
          return _this.startTagInput$1(token);
        case "script":
          return _this.parser.get$_inHeadPhase().processStartTag$1(token);
        default:
          _this.parser.parseError$3(token.span, "unexpected-start-tag-in-select", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return _null;
      }
    },
    processEndTag$1(token) {
      var t2, t3, _this = this, _null = null,
        _s28_ = "unexpected-end-tag-in-select",
        t1 = token.name;
      switch (t1) {
        case "option":
          t1 = _this.tree.openElements;
          if (B.JSArray_methods.get$last(t1).localName === "option") {
            if (0 >= t1.length)
              return A.ioore(t1, -1);
            t1.pop();
          } else
            _this.parser.parseError$3(token.span, _s28_, A.LinkedHashMap_LinkedHashMap$_literal(["name", "option"], type$.String, type$.nullable_Object));
          return _null;
        case "optgroup":
          t1 = _this.tree.openElements;
          if (B.JSArray_methods.get$last(t1).localName === "option") {
            t2 = t1.length;
            t3 = t2 - 2;
            if (!(t3 >= 0))
              return A.ioore(t1, t3);
            t3 = t1[t3].localName === "optgroup";
            t2 = t3;
          } else
            t2 = false;
          if (t2) {
            if (0 >= t1.length)
              return A.ioore(t1, -1);
            t1.pop();
          }
          if (B.JSArray_methods.get$last(t1).localName === "optgroup") {
            if (0 >= t1.length)
              return A.ioore(t1, -1);
            t1.pop();
          } else
            _this.parser.parseError$3(token.span, _s28_, A.LinkedHashMap_LinkedHashMap$_literal(["name", "optgroup"], type$.String, type$.nullable_Object));
          return _null;
        case "select":
          _this.endTagSelect$1(token);
          return _null;
        default:
          _this.parser.parseError$3(token.span, _s28_, A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return _null;
      }
    },
    processEOF$0() {
      var last = B.JSArray_methods.get$last(this.tree.openElements);
      if (last.localName !== "html")
        this.parser.parseError$2(last.sourceSpan, "eof-in-select");
      return false;
    },
    processCharacters$1(token) {
      if (token.get$data(0) === "\x00")
        return null;
      this.tree.insertText$2(token.get$data(0), token.span);
      return null;
    },
    startTagInput$1(token) {
      var _s6_ = "select";
      this.parser.parseError$2(token.span, "unexpected-input-in-select");
      if (this.tree.elementInScope$2$variant(_s6_, _s6_)) {
        this.endTagSelect$1(new A.EndTagToken(_s6_, false));
        return token;
      }
      return null;
    },
    endTagSelect$1(token) {
      var t1 = this.parser;
      if (this.tree.elementInScope$2$variant("select", "select")) {
        this.popOpenElementsUntil$1(token);
        t1.resetInsertionMode$0();
      } else
        t1.parseError$2(token.span, "undefined-error");
    }
  };
  A.InSelectInTablePhase.prototype = {
    processStartTag$1(token) {
      var t2,
        t1 = token.name;
      switch (t1) {
        case "caption":
        case "table":
        case "tbody":
        case "tfoot":
        case "thead":
        case "tr":
        case "td":
        case "th":
          t2 = this.parser;
          t2.parseError$3(token.span, string$.unexpets, A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          t2.get$_inSelectPhase().processEndTag$1(new A.EndTagToken("select", false));
          return token;
        default:
          return this.parser.get$_inSelectPhase().processStartTag$1(token);
      }
    },
    processEndTag$1(token) {
      switch (token.name) {
        case "caption":
        case "table":
        case "tbody":
        case "tfoot":
        case "thead":
        case "tr":
        case "td":
        case "th":
          return this.endTagTable$1(token);
        default:
          return this.parser.get$_inSelectPhase().processEndTag$1(token);
      }
    },
    processEOF$0() {
      this.parser.get$_inSelectPhase().processEOF$0();
      return false;
    },
    processCharacters$1(token) {
      return this.parser.get$_inSelectPhase().processCharacters$1(token);
    },
    endTagTable$1(token) {
      var t1 = this.parser;
      t1.parseError$3(token.span, string$.unexpete, A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
      if (this.tree.elementInScope$2$variant(token.name, "table")) {
        t1.get$_inSelectPhase().processEndTag$1(new A.EndTagToken("select", false));
        return token;
      }
      return null;
    }
  };
  A.InForeignContentPhase.prototype = {
    processCharacters$1(token) {
      var t1;
      if (token.get$data(0) === "\x00") {
        token._token$_string = "\ufffd";
        token._buffer = null;
      } else {
        t1 = this.parser;
        if (t1.framesetOK && !A.allWhitespace(token.get$data(0)))
          t1.framesetOK = false;
      }
      return this.super$Phase$processCharacters(token);
    },
    processStartTag$1(token) {
      var t3, t4, t5, t6, replace, _this = this,
        t1 = _this.tree,
        t2 = t1.openElements,
        currentNode = B.JSArray_methods.get$last(t2);
      if (!B.JSArray_methods.contains$1(B.List_kMT, token.name))
        if (token.name === "font")
          t3 = token.data.containsKey$1("color") || token.data.containsKey$1("face") || token.data.containsKey$1("size");
        else
          t3 = false;
      else
        t3 = true;
      if (t3) {
        t3 = _this.parser;
        t3.parseError$3(token.span, string$.unexpeh, A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
        t1 = t1.defaultNamespace;
        t4 = type$.Element_2;
        t5 = type$.Pair_of_nullable_String_and_nullable_String;
        while (true) {
          if (B.JSArray_methods.get$last(t2).namespaceUri != t1)
            if (!t3.isHTMLIntegrationPoint$1(B.JSArray_methods.get$last(t2))) {
              t6 = t4._as(B.JSArray_methods.get$last(t2));
              t6 = !B.JSArray_methods.contains$1(B.List_6pl, new A.Pair(t6.namespaceUri, t6.localName, t5));
            } else
              t6 = false;
          else
            t6 = false;
          if (!t6)
            break;
          if (0 >= t2.length)
            return A.ioore(t2, -1);
          t2.pop();
        }
        return token;
      } else {
        t3 = currentNode.namespaceUri;
        if (t3 === "http://www.w3.org/1998/Math/MathML")
          _this.parser.adjustMathMLAttributes$1(token);
        else if (t3 === "http://www.w3.org/2000/svg") {
          replace = B.Map_yzEtd.$index(0, token.name);
          if (replace != null)
            token.name = replace;
          _this.parser.adjustSVGAttributes$1(token);
        }
        _this.parser.adjustForeignAttributes$1(token);
        token.namespace = t3;
        t1.insertElement$1(token);
        if (token.selfClosing) {
          if (0 >= t2.length)
            return A.ioore(t2, -1);
          t2.pop();
          token.selfClosingAcknowledged = true;
        }
        return null;
      }
    },
    processEndTag$1(token) {
      var t4, newToken, t5, value, result, value0, _this = this, _null = null,
        _s13_ = "_initialPhase",
        t1 = _this.tree,
        t2 = t1.openElements,
        nodeIndex = t2.length - 1,
        node = B.JSArray_methods.get$last(t2),
        t3 = node.localName;
      if (t3 == null)
        t3 = _null;
      else {
        t4 = type$.CodeUnits;
        t4 = A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t3), t4._eval$1("int(ListBase.E)")._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t4._eval$1("MappedListIterable<ListBase.E,int>")), 0, _null);
        t3 = t4;
      }
      t4 = token.name;
      if (t3 != t4)
        _this.parser.parseError$3(token.span, "unexpected-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t4], type$.String, type$.nullable_Object));
      t1 = t1.defaultNamespace;
      t3 = type$.CodeUnits;
      t4 = t3._eval$1("int(ListBase.E)");
      t3 = t3._eval$1("MappedListIterable<ListBase.E,int>");
      while (true) {
        if (!true) {
          newToken = _null;
          break;
        }
        c$0: {
          t5 = node.localName;
          t5 = t5 == null ? _null : A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t5), t4._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t3), 0, _null);
          if (t5 == token.name) {
            t1 = _this.parser;
            value = t1.__HtmlParser_phase_AI;
            if (value === $) {
              value = t1.__HtmlParser__initialPhase_FI;
              if (value === $) {
                result = new A.InitialPhase(t1, t1.tree);
                value !== $ && A.throwLateFieldADI(_s13_);
                t1.__HtmlParser__initialPhase_FI = result;
                value = result;
              }
              value = t1.__HtmlParser_phase_AI = value;
            }
            value0 = t1.__HtmlParser__inTableTextPhase_FI;
            if (value0 === $) {
              t3 = A._setArrayType([], type$.JSArray_StringToken);
              t1.__HtmlParser__inTableTextPhase_FI !== $ && A.throwLateFieldADI("_inTableTextPhase");
              value0 = t1.__HtmlParser__inTableTextPhase_FI = new A.InTableTextPhase(t3, t1, t1.tree);
            }
            if (value === value0) {
              value = t1.__HtmlParser_phase_AI;
              if (value === $) {
                value = t1.__HtmlParser__initialPhase_FI;
                if (value === $) {
                  result = new A.InitialPhase(t1, t1.tree);
                  value !== $ && A.throwLateFieldADI(_s13_);
                  t1.__HtmlParser__initialPhase_FI = result;
                  value = result;
                }
                value = t1.__HtmlParser_phase_AI = value;
              }
              type$.InTableTextPhase._as(value);
              value.flushCharacters$0();
              t3 = value.originalPhase;
              t3.toString;
              t1.__HtmlParser_phase_AI = t3;
            }
            while (true) {
              if (0 >= t2.length)
                return A.ioore(t2, -1);
              if (!!J.$eq$(t2.pop(), node))
                break;
            }
            newToken = _null;
            break;
          }
          --nodeIndex;
          if (!(nodeIndex >= 0 && nodeIndex < t2.length))
            return A.ioore(t2, nodeIndex);
          node = t2[nodeIndex];
          if (node.namespaceUri != t1)
            break c$0;
          else {
            t1 = _this.parser;
            value = t1.__HtmlParser_phase_AI;
            if (value === $) {
              value = t1.__HtmlParser__initialPhase_FI;
              if (value === $) {
                result = new A.InitialPhase(t1, t1.tree);
                value !== $ && A.throwLateFieldADI(_s13_);
                t1.__HtmlParser__initialPhase_FI = result;
                value = result;
              }
              value = t1.__HtmlParser_phase_AI = value;
            }
            newToken = value.processEndTag$1(token);
            break;
          }
        }
      }
      return newToken;
    }
  };
  A.AfterBodyPhase.prototype = {
    processStartTag$1(token) {
      var t2,
        t1 = token.name;
      if (t1 === "html")
        return this.parser.get$_inBodyPhase().processStartTag$1(token);
      t2 = this.parser;
      t2.parseError$3(token.span, "unexpected-start-tag-after-body", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
      t2.__HtmlParser_phase_AI = t2.get$_inBodyPhase();
      return token;
    },
    processEndTag$1(token) {
      var t2,
        t1 = token.name;
      if (t1 === "html") {
        this.endTagHtml$1(token);
        return null;
      }
      t2 = this.parser;
      t2.parseError$3(token.span, "unexpected-end-tag-after-body", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
      t2.__HtmlParser_phase_AI = t2.get$_inBodyPhase();
      return token;
    },
    processEOF$0() {
      return false;
    },
    processComment$1(token) {
      var t1 = this.tree,
        t2 = t1.openElements;
      if (0 >= t2.length)
        return A.ioore(t2, 0);
      t1.insertComment$2(token, t2[0]);
      return null;
    },
    processCharacters$1(token) {
      var t1 = this.parser;
      t1.parseError$2(token.span, "unexpected-char-after-body");
      t1.__HtmlParser_phase_AI = t1.get$_inBodyPhase();
      return token;
    },
    endTagHtml$1(token) {
      var t1, t2, t3, value;
      for (t1 = this.tree.openElements, t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"), t1 = new A.ReversedListIterable(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3).localName === "html")
          break;
      }
      t1 = this.parser;
      value = t1.__HtmlParser__afterAfterBodyPhase_FI;
      if (value === $) {
        value !== $ && A.throwLateFieldADI("_afterAfterBodyPhase");
        value = t1.__HtmlParser__afterAfterBodyPhase_FI = new A.AfterAfterBodyPhase(t1, t1.tree);
      }
      t1.__HtmlParser_phase_AI = value;
    }
  };
  A.InFramesetPhase.prototype = {
    processStartTag$1(token) {
      var _this = this,
        t1 = token.name;
      switch (t1) {
        case "html":
          return _this.startTagHtml$1(token);
        case "frameset":
          _this.tree.insertElement$1(token);
          return null;
        case "frame":
          t1 = _this.tree;
          t1.insertElement$1(token);
          t1 = t1.openElements;
          if (0 >= t1.length)
            return A.ioore(t1, -1);
          t1.pop();
          return null;
        case "noframes":
          return _this.parser.get$_inBodyPhase().processStartTag$1(token);
        default:
          _this.parser.parseError$3(token.span, "unexpected-start-tag-in-frameset", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
      }
    },
    processEndTag$1(token) {
      var value, _this = this,
        t1 = token.name;
      switch (t1) {
        case "frameset":
          t1 = _this.tree.openElements;
          if (B.JSArray_methods.get$last(t1).localName === "html")
            _this.parser.parseError$2(token.span, string$.unexpef);
          else {
            if (0 >= t1.length)
              return A.ioore(t1, -1);
            t1.pop();
          }
          t1 = B.JSArray_methods.get$last(t1).localName;
          if (t1 !== "frameset") {
            t1 = _this.parser;
            value = t1.__HtmlParser__afterFramesetPhase_FI;
            if (value === $) {
              value !== $ && A.throwLateFieldADI("_afterFramesetPhase");
              value = t1.__HtmlParser__afterFramesetPhase_FI = new A.AfterFramesetPhase(t1, t1.tree);
            }
            t1.__HtmlParser_phase_AI = value;
          }
          return null;
        default:
          _this.parser.parseError$3(token.span, "unexpected-end-tag-in-frameset", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
      }
    },
    processEOF$0() {
      var last = B.JSArray_methods.get$last(this.tree.openElements);
      if (last.localName !== "html")
        this.parser.parseError$2(last.sourceSpan, "eof-in-frameset");
      return false;
    },
    processCharacters$1(token) {
      this.parser.parseError$2(token.span, "unexpected-char-in-frameset");
      return null;
    }
  };
  A.AfterFramesetPhase.prototype = {
    processStartTag$1(token) {
      var t1 = token.name;
      switch (t1) {
        case "html":
          return this.startTagHtml$1(token);
        case "noframes":
          return this.parser.get$_inHeadPhase().processStartTag$1(token);
        default:
          this.parser.parseError$3(token.span, "unexpected-start-tag-after-frameset", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
      }
    },
    processEndTag$1(token) {
      var value,
        t1 = token.name,
        t2 = this.parser;
      switch (t1) {
        case "html":
          value = t2.__HtmlParser__afterAfterFramesetPhase_FI;
          if (value === $) {
            value !== $ && A.throwLateFieldADI("_afterAfterFramesetPhase");
            value = t2.__HtmlParser__afterAfterFramesetPhase_FI = new A.AfterAfterFramesetPhase(t2, t2.tree);
          }
          t2.__HtmlParser_phase_AI = value;
          return null;
        default:
          t2.parseError$3(token.span, "unexpected-end-tag-after-frameset", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
      }
    },
    processEOF$0() {
      return false;
    },
    processCharacters$1(token) {
      this.parser.parseError$2(token.span, "unexpected-char-after-frameset");
      return null;
    }
  };
  A.AfterAfterBodyPhase.prototype = {
    processStartTag$1(token) {
      var t2,
        t1 = token.name;
      if (t1 === "html")
        return this.parser.get$_inBodyPhase().processStartTag$1(token);
      t2 = this.parser;
      t2.parseError$3(token.span, "expected-eof-but-got-start-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
      t2.__HtmlParser_phase_AI = t2.get$_inBodyPhase();
      return token;
    },
    processEOF$0() {
      return false;
    },
    processComment$1(token) {
      var t1 = this.tree,
        t2 = t1.__TreeBuilder_document_A;
      t2 === $ && A.throwLateFieldNI("document");
      t1.insertComment$2(token, t2);
      return null;
    },
    processSpaceCharacters$1(token) {
      return this.parser.get$_inBodyPhase().processSpaceCharacters$1(token);
    },
    processCharacters$1(token) {
      var t1 = this.parser;
      t1.parseError$2(token.span, "expected-eof-but-got-char");
      t1.__HtmlParser_phase_AI = t1.get$_inBodyPhase();
      return token;
    },
    processEndTag$1(token) {
      var t1 = this.parser;
      t1.parseError$3(token.span, "expected-eof-but-got-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
      t1.__HtmlParser_phase_AI = t1.get$_inBodyPhase();
      return token;
    }
  };
  A.AfterAfterFramesetPhase.prototype = {
    processStartTag$1(token) {
      var t1 = token.name,
        t2 = this.parser;
      switch (t1) {
        case "html":
          return t2.get$_inBodyPhase().processStartTag$1(token);
        case "noframes":
          return t2.get$_inHeadPhase().processStartTag$1(token);
        default:
          t2.parseError$3(token.span, "expected-eof-but-got-start-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", t1], type$.String, type$.nullable_Object));
          return null;
      }
    },
    processEOF$0() {
      return false;
    },
    processComment$1(token) {
      var t1 = this.tree,
        t2 = t1.__TreeBuilder_document_A;
      t2 === $ && A.throwLateFieldNI("document");
      t1.insertComment$2(token, t2);
      return null;
    },
    processSpaceCharacters$1(token) {
      return this.parser.get$_inBodyPhase().processSpaceCharacters$1(token);
    },
    processCharacters$1(token) {
      this.parser.parseError$2(token.span, "expected-eof-but-got-char");
      return null;
    },
    processEndTag$1(token) {
      this.parser.parseError$3(token.span, "expected-eof-but-got-end-tag", A.LinkedHashMap_LinkedHashMap$_literal(["name", token.name], type$.String, type$.nullable_Object));
      return null;
    }
  };
  A.ParseError.prototype = {
    toString$0(_) {
      var t2, t3, t4, t5, highlight, res,
        t1 = this.span;
      t1.toString;
      t2 = B.Map_yfGJk.$index(0, this.errorCode);
      t2.toString;
      t2 = A.formatStr(t2, this.data);
      t3 = "" + ("line " + (t1.get$start(0).get$line() + 1) + ", column " + (t1.get$start(0).get$column() + 1));
      if (t1.get$sourceUrl() != null) {
        t4 = t1.get$sourceUrl();
        t5 = $.$get$context();
        t4.toString;
        t4 = t3 + (" of " + t5.prettyUri$1(t4));
        t3 = t4;
      }
      t2 = t3 + (": " + t2);
      highlight = t1.highlight$1$color(null);
      if (highlight.length !== 0)
        t2 = t2 + "\n" + highlight;
      res = t2.charCodeAt(0) == 0 ? t2 : t2;
      return t1.file.url == null ? "ParserError on " + res : "On " + res;
    },
    $isException: 1
  };
  A.ReparseException.prototype = {};
  A.EncodingBytes.prototype = {
    set$_encoding_parser$_position(value) {
      if (this.__position >= this._bytes.length)
        throw A.wrapException(A._EncodingRangeException$("No more elements"));
      this.__position = value;
    },
    get$_encoding_parser$_position() {
      var t1 = this.__position;
      if (t1 >= this._bytes.length)
        throw A.wrapException(A._EncodingRangeException$("No more elements"));
      if (t1 >= 0)
        return t1;
      else
        return 0;
    },
    _skipChars$1(skipChars) {
      var p, t1, t2, c, _this = this;
      type$.nullable_bool_Function_String._as(skipChars);
      if (skipChars == null)
        skipChars = A.constants__isWhitespace$closure();
      p = _this.get$_encoding_parser$_position();
      for (t1 = _this._bytes, t2 = t1.length; p < t2;) {
        if (!(p >= 0))
          return A.ioore(t1, p);
        c = t1[p];
        if (!A.boolConversionCheck(skipChars.call$1(c))) {
          _this.__position = p;
          return c;
        }
        ++p;
      }
      _this.__position = p;
      return null;
    },
    _skipChars$0() {
      return this._skipChars$1(null);
    },
    _skipUntil$1(untilChars) {
      var p, t1, t2, c;
      type$.bool_Function_String._as(untilChars);
      p = this.get$_encoding_parser$_position();
      for (t1 = this._bytes, t2 = t1.length; p < t2;) {
        if (!(p >= 0))
          return A.ioore(t1, p);
        c = t1[p];
        if (A.boolConversionCheck(untilChars.call$1(c))) {
          this.__position = p;
          return c;
        }
        ++p;
      }
      return null;
    },
    _jumpTo$1(bytes) {
      var newPosition = B.JSString_methods.indexOf$2(this._bytes, bytes, this.get$_encoding_parser$_position());
      if (newPosition >= 0) {
        this.__position = newPosition + bytes.length - 1;
        return true;
      } else
        throw A.wrapException(A._EncodingRangeException$("No more elements"));
    },
    _slice$2(start, end) {
      if (end == null)
        end = this._bytes.length;
      if (end < 0)
        end += this._bytes.length;
      return B.JSString_methods.substring$2(this._bytes, start, end);
    },
    _slice$1(start) {
      return this._slice$2(start, null);
    }
  };
  A.ContentAttrParser.prototype = {
    parse$0() {
      var quoteMark, oldPosition, oldPosition0, t1, t2, t3, t4, exception;
      try {
        t1 = this.data;
        t1._jumpTo$1("charset");
        t1.set$_encoding_parser$_position(t1.get$_encoding_parser$_position() + 1);
        t1._skipChars$0();
        t2 = t1._bytes;
        t3 = t1.get$_encoding_parser$_position();
        t4 = t2.length;
        if (!(t3 >= 0 && t3 < t4))
          return A.ioore(t2, t3);
        if (t2[t3] !== "=")
          return null;
        t1.set$_encoding_parser$_position(t1.get$_encoding_parser$_position() + 1);
        t1._skipChars$0();
        t3 = t1.get$_encoding_parser$_position();
        if (!(t3 >= 0 && t3 < t4))
          return A.ioore(t2, t3);
        if (t2[t3] !== '"') {
          t3 = t1.get$_encoding_parser$_position();
          if (!(t3 >= 0 && t3 < t4))
            return A.ioore(t2, t3);
          t3 = t2[t3] === "'";
        } else
          t3 = true;
        if (t3) {
          t3 = t1.get$_encoding_parser$_position();
          if (!(t3 >= 0 && t3 < t4))
            return A.ioore(t2, t3);
          quoteMark = t2[t3];
          t1.set$_encoding_parser$_position(t1.get$_encoding_parser$_position() + 1);
          oldPosition = t1.get$_encoding_parser$_position();
          t1._jumpTo$1(quoteMark);
          t1 = t1._slice$2(oldPosition, t1.get$_encoding_parser$_position());
          return t1;
        } else {
          oldPosition0 = t1.get$_encoding_parser$_position();
          try {
            t1._skipUntil$1(A.constants__isWhitespace$closure());
            t2 = t1._slice$2(oldPosition0, t1.get$_encoding_parser$_position());
            return t2;
          } catch (exception) {
            if (A.unwrapException(exception) instanceof A._EncodingRangeException) {
              t1 = t1._slice$1(oldPosition0);
              return t1;
            } else
              throw exception;
          }
        }
      } catch (exception) {
        if (A.unwrapException(exception) instanceof A._EncodingRangeException)
          return null;
        else
          throw exception;
      }
    }
  };
  A._EncodingRangeException.prototype = {$isException: 1};
  A.HtmlInputStream.prototype = {
    reset$0(_) {
      var t1, rawChars, t2, t3, t4, skipNewline, wasSurrogatePair, i, c, t5, isSurrogatePair, _this = this;
      _this.set$errors(A.ListQueue$(type$.String));
      _this._html_input_stream$_offset = 0;
      t1 = type$.JSArray_int;
      _this.set$_chars(A._setArrayType([], t1));
      rawChars = _this._rawChars;
      if (rawChars == null) {
        t2 = _this.charEncodingName;
        t2.toString;
        t3 = _this._rawBytes;
        t3.toString;
        rawChars = A._decodeBytes(t2, t3);
        _this.set$_rawChars(rawChars);
      }
      for (t2 = rawChars.__internal$_string, t3 = t2.length, t4 = type$.List_int, skipNewline = false, wasSurrogatePair = false, i = 0; i < t3; ++i) {
        c = t2.charCodeAt(i);
        if (skipNewline) {
          if (c === 10) {
            skipNewline = false;
            continue;
          }
          skipNewline = false;
        }
        t4._as(rawChars);
        t5 = i + 1;
        isSurrogatePair = t5 < rawChars.get$length(0) && (rawChars.$index(0, i) & 64512) === 55296 && (rawChars.$index(0, t5) & 64512) === 56320;
        if (!isSurrogatePair && !wasSurrogatePair)
          if (A._invalidUnicode(c)) {
            t5 = _this.errors;
            t5._add$1(t5.$ti._precomputed1._as("invalid-codepoint"));
            if (55296 <= c && c <= 57343)
              c = 65533;
          }
        if (c === 13) {
          skipNewline = true;
          c = 10;
        }
        B.JSArray_methods.add$1(_this._chars, c);
        wasSurrogatePair = isSurrogatePair;
      }
      t2 = _this._chars;
      t3 = _this.sourceUrl;
      t1 = A._setArrayType([0], t1);
      t4 = A._setArrayType(t2.slice(0), A._arrayInstanceType(t2));
      t1 = new A.SourceFile(t3, t1, new Uint32Array(A._ensureNativeList(t4)));
      t1.SourceFile$decoded$2$url(t2, t3);
      _this.fileInfo = t1;
    },
    changeEncoding$1(newEncoding) {
      var t1 = A.StateError$("cannot change encoding when parsing a String.");
      throw A.wrapException(t1);
    },
    char$0() {
      var t3, t4, _this = this,
        t1 = _this._html_input_stream$_offset,
        t2 = _this._chars;
      if (t1 >= t2.length)
        return null;
      t1 = _this._isSurrogatePair$2(t2, t1);
      t2 = _this._chars;
      t3 = _this._html_input_stream$_offset;
      t4 = t3 + 1;
      if (t1) {
        _this._html_input_stream$_offset = t4;
        t1 = t2.length;
        if (!(t3 >= 0 && t3 < t1))
          return A.ioore(t2, t3);
        t3 = t2[t3];
        _this._html_input_stream$_offset = t4 + 1;
        if (!(t4 >= 0 && t4 < t1))
          return A.ioore(t2, t4);
        t4 = A.String_String$fromCharCodes(A._setArrayType([t3, t2[t4]], type$.JSArray_int), 0, null);
        t1 = t4;
      } else {
        _this._html_input_stream$_offset = t4;
        if (!(t3 >= 0 && t3 < t2.length))
          return A.ioore(t2, t3);
        t1 = A.Primitives_stringFromCharCode(t2[t3]);
      }
      return t1;
    },
    peekChar$0() {
      var t3, t4, _this = this,
        t1 = _this._html_input_stream$_offset,
        t2 = _this._chars;
      if (t1 >= t2.length)
        return null;
      t1 = _this._isSurrogatePair$2(t2, t1);
      t2 = _this._chars;
      t3 = _this._html_input_stream$_offset;
      t4 = t2.length;
      if (t1) {
        if (!(t3 >= 0 && t3 < t4))
          return A.ioore(t2, t3);
        t1 = t2[t3];
        ++t3;
        if (!(t3 < t4))
          return A.ioore(t2, t3);
        t3 = A.String_String$fromCharCodes(A._setArrayType([t1, t2[t3]], type$.JSArray_int), 0, null);
        t1 = t3;
      } else {
        if (!(t3 >= 0 && t3 < t4))
          return A.ioore(t2, t3);
        t1 = A.Primitives_stringFromCharCode(t2[t3]);
      }
      return t1;
    },
    _isSurrogatePair$2(chars, i) {
      var t1, t2;
      type$.List_int._as(chars);
      t1 = i + 1;
      t2 = J.getInterceptor$asx(chars);
      return t1 < t2.get$length(chars) && (A._asInt(t2.$index(chars, i)) & 64512) === 55296 && (A._asInt(t2.$index(chars, t1)) & 64512) === 56320;
    },
    charsUntil$2(characters, opposite) {
      var c, t2, _this = this,
        start = _this._html_input_stream$_offset,
        t1 = characters.length;
      while (true) {
        c = _this.peekChar$0();
        if (c != null)
          t2 = A.stringContainsUnchecked(characters, c, 0) === opposite;
        else
          t2 = false;
        if (!t2)
          break;
        _this._html_input_stream$_offset = _this._html_input_stream$_offset + c.length;
      }
      return A.String_String$fromCharCodes(B.JSArray_methods.sublist$2(_this._chars, start, _this._html_input_stream$_offset), 0, null);
    },
    charsUntil$1(characters) {
      return this.charsUntil$2(characters, false);
    },
    unget$1(ch) {
      if (ch != null)
        this._html_input_stream$_offset = this._html_input_stream$_offset - ch.length;
    },
    set$_rawChars(_rawChars) {
      this._rawChars = type$.nullable_List_int._as(_rawChars);
    },
    set$errors(errors) {
      this.errors = type$.Queue_String._as(errors);
    },
    set$_chars(_chars) {
      this._chars = type$.List_int._as(_chars);
    }
  };
  A.ListProxy.prototype = {
    get$length(_) {
      return this._list_proxy$_list.length;
    },
    get$iterator(_) {
      var t1 = this._list_proxy$_list;
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    $index(_, index) {
      var t1 = this._list_proxy$_list;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    $indexSet(_, index, value) {
      B.JSArray_methods.$indexSet(this._list_proxy$_list, index, A._instanceType(this)._eval$1("ListProxy.E")._as(value));
    },
    set$length(_, value) {
      B.JSArray_methods.set$length(this._list_proxy$_list, value);
    },
    add$1(_, element) {
      B.JSArray_methods.add$1(this._list_proxy$_list, A._instanceType(this)._eval$1("ListProxy.E")._as(element));
    },
    insert$2(_, index, element) {
      return B.JSArray_methods.insert$2(this._list_proxy$_list, index, A._instanceType(this)._eval$1("ListProxy.E")._as(element));
    },
    addAll$1(_, iterable) {
      B.JSArray_methods.addAll$1(this._list_proxy$_list, A._instanceType(this)._eval$1("Iterable<ListProxy.E>")._as(iterable));
    }
  };
  A.Token.prototype = {};
  A.TagToken.prototype = {};
  A.StartTagToken.prototype = {
    get$kind(_) {
      return 2;
    },
    set$data(_, data) {
      this.data = type$.LinkedHashMap_Object_String._as(data);
    }
  };
  A.EndTagToken.prototype = {
    get$kind(_) {
      return 3;
    }
  };
  A.StringToken.prototype = {
    get$data(_) {
      var _this = this,
        t1 = _this._token$_string;
      if (t1 == null) {
        t1 = _this._token$_string = J.toString$0$(_this._buffer);
        _this._buffer = null;
      }
      return t1;
    }
  };
  A.ParseErrorToken.prototype = {
    get$kind(_) {
      return 6;
    }
  };
  A.CharactersToken.prototype = {
    get$kind(_) {
      return 1;
    }
  };
  A.SpaceCharactersToken.prototype = {
    get$kind(_) {
      return 0;
    }
  };
  A.CommentToken.prototype = {
    get$kind(_) {
      return 4;
    }
  };
  A.DoctypeToken.prototype = {
    get$kind(_) {
      return 5;
    }
  };
  A.TagAttribute.prototype = {};
  A.entitiesByFirstChar_closure.prototype = {
    call$0() {
      var t1, t2,
        result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_String);
      for (t1 = B.Map_kiql0.get$keys(), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current();
        if (0 >= t2.length)
          return A.ioore(t2, 0);
        J.add$1$ax(result.putIfAbsent$2(t2[0], new A.entitiesByFirstChar__closure()), t2);
      }
      return result;
    },
    $signature: 81
  };
  A.entitiesByFirstChar__closure.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_String);
    },
    $signature: 47
  };
  A.HtmlTokenizer.prototype = {
    get$state(_) {
      var t1 = this.__HtmlTokenizer_state_A;
      t1 === $ && A.throwLateFieldNI("state");
      return t1;
    },
    get$current() {
      var t1 = this._tokenizer$_current;
      t1.toString;
      return t1;
    },
    _markAttributeEnd$1(offset) {
      var t1 = this._attributes;
      t1.toString;
      B.JSArray_methods.get$last(t1).__TagAttribute_value_A = this._attributeValue.toString$0(0);
    },
    _markAttributeValueStart$1(offset) {
    },
    _markAttributeValueEnd$1(offset) {
      this._markAttributeEnd$1(offset);
    },
    _addAttribute$1($name) {
      var t1, _this = this;
      A._asString($name);
      if (_this._attributes == null)
        _this.set$_attributes(0, A._setArrayType([], type$.JSArray_TagAttribute));
      t1 = _this._attributeName;
      t1._contents = "";
      t1._contents = $name;
      _this._attributeValue._contents = "";
      t1 = _this._attributes;
      t1.toString;
      B.JSArray_methods.add$1(t1, new A.TagAttribute());
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.stream,
        t2 = _this.tokenQueue;
      while (true) {
        t3 = t1.errors;
        if (!(t3._head === t3._tail && t2._head === t2._tail))
          break;
        if (!A.boolConversionCheck(_this.state$0(0))) {
          _this._tokenizer$_current = null;
          return false;
        }
      }
      if (!t3.get$isEmpty(0)) {
        t1 = t1.errors.removeFirst$0();
        _this._tokenizer$_current = new A.ParseErrorToken(null, null, t1);
      } else
        _this.set$_tokenizer$_current(t2.removeFirst$0());
      return true;
    },
    reset$0(_) {
      var _this = this;
      _this.__HtmlTokenizer__lastOffset_A = 0;
      _this.tokenQueue.clear$0(0);
      _this.currentToken = null;
      _this._tokenizer$_buffer._contents = "";
      _this.set$_attributes(0, null);
      _this.set$_attributeNames(null);
      _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
    },
    _addToken$1(token) {
      var t1 = this.tokenQueue;
      t1._add$1(t1.$ti._precomputed1._as(token));
    },
    consumeNumberEntity$1(isHex) {
      var allowed, radix, charStack, t1, c, charAsInt, char, t2, _this = this, _null = null,
        _s36_ = "illegal-codepoint-for-numeric-entity";
      if (isHex) {
        allowed = A.constants__isHexDigit$closure();
        radix = 16;
      } else {
        allowed = A.constants__isDigit$closure();
        radix = 10;
      }
      charStack = A._setArrayType([], type$.JSArray_nullable_String);
      t1 = _this.stream;
      c = t1.char$0();
      while (true) {
        if (!(A.boolConversionCheck(allowed.call$1(c)) && c != null))
          break;
        B.JSArray_methods.add$1(charStack, c);
        c = t1.char$0();
      }
      charAsInt = A.int_parse(B.JSArray_methods.join$0(charStack), radix);
      char = B.Map_gvLTM.$index(0, charAsInt);
      if (char != null) {
        t2 = A.LinkedHashMap_LinkedHashMap$_literal(["charAsInt", charAsInt], type$.String, type$.nullable_Object);
        _this._addToken$1(new A.ParseErrorToken(t2, _null, _s36_));
      } else if (55296 <= charAsInt && charAsInt <= 57343 || charAsInt > 1114111) {
        t2 = A.LinkedHashMap_LinkedHashMap$_literal(["charAsInt", charAsInt], type$.String, type$.nullable_Object);
        _this._addToken$1(new A.ParseErrorToken(t2, _null, _s36_));
        char = "\ufffd";
      } else {
        if (!(1 <= charAsInt && charAsInt <= 8))
          if (!(14 <= charAsInt && charAsInt <= 31))
            if (!(127 <= charAsInt && charAsInt <= 159))
              t2 = 64976 <= charAsInt && charAsInt <= 65007 || B.JSArray_methods.contains$1(B.List_mT8, charAsInt);
            else
              t2 = true;
          else
            t2 = true;
        else
          t2 = true;
        if (t2) {
          t2 = A.LinkedHashMap_LinkedHashMap$_literal(["charAsInt", charAsInt], type$.String, type$.nullable_Object);
          _this._addToken$1(new A.ParseErrorToken(t2, _null, _s36_));
        }
        char = A.String_String$fromCharCodes(A._setArrayType([charAsInt], type$.JSArray_int), 0, _null);
      }
      if (c !== ";") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "numeric-entity-without-semicolon"));
        t1.unget$1(c);
      }
      return char;
    },
    consumeEntity$2$allowedChar$fromAttribute(allowedChar, fromAttribute) {
      var t2, output, hex, t3, filteredEntityList, entityName, entityLen, possibleEntityName, token, _this = this, _null = null,
        t1 = _this.stream,
        charStack = A._setArrayType([t1.char$0()], type$.JSArray_nullable_String);
      if (0 >= charStack.length)
        return A.ioore(charStack, 0);
      if (!A.isWhitespace(charStack[0])) {
        if (0 >= charStack.length)
          return A.ioore(charStack, 0);
        t2 = charStack[0];
        t2 = t2 === "<" || t2 === "&" || t2 == null || allowedChar === t2;
      } else
        t2 = true;
      if (t2) {
        if (0 >= charStack.length)
          return A.ioore(charStack, 0);
        t1.unget$1(charStack[0]);
        output = "&";
      } else {
        if (0 >= charStack.length)
          return A.ioore(charStack, 0);
        t2 = charStack[0];
        if (t2 === "#") {
          B.JSArray_methods.add$1(charStack, t1.char$0());
          if (B.JSArray_methods.get$last(charStack) === "x" || B.JSArray_methods.get$last(charStack) === "X") {
            B.JSArray_methods.add$1(charStack, t1.char$0());
            hex = true;
          } else
            hex = false;
          if (!(hex && A.isHexDigit(B.JSArray_methods.get$last(charStack))))
            t2 = !hex && A.isDigit(B.JSArray_methods.get$last(charStack));
          else
            t2 = true;
          if (t2) {
            t1.unget$1(B.JSArray_methods.get$last(charStack));
            output = _this.consumeNumberEntity$1(hex);
          } else {
            _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-numeric-entity"));
            if (0 >= charStack.length)
              return A.ioore(charStack, -1);
            t1.unget$1(charStack.pop());
            output = "&" + B.JSArray_methods.join$0(charStack);
          }
        } else {
          t3 = $.$get$entitiesByFirstChar();
          t2.toString;
          filteredEntityList = t3.$index(0, t2);
          if (filteredEntityList == null)
            filteredEntityList = B.List_empty1;
          for (; B.JSArray_methods.get$last(charStack) != null;) {
            t2 = J.where$1$ax(filteredEntityList, new A.HtmlTokenizer_consumeEntity_closure(B.JSArray_methods.join$0(charStack)));
            filteredEntityList = A.List_List$of(t2, false, t2.$ti._eval$1("Iterable.E"));
            if (filteredEntityList.length === 0)
              break;
            B.JSArray_methods.add$1(charStack, t1.char$0());
          }
          entityLen = charStack.length - 1;
          while (true) {
            if (!(entityLen > 1)) {
              entityName = _null;
              break;
            }
            possibleEntityName = B.JSArray_methods.join$0(B.JSArray_methods.sublist$2(charStack, 0, entityLen));
            if (B.Map_kiql0.containsKey$1(possibleEntityName)) {
              entityName = possibleEntityName;
              break;
            }
            --entityLen;
          }
          if (entityName != null) {
            t2 = entityName.length;
            t3 = t2 - 1;
            if (!(t3 >= 0))
              return A.ioore(entityName, t3);
            t2 = entityName[t3] !== ";";
            if (t2)
              _this._addToken$1(new A.ParseErrorToken(_null, _null, "named-entity-without-semicolon"));
            if (t2)
              if (fromAttribute) {
                if (!(entityLen >= 0 && entityLen < charStack.length))
                  return A.ioore(charStack, entityLen);
                t2 = charStack[entityLen];
                if (!(A.isLetter(t2) || A.isDigit(t2))) {
                  if (!(entityLen < charStack.length))
                    return A.ioore(charStack, entityLen);
                  t2 = charStack[entityLen] === "=";
                } else
                  t2 = true;
              } else
                t2 = false;
            else
              t2 = false;
            if (t2) {
              if (0 >= charStack.length)
                return A.ioore(charStack, -1);
              t1.unget$1(charStack.pop());
              output = "&" + B.JSArray_methods.join$0(charStack);
            } else {
              output = B.Map_kiql0.$index(0, entityName);
              if (0 >= charStack.length)
                return A.ioore(charStack, -1);
              t1.unget$1(charStack.pop());
              output = A.S(output) + B.JSArray_methods.join$0(A.slice(charStack, entityLen, _null, type$.nullable_String));
            }
          } else {
            _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-named-entity"));
            if (0 >= charStack.length)
              return A.ioore(charStack, -1);
            t1.unget$1(charStack.pop());
            output = "&" + B.JSArray_methods.join$0(charStack);
          }
        }
      }
      if (fromAttribute)
        _this._attributeValue._contents += output;
      else {
        if (A.isWhitespace(output))
          token = new A.SpaceCharactersToken(_null, output);
        else
          token = new A.CharactersToken(_null, output);
        _this._addToken$1(token);
      }
    },
    consumeEntity$0() {
      return this.consumeEntity$2$allowedChar$fromAttribute(null, false);
    },
    emitCurrentToken$0() {
      var t2, t3, token, _i, attr, t4, t5, _this = this, _null = null,
        t1 = _this.currentToken;
      t1.toString;
      if (t1 instanceof A.TagToken) {
        t2 = t1.name;
        if (t2 == null)
          t2 = _null;
        else {
          t3 = type$.CodeUnits;
          t3 = A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t2), t3._eval$1("int(ListBase.E)")._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t3._eval$1("MappedListIterable<ListBase.E,int>")), 0, _null);
          t2 = t3;
        }
        t1.name = t2;
        if (t1 instanceof A.EndTagToken) {
          if (_this._attributes != null)
            _this._addToken$1(new A.ParseErrorToken(_null, _null, "attributes-in-end-tag"));
          if (t1.selfClosing)
            _this._addToken$1(new A.ParseErrorToken(_null, _null, "this-closing-flag-on-end-tag"));
          token = t1;
        } else if (t1 instanceof A.StartTagToken) {
          t1.set$data(0, A.LinkedHashMap_LinkedHashMap(type$.Object, type$.String));
          t2 = _this._attributes;
          if (t2 != null)
            for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
              attr = t2[_i];
              t4 = t1.data;
              t5 = attr.name;
              t5.toString;
              t4.putIfAbsent$2(t5, new A.HtmlTokenizer_emitCurrentToken_closure(attr));
            }
          token = t1;
        } else
          token = t1;
        _this.set$_attributes(0, _null);
        _this.set$_attributeNames(_null);
      } else
        token = t1;
      _this._addToken$1(token);
      _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
    },
    dataState$0() {
      var chars, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "&")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$entityDataState()));
      else if (data === "<")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$tagOpenState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\x00"));
      } else if (data == null)
        return false;
      else if (A.isWhitespace(data)) {
        t1 = t1.charsUntil$2(" \n\r\t\f", true);
        _this._addToken$1(new A.SpaceCharactersToken(_null, data + t1));
      } else {
        chars = t1.charsUntil$1("&<\x00");
        _this._addToken$1(new A.CharactersToken(_null, data + chars));
      }
      return true;
    },
    entityDataState$0() {
      this.consumeEntity$0();
      this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(this.get$dataState()));
      return true;
    },
    rcdataState$0() {
      var chars, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "&")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$characterReferenceInRcdata()));
      else if (data === "<")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rcdataLessThanSignState()));
      else if (data == null)
        return false;
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\ufffd"));
      } else if (A.isWhitespace(data)) {
        t1 = t1.charsUntil$2(" \n\r\t\f", true);
        _this._addToken$1(new A.SpaceCharactersToken(_null, data + t1));
      } else {
        chars = t1.charsUntil$1("&<");
        _this._addToken$1(new A.CharactersToken(_null, data + chars));
      }
      return true;
    },
    characterReferenceInRcdata$0() {
      this.consumeEntity$0();
      this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(this.get$rcdataState()));
      return true;
    },
    rawtextState$0() {
      var chars, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "<")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rawtextLessThanSignState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\ufffd"));
      } else if (data == null)
        return false;
      else {
        chars = t1.charsUntil$1("<\x00");
        _this._addToken$1(new A.CharactersToken(_null, data + chars));
      }
      return true;
    },
    scriptDataState$0() {
      var chars, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "<")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataLessThanSignState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\ufffd"));
      } else if (data == null)
        return false;
      else {
        chars = t1.charsUntil$1("<\x00");
        _this._addToken$1(new A.CharactersToken(_null, data + chars));
      }
      return true;
    },
    plaintextState$0() {
      var _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data == null)
        return false;
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\ufffd"));
      } else {
        t1 = t1.charsUntil$1("\x00");
        _this._addToken$1(new A.CharactersToken(_null, data + t1));
      }
      return true;
    },
    tagOpenState$0() {
      var _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "!")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$markupDeclarationOpenState()));
      else if (data === "/")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$closeTagOpenState()));
      else if (A.isLetter(data)) {
        _this.currentToken = A.StartTagToken$(data, _null, _null, false);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$tagNameState()));
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-tag-name-but-got-right-bracket"));
        _this._addToken$1(new A.CharactersToken(_null, "<>"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data === "?") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-tag-name-but-got-question-mark"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$bogusCommentState()));
      } else {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-tag-name"));
        _this._addToken$1(new A.CharactersToken(_null, "<"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      }
      return true;
    },
    closeTagOpenState$0() {
      var t2, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isLetter(data)) {
        _this.currentToken = new A.EndTagToken(data, false);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$tagNameState()));
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, string$.expectc));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-closing-tag-but-got-eof"));
        _this._addToken$1(new A.CharactersToken(_null, "</"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t2 = A.LinkedHashMap_LinkedHashMap$_literal(["data", data], type$.String, type$.nullable_Object);
        _this._addToken$1(new A.ParseErrorToken(t2, _null, "expected-closing-tag-but-got-char"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$bogusCommentState()));
      }
      return true;
    },
    tagNameState$0() {
      var t1, _this = this, _null = null,
        data = _this.stream.char$0();
      if (A.isWhitespace(data))
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeNameState()));
      else if (data === ">")
        _this.emitCurrentToken$0();
      else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-tag-name"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data === "/")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$selfClosingStartTagState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        t1 = type$.TagToken._as(_this.currentToken);
        t1.name = A.S(t1.name) + "\ufffd";
      } else {
        t1 = type$.TagToken._as(_this.currentToken);
        t1.name = A.S(t1.name) + data;
      }
      return true;
    },
    rcdataLessThanSignState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "/") {
        _this._tokenizer$_buffer._contents = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rcdataEndTagOpenState()));
      } else {
        _this._addToken$1(new A.CharactersToken(null, "<"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rcdataState()));
      }
      return true;
    },
    rcdataEndTagOpenState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isLetter(data)) {
        _this._tokenizer$_buffer._contents += A.S(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rcdataEndTagNameState()));
      } else {
        _this._addToken$1(new A.CharactersToken(null, "</"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rcdataState()));
      }
      return true;
    },
    _tokenIsAppropriate$0() {
      var t1 = this.currentToken;
      return t1 instanceof A.TagToken && t1.name.toLowerCase() === this._tokenizer$_buffer.toString$0(0).toLowerCase();
    },
    rcdataEndTagNameState$0() {
      var t2, _this = this,
        appropriate = _this._tokenIsAppropriate$0(),
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data) && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeNameState()));
      } else if (data === "/" && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$selfClosingStartTagState()));
      } else if (data === ">" && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.emitCurrentToken$0();
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t2 = _this._tokenizer$_buffer;
        if (A.isLetter(data))
          t2._contents += A.S(data);
        else {
          t2 = t2.toString$0(0);
          _this._addToken$1(new A.CharactersToken(null, "</" + t2));
          t1.unget$1(data);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rcdataState()));
        }
      }
      return true;
    },
    rawtextLessThanSignState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "/") {
        _this._tokenizer$_buffer._contents = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rawtextEndTagOpenState()));
      } else {
        _this._addToken$1(new A.CharactersToken(null, "<"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rawtextState()));
      }
      return true;
    },
    rawtextEndTagOpenState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isLetter(data)) {
        _this._tokenizer$_buffer._contents += A.S(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rawtextEndTagNameState()));
      } else {
        _this._addToken$1(new A.CharactersToken(null, "</"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rawtextState()));
      }
      return true;
    },
    rawtextEndTagNameState$0() {
      var t2, _this = this,
        appropriate = _this._tokenIsAppropriate$0(),
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data) && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeNameState()));
      } else if (data === "/" && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$selfClosingStartTagState()));
      } else if (data === ">" && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.emitCurrentToken$0();
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t2 = _this._tokenizer$_buffer;
        if (A.isLetter(data))
          t2._contents += A.S(data);
        else {
          t2 = t2.toString$0(0);
          _this._addToken$1(new A.CharactersToken(null, "</" + t2));
          t1.unget$1(data);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$rawtextState()));
        }
      }
      return true;
    },
    scriptDataLessThanSignState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "/") {
        _this._tokenizer$_buffer._contents = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEndTagOpenState()));
      } else if (data === "!") {
        _this._addToken$1(new A.CharactersToken(null, "<!"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapeStartState()));
      } else {
        _this._addToken$1(new A.CharactersToken(null, "<"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataState()));
      }
      return true;
    },
    scriptDataEndTagOpenState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isLetter(data)) {
        _this._tokenizer$_buffer._contents += A.S(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEndTagNameState()));
      } else {
        _this._addToken$1(new A.CharactersToken(null, "</"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataState()));
      }
      return true;
    },
    scriptDataEndTagNameState$0() {
      var t2, _this = this,
        appropriate = _this._tokenIsAppropriate$0(),
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data) && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeNameState()));
      } else if (data === "/" && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$selfClosingStartTagState()));
      } else if (data === ">" && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.emitCurrentToken$0();
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t2 = _this._tokenizer$_buffer;
        if (A.isLetter(data))
          t2._contents += A.S(data);
        else {
          t2 = t2.toString$0(0);
          _this._addToken$1(new A.CharactersToken(null, "</" + t2));
          t1.unget$1(data);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataState()));
        }
      }
      return true;
    },
    scriptDataEscapeStartState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "-") {
        _this._addToken$1(new A.CharactersToken(null, "-"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapeStartDashState()));
      } else {
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataState()));
      }
      return true;
    },
    scriptDataEscapeStartDashState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "-") {
        _this._addToken$1(new A.CharactersToken(null, "-"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedDashDashState()));
      } else {
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataState()));
      }
      return true;
    },
    scriptDataEscapedState$0() {
      var chars, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "-") {
        _this._addToken$1(new A.CharactersToken(_null, "-"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedDashState()));
      } else if (data === "<")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedLessThanSignState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\ufffd"));
      } else if (data == null)
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      else {
        chars = t1.charsUntil$1("<-\x00");
        _this._addToken$1(new A.CharactersToken(_null, data + chars));
      }
      return true;
    },
    scriptDataEscapedDashState$0() {
      var _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === "-") {
        _this._addToken$1(new A.CharactersToken(_null, "-"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedDashDashState()));
      } else if (data === "<")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedLessThanSignState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\ufffd"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedState()));
      } else if (data == null)
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      else {
        _this._addToken$1(new A.CharactersToken(_null, data));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedState()));
      }
      return true;
    },
    scriptDataEscapedDashDashState$0() {
      var _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === "-")
        _this._addToken$1(new A.CharactersToken(_null, "-"));
      else if (data === "<")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedLessThanSignState()));
      else if (data === ">") {
        _this._addToken$1(new A.CharactersToken(_null, ">"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataState()));
      } else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\ufffd"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedState()));
      } else if (data == null)
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      else {
        _this._addToken$1(new A.CharactersToken(_null, data));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedState()));
      }
      return true;
    },
    scriptDataEscapedLessThanSignState$0() {
      var t2, _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "/") {
        _this._tokenizer$_buffer._contents = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedEndTagOpenState()));
      } else if (A.isLetter(data)) {
        t1 = A.S(data);
        _this._addToken$1(new A.CharactersToken(null, "<" + t1));
        t2 = _this._tokenizer$_buffer;
        t2._contents = "";
        t2._contents = t1;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapeStartState()));
      } else {
        _this._addToken$1(new A.CharactersToken(null, "<"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedState()));
      }
      return true;
    },
    scriptDataEscapedEndTagOpenState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isLetter(data)) {
        t1 = _this._tokenizer$_buffer;
        t1._contents = "";
        t1._contents = A.S(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedEndTagNameState()));
      } else {
        _this._addToken$1(new A.CharactersToken(null, "</"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedState()));
      }
      return true;
    },
    scriptDataEscapedEndTagNameState$0() {
      var t2, _this = this,
        appropriate = _this._tokenIsAppropriate$0(),
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data) && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeNameState()));
      } else if (data === "/" && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$selfClosingStartTagState()));
      } else if (data === ">" && appropriate) {
        _this.currentToken = new A.EndTagToken(_this._tokenizer$_buffer.toString$0(0), false);
        _this.emitCurrentToken$0();
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t2 = _this._tokenizer$_buffer;
        if (A.isLetter(data))
          t2._contents += A.S(data);
        else {
          t2 = t2.toString$0(0);
          _this._addToken$1(new A.CharactersToken(null, "</" + t2));
          t1.unget$1(data);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedState()));
        }
      }
      return true;
    },
    scriptDataDoubleEscapeStartState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data) || data === "/" || data === ">") {
        _this._addToken$1(new A.CharactersToken(data == null ? new A.StringBuffer("") : null, data));
        t1 = type$.bool_Function;
        if (_this._tokenizer$_buffer.toString$0(0).toLowerCase() === "script")
          _this.set$__HtmlTokenizer_state_A(t1._as(_this.get$scriptDataDoubleEscapedState()));
        else
          _this.set$__HtmlTokenizer_state_A(t1._as(_this.get$scriptDataEscapedState()));
      } else if (A.isLetter(data)) {
        _this._addToken$1(new A.CharactersToken(data == null ? new A.StringBuffer("") : null, data));
        _this._tokenizer$_buffer._contents += A.S(data);
      } else {
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataEscapedState()));
      }
      return true;
    },
    scriptDataDoubleEscapedState$0() {
      var _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === "-") {
        _this._addToken$1(new A.CharactersToken(_null, "-"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedDashState()));
      } else if (data === "<") {
        _this._addToken$1(new A.CharactersToken(_null, "<"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedLessThanSignState()));
      } else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\ufffd"));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-script-in-script"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else
        _this._addToken$1(new A.CharactersToken(_null, data));
      return true;
    },
    scriptDataDoubleEscapedDashState$0() {
      var _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === "-") {
        _this._addToken$1(new A.CharactersToken(_null, "-"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedDashDashState()));
      } else if (data === "<") {
        _this._addToken$1(new A.CharactersToken(_null, "<"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedLessThanSignState()));
      } else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\ufffd"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-script-in-script"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.CharactersToken(_null, data));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedState()));
      }
      return true;
    },
    scriptDataDoubleEscapedDashDashState$0() {
      var _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === "-")
        _this._addToken$1(new A.CharactersToken(_null, "-"));
      else if (data === "<") {
        _this._addToken$1(new A.CharactersToken(_null, "<"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedLessThanSignState()));
      } else if (data === ">") {
        _this._addToken$1(new A.CharactersToken(_null, ">"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataState()));
      } else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._addToken$1(new A.CharactersToken(_null, "\ufffd"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-script-in-script"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.CharactersToken(_null, data));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedState()));
      }
      return true;
    },
    scriptDataDoubleEscapedLessThanSignState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "/") {
        _this._addToken$1(new A.CharactersToken(null, "/"));
        _this._tokenizer$_buffer._contents = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapeEndState()));
      } else {
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedState()));
      }
      return true;
    },
    scriptDataDoubleEscapeEndState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data) || data === "/" || data === ">") {
        _this._addToken$1(new A.CharactersToken(data == null ? new A.StringBuffer("") : null, data));
        t1 = type$.bool_Function;
        if (_this._tokenizer$_buffer.toString$0(0).toLowerCase() === "script")
          _this.set$__HtmlTokenizer_state_A(t1._as(_this.get$scriptDataEscapedState()));
        else
          _this.set$__HtmlTokenizer_state_A(t1._as(_this.get$scriptDataDoubleEscapedState()));
      } else if (A.isLetter(data)) {
        _this._addToken$1(new A.CharactersToken(data == null ? new A.StringBuffer("") : null, data));
        _this._tokenizer$_buffer._contents += A.S(data);
      } else {
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$scriptDataDoubleEscapedState()));
      }
      return true;
    },
    beforeAttributeNameState$0() {
      var _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data))
        t1.charsUntil$2(" \n\r\t\f", true);
      else {
        t1 = data == null;
        if (!t1 && A.isLetter(data)) {
          _this._addAttribute$1(data);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeNameState()));
        } else if (data === ">")
          _this.emitCurrentToken$0();
        else if (data === "/")
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$selfClosingStartTagState()));
        else if (t1) {
          _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-attribute-name-but-got-eof"));
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
        } else if (B.JSString_methods.contains$1("'\"=<", data)) {
          _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-character-in-attribute-name"));
          _this._addAttribute$1(data);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeNameState()));
        } else if (data === "\x00") {
          _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
          _this._addAttribute$1("\ufffd");
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeNameState()));
        } else {
          _this._addAttribute$1(data);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeNameState()));
        }
      }
      return true;
    },
    attributeNameState$0() {
      var leavingThisState, emitToken, t2, attrName, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "=") {
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeValueState()));
        leavingThisState = true;
        emitToken = false;
      } else if (A.isLetter(data)) {
        t2 = _this._attributeName;
        t2._contents += A.S(data);
        t2._contents += t1.charsUntil$2("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", true);
        leavingThisState = false;
        emitToken = false;
      } else if (data === ">") {
        leavingThisState = true;
        emitToken = true;
      } else {
        if (A.isWhitespace(data)) {
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$afterAttributeNameState()));
          leavingThisState = true;
        } else if (data === "/") {
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$selfClosingStartTagState()));
          leavingThisState = true;
        } else if (data === "\x00") {
          _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
          _this._attributeName._contents += "\ufffd";
          leavingThisState = false;
        } else if (data == null) {
          _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-attribute-name"));
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
          leavingThisState = true;
        } else {
          if (B.JSString_methods.contains$1("'\"<", data)) {
            _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-character-in-attribute-name"));
            _this._attributeName._contents += data;
          } else
            _this._attributeName._contents += data;
          leavingThisState = false;
        }
        emitToken = false;
      }
      if (leavingThisState) {
        _this._markAttributeEnd$1(-1);
        t1 = _this._attributeName._contents;
        t2 = type$.CodeUnits;
        attrName = A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t1.charCodeAt(0) == 0 ? t1 : t1), t2._eval$1("int(ListBase.E)")._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t2._eval$1("MappedListIterable<ListBase.E,int>")), 0, _null);
        t1 = _this._attributes;
        t1.toString;
        B.JSArray_methods.get$last(t1).name = attrName;
        if (_this._attributeNames == null)
          _this.set$_attributeNames(A.LinkedHashSet_LinkedHashSet$_empty(type$.String));
        if (_this._attributeNames.contains$1(0, attrName))
          _this._addToken$1(new A.ParseErrorToken(_null, _null, "duplicate-attribute"));
        _this._attributeNames.add$1(0, attrName);
        if (emitToken)
          _this.emitCurrentToken$0();
      }
      return true;
    },
    afterAttributeNameState$0() {
      var _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data))
        t1.charsUntil$2(" \n\r\t\f", true);
      else if (data === "=")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeValueState()));
      else if (data === ">")
        _this.emitCurrentToken$0();
      else {
        t1 = data == null;
        if (!t1 && A.isLetter(data)) {
          _this._addAttribute$1(data);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeNameState()));
        } else if (data === "/")
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$selfClosingStartTagState()));
        else if (data === "\x00") {
          _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
          _this._addAttribute$1("\ufffd");
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeNameState()));
        } else if (t1) {
          _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-end-of-tag-but-got-eof"));
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
        } else if (B.JSString_methods.contains$1("'\"<", data)) {
          _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-character-after-attribute-name"));
          _this._addAttribute$1(data);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeNameState()));
        } else {
          _this._addAttribute$1(data);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeNameState()));
        }
      }
      return true;
    },
    beforeAttributeValueState$0() {
      var _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data))
        t1.charsUntil$2(" \n\r\t\f", true);
      else if (data === '"') {
        _this._markAttributeValueStart$1(0);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeValueDoubleQuotedState()));
      } else if (data === "&") {
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeValueUnQuotedState()));
        t1.unget$1(data);
        _this._markAttributeValueStart$1(0);
      } else if (data === "'") {
        _this._markAttributeValueStart$1(0);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeValueSingleQuotedState()));
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, string$.expecta));
        _this.emitCurrentToken$0();
      } else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._markAttributeValueStart$1(-1);
        _this._attributeValue._contents += "\ufffd";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeValueUnQuotedState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-attribute-value-but-got-eof"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (B.JSString_methods.contains$1("=<`", data)) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "equals-in-unquoted-attribute-value"));
        _this._markAttributeValueStart$1(-1);
        _this._attributeValue._contents += data;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeValueUnQuotedState()));
      } else {
        _this._markAttributeValueStart$1(-1);
        _this._attributeValue._contents += data;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$attributeValueUnQuotedState()));
      }
      return true;
    },
    attributeValueDoubleQuotedState$0() {
      var t2, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === '"') {
        _this._markAttributeValueEnd$1(-1);
        _this._markAttributeEnd$1(0);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$afterAttributeValueState()));
      } else if (data === "&")
        _this.consumeEntity$2$allowedChar$fromAttribute('"', true);
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._attributeValue._contents += "\ufffd";
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-attribute-value-double-quote"));
        _this._markAttributeValueEnd$1(-1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t2 = _this._attributeValue;
        t2._contents += data;
        t2._contents += t1.charsUntil$1('"&');
      }
      return true;
    },
    attributeValueSingleQuotedState$0() {
      var t2, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "'") {
        _this._markAttributeValueEnd$1(-1);
        _this._markAttributeEnd$1(0);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$afterAttributeValueState()));
      } else if (data === "&")
        _this.consumeEntity$2$allowedChar$fromAttribute("'", true);
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._attributeValue._contents += "\ufffd";
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-attribute-value-single-quote"));
        _this._markAttributeValueEnd$1(-1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t2 = _this._attributeValue;
        t2._contents += data;
        t2._contents += t1.charsUntil$1("'&");
      }
      return true;
    },
    attributeValueUnQuotedState$0() {
      var t2, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data)) {
        _this._markAttributeValueEnd$1(-1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeNameState()));
      } else if (data === "&")
        _this.consumeEntity$2$allowedChar$fromAttribute(">", true);
      else if (data === ">") {
        _this._markAttributeValueEnd$1(-1);
        _this.emitCurrentToken$0();
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-attribute-value-no-quotes"));
        _this._markAttributeValueEnd$1(-1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (B.JSString_methods.contains$1("\"'=<`", data)) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, string$.unexpeci));
        _this._attributeValue._contents += data;
      } else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        _this._attributeValue._contents += "\ufffd";
      } else {
        t2 = _this._attributeValue;
        t2._contents += data;
        t2._contents += t1.charsUntil$1("&>\"'=<` \n\r\t\f");
      }
      return true;
    },
    afterAttributeValueState$0() {
      var _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data))
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeNameState()));
      else if (data === ">")
        _this.emitCurrentToken$0();
      else if (data === "/")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$selfClosingStartTagState()));
      else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-EOF-after-attribute-value"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, string$.unexpecaa));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeNameState()));
      }
      return true;
    },
    selfClosingStartTagState$0() {
      var _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === ">") {
        type$.TagToken._as(_this.currentToken).selfClosing = true;
        _this.emitCurrentToken$0();
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-EOF-after-solidus-in-tag"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, string$.unexpecas));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeAttributeNameState()));
      }
      return true;
    },
    bogusCommentState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.charsUntil$1(">");
      data = A.stringReplaceAllUnchecked(data, "\x00", "\ufffd");
      _this._addToken$1(new A.CommentToken(null, data));
      t1.char$0();
      _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      return true;
    },
    markupDeclarationOpenState$0() {
      var matched, _i, expected, char, t2, _this = this, _null = null,
        t1 = _this.stream,
        charStack = A._setArrayType([t1.char$0()], type$.JSArray_nullable_String);
      if (B.JSArray_methods.get$last(charStack) === "-") {
        B.JSArray_methods.add$1(charStack, t1.char$0());
        if (B.JSArray_methods.get$last(charStack) === "-") {
          _this.currentToken = new A.CommentToken(new A.StringBuffer(""), _null);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentStartState()));
          return true;
        }
      } else if (B.JSArray_methods.get$last(charStack) === "d" || B.JSArray_methods.get$last(charStack) === "D") {
        _i = 0;
        while (true) {
          if (!(_i < 6)) {
            matched = true;
            break;
          }
          expected = B.List_knt[_i];
          char = t1.char$0();
          B.JSArray_methods.add$1(charStack, char);
          if (char != null)
            t2 = !A.stringContainsUnchecked(expected, char, 0);
          else
            t2 = true;
          if (t2) {
            matched = false;
            break;
          }
          ++_i;
        }
        if (matched) {
          _this.currentToken = new A.DoctypeToken(true);
          _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypeState()));
          return true;
        }
      } else {
        if (B.JSArray_methods.get$last(charStack) === "[") {
          t2 = _this.parser;
          if (t2 != null) {
            t2 = t2.tree.openElements;
            t2 = t2.length !== 0 && B.JSArray_methods.get$last(t2).namespaceUri != _this.parser.tree.defaultNamespace;
          } else
            t2 = false;
        } else
          t2 = false;
        if (t2) {
          _i = 0;
          while (true) {
            if (!(_i < 6)) {
              matched = true;
              break;
            }
            expected = B.List_lKo[_i];
            B.JSArray_methods.add$1(charStack, t1.char$0());
            if (B.JSArray_methods.get$last(charStack) !== expected) {
              matched = false;
              break;
            }
            ++_i;
          }
          if (matched) {
            _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$cdataSectionState()));
            return true;
          }
        }
      }
      _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-dashes-or-doctype"));
      for (; t2 = charStack.length, t2 !== 0;) {
        if (0 >= t2)
          return A.ioore(charStack, -1);
        t2 = charStack.pop();
        if (t2 != null)
          t1._html_input_stream$_offset = t1._html_input_stream$_offset - t2.length;
      }
      _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$bogusCommentState()));
      return true;
    },
    commentStartState$0() {
      var t1, _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === "-")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentStartDashState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        type$.StringToken._as(_this.currentToken)._buffer._contents += "\ufffd";
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "incorrect-comment"));
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-comment"));
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        type$.StringToken._as(_this.currentToken)._buffer._contents += data;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentState()));
      }
      return true;
    },
    commentStartDashState$0() {
      var t1, t2, _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === "-")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentEndState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        type$.StringToken._as(_this.currentToken)._buffer._contents += "-\ufffd";
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "incorrect-comment"));
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-comment"));
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t1 = type$.StringToken._as(_this.currentToken)._buffer;
        t2 = t1._contents += "-";
        t1._contents = t2 + data;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentState()));
      }
      return true;
    },
    commentState$0() {
      var t2, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === "-")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentEndDashState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        type$.StringToken._as(_this.currentToken)._buffer._contents += "\ufffd";
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-comment"));
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t2 = type$.StringToken._as(_this.currentToken);
        t2._buffer._contents += data;
        t1 = t1.charsUntil$1("-\x00");
        t2._buffer._contents += t1;
      }
      return true;
    },
    commentEndDashState$0() {
      var t1, t2, _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === "-")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentEndState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        type$.StringToken._as(_this.currentToken)._buffer._contents += "-\ufffd";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-comment-end-dash"));
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t1 = type$.StringToken._as(_this.currentToken)._buffer;
        t2 = t1._contents += "-";
        t1._contents = t2 + data;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentState()));
      }
      return true;
    },
    commentEndState$0() {
      var t1, t2, _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === ">") {
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        type$.StringToken._as(_this.currentToken)._buffer._contents += "--\ufffd";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentState()));
      } else if (data === "!") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, string$.unexpeb));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentEndBangState()));
      } else if (data === "-") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, string$.unexped));
        t1 = type$.StringToken._as(_this.currentToken);
        data.toString;
        t1._buffer._contents += data;
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-comment-double-dash"));
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-char-in-comment"));
        t1 = type$.StringToken._as(_this.currentToken)._buffer;
        t2 = t1._contents += "--";
        t1._contents = t2 + data;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentState()));
      }
      return true;
    },
    commentEndBangState$0() {
      var t1, t2, _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === ">") {
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data === "-") {
        type$.StringToken._as(_this.currentToken)._buffer._contents += "--!";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentEndDashState()));
      } else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        type$.StringToken._as(_this.currentToken)._buffer._contents += "--!\ufffd";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-comment-end-bang-state"));
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t1 = type$.StringToken._as(_this.currentToken)._buffer;
        t2 = t1._contents += "--!";
        t1._contents = t2 + data;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$commentState()));
      }
      return true;
    },
    doctypeState$0() {
      var _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data))
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeDoctypeNameState()));
      else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-doctype-name-but-got-eof"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "need-space-after-doctype"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeDoctypeNameState()));
      }
      return true;
    },
    beforeDoctypeNameState$0() {
      var t1, _this = this, _null = null,
        data = _this.stream.char$0();
      if (A.isWhitespace(data))
        return true;
      else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, string$.expectd));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        type$.DoctypeToken._as(_this.currentToken).name = "\ufffd";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypeNameState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "expected-doctype-name-but-got-eof"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        type$.DoctypeToken._as(_this.currentToken).name = data;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypeNameState()));
      }
      return true;
    },
    doctypeNameState$0() {
      var t1, t2, t3, _this = this, _null = null,
        data = _this.stream.char$0();
      if (A.isWhitespace(data)) {
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t2 = t1.name;
        if (t2 == null)
          t2 = _null;
        else {
          t3 = type$.CodeUnits;
          t3 = A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t2), t3._eval$1("int(ListBase.E)")._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t3._eval$1("MappedListIterable<ListBase.E,int>")), 0, _null);
          t2 = t3;
        }
        t1.name = t2;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$afterDoctypeNameState()));
      } else if (data === ">") {
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t2 = t1.name;
        if (t2 == null)
          t2 = _null;
        else {
          t3 = type$.CodeUnits;
          t3 = A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t2), t3._eval$1("int(ListBase.E)")._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t3._eval$1("MappedListIterable<ListBase.E,int>")), 0, _null);
          t2 = t3;
        }
        t1.name = t2;
        t2 = _this.currentToken;
        t2.toString;
        _this._addToken$1(t2);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.name = A.S(t1.name) + "\ufffd";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypeNameState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype-name"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        t2 = t1.name;
        if (t2 == null)
          t2 = _null;
        else {
          t3 = type$.CodeUnits;
          t3 = A.String_String$fromCharCodes(new A.MappedListIterable(new A.CodeUnits(t2), t3._eval$1("int(ListBase.E)")._as(A.constants__AsciiUpperToLower__asciiToLower$closure()), t3._eval$1("MappedListIterable<ListBase.E,int>")), 0, _null);
          t2 = t3;
        }
        t1.name = t2;
        t2 = _this.currentToken;
        t2.toString;
        _this._addToken$1(t2);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.name = A.S(t1.name) + data;
      }
      return true;
    },
    afterDoctypeNameState$0() {
      var matched, _i, expected, t2, _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data))
        return true;
      else if (data === ">") {
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        type$.DoctypeToken._as(_this.currentToken).correct = false;
        t1.unget$1(data);
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        if (data === "p" || data === "P") {
          _i = 0;
          while (true) {
            if (!(_i < 5)) {
              matched = true;
              break;
            }
            expected = B.List_IJC[_i];
            data = t1.char$0();
            if (data != null)
              t2 = !A.stringContainsUnchecked(expected, data, 0);
            else
              t2 = true;
            if (t2) {
              matched = false;
              break;
            }
            ++_i;
          }
          if (matched) {
            _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$afterDoctypePublicKeywordState()));
            return true;
          }
        } else if (data === "s" || data === "S") {
          _i = 0;
          while (true) {
            if (!(_i < 5)) {
              matched = true;
              break;
            }
            expected = B.List_yCx[_i];
            data = t1.char$0();
            if (data != null)
              t2 = !A.stringContainsUnchecked(expected, data, 0);
            else
              t2 = true;
            if (t2) {
              matched = false;
              break;
            }
            ++_i;
          }
          if (matched) {
            _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$afterDoctypeSystemKeywordState()));
            return true;
          }
        }
        t1.unget$1(data);
        t1 = A.LinkedHashMap_LinkedHashMap$_literal(["data", data], type$.String, type$.nullable_Object);
        _this._addToken$1(new A.ParseErrorToken(t1, _null, string$.expects));
        type$.DoctypeToken._as(_this.currentToken).correct = false;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$bogusDoctypeState()));
      }
      return true;
    },
    afterDoctypePublicKeywordState$0() {
      var _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data))
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeDoctypePublicIdentifierState()));
      else if (data === "'" || data === '"') {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-char-in-doctype"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeDoctypePublicIdentifierState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeDoctypePublicIdentifierState()));
      }
      return true;
    },
    beforeDoctypePublicIdentifierState$0() {
      var t1, _this = this, _null = null,
        data = _this.stream.char$0();
      if (A.isWhitespace(data))
        return true;
      else if (data === '"') {
        type$.DoctypeToken._as(_this.currentToken).publicId = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypePublicIdentifierDoubleQuotedState()));
      } else if (data === "'") {
        type$.DoctypeToken._as(_this.currentToken).publicId = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypePublicIdentifierSingleQuotedState()));
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-end-of-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-char-in-doctype"));
        type$.DoctypeToken._as(_this.currentToken).correct = false;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$bogusDoctypeState()));
      }
      return true;
    },
    doctypePublicIdentifierDoubleQuotedState$0() {
      var t1, _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === '"')
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$afterDoctypePublicIdentifierState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.publicId = A.S(t1.publicId) + "\ufffd";
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-end-of-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.publicId = A.S(t1.publicId) + data;
      }
      return true;
    },
    doctypePublicIdentifierSingleQuotedState$0() {
      var t1, _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === "'")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$afterDoctypePublicIdentifierState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.publicId = A.S(t1.publicId) + "\ufffd";
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-end-of-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.publicId = A.S(t1.publicId) + data;
      }
      return true;
    },
    afterDoctypePublicIdentifierState$0() {
      var t1, _this = this, _null = null,
        _s26_ = "unexpected-char-in-doctype",
        data = _this.stream.char$0();
      if (A.isWhitespace(data))
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$betweenDoctypePublicAndSystemIdentifiersState()));
      else if (data === ">") {
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data === '"') {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, _s26_));
        type$.DoctypeToken._as(_this.currentToken).systemId = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypeSystemIdentifierDoubleQuotedState()));
      } else if (data === "'") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, _s26_));
        type$.DoctypeToken._as(_this.currentToken).systemId = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypeSystemIdentifierSingleQuotedState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, _s26_));
        type$.DoctypeToken._as(_this.currentToken).correct = false;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$bogusDoctypeState()));
      }
      return true;
    },
    betweenDoctypePublicAndSystemIdentifiersState$0() {
      var t1, _this = this, _null = null,
        data = _this.stream.char$0();
      if (A.isWhitespace(data))
        return true;
      else if (data === ">") {
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data === '"') {
        type$.DoctypeToken._as(_this.currentToken).systemId = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypeSystemIdentifierDoubleQuotedState()));
      } else if (data === "'") {
        type$.DoctypeToken._as(_this.currentToken).systemId = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypeSystemIdentifierSingleQuotedState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-char-in-doctype"));
        type$.DoctypeToken._as(_this.currentToken).correct = false;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$bogusDoctypeState()));
      }
      return true;
    },
    afterDoctypeSystemKeywordState$0() {
      var _this = this, _null = null,
        t1 = _this.stream,
        data = t1.char$0();
      if (A.isWhitespace(data))
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeDoctypeSystemIdentifierState()));
      else if (data === "'" || data === '"') {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-char-in-doctype"));
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeDoctypeSystemIdentifierState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t1.unget$1(data);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$beforeDoctypeSystemIdentifierState()));
      }
      return true;
    },
    beforeDoctypeSystemIdentifierState$0() {
      var t1, _this = this, _null = null,
        _s26_ = "unexpected-char-in-doctype",
        data = _this.stream.char$0();
      if (A.isWhitespace(data))
        return true;
      else if (data === '"') {
        type$.DoctypeToken._as(_this.currentToken).systemId = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypeSystemIdentifierDoubleQuotedState()));
      } else if (data === "'") {
        type$.DoctypeToken._as(_this.currentToken).systemId = "";
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$doctypeSystemIdentifierSingleQuotedState()));
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, _s26_));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, _s26_));
        type$.DoctypeToken._as(_this.currentToken).correct = false;
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$bogusDoctypeState()));
      }
      return true;
    },
    doctypeSystemIdentifierDoubleQuotedState$0() {
      var t1, _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === '"')
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$afterDoctypeSystemIdentifierState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.systemId = A.S(t1.systemId) + "\ufffd";
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-end-of-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.systemId = A.S(t1.systemId) + data;
      }
      return true;
    },
    doctypeSystemIdentifierSingleQuotedState$0() {
      var t1, _this = this, _null = null,
        data = _this.stream.char$0();
      if (data === "'")
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$afterDoctypeSystemIdentifierState()));
      else if (data === "\x00") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "invalid-codepoint"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.systemId = A.S(t1.systemId) + "\ufffd";
      } else if (data === ">") {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-end-of-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.systemId = A.S(t1.systemId) + data;
      }
      return true;
    },
    afterDoctypeSystemIdentifierState$0() {
      var t1, _this = this, _null = null,
        data = _this.stream.char$0();
      if (A.isWhitespace(data))
        return true;
      else if (data === ">") {
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "eof-in-doctype"));
        t1 = type$.DoctypeToken._as(_this.currentToken);
        t1.correct = false;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else {
        _this._addToken$1(new A.ParseErrorToken(_null, _null, "unexpected-char-in-doctype"));
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$bogusDoctypeState()));
      }
      return true;
    },
    bogusDoctypeState$0() {
      var _this = this,
        t1 = _this.stream,
        data = t1.char$0();
      if (data === ">") {
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      } else if (data == null) {
        t1.unget$1(data);
        t1 = _this.currentToken;
        t1.toString;
        _this._addToken$1(t1);
        _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      }
      return true;
    },
    cdataSectionState$0() {
      var t1, matchedEnd, ch, _this = this,
        data = A._setArrayType([], type$.JSArray_String);
      for (t1 = _this.stream, matchedEnd = 0; true;) {
        ch = t1.char$0();
        if (ch == null)
          break;
        if (ch === "\x00") {
          _this._addToken$1(new A.ParseErrorToken(null, null, "invalid-codepoint"));
          ch = "\ufffd";
        }
        B.JSArray_methods.add$1(data, ch);
        if (ch === "]" && matchedEnd < 2)
          ++matchedEnd;
        else {
          if (ch === ">" && matchedEnd === 2) {
            if (0 >= data.length)
              return A.ioore(data, -1);
            data.pop();
            if (0 >= data.length)
              return A.ioore(data, -1);
            data.pop();
            if (0 >= data.length)
              return A.ioore(data, -1);
            data.pop();
            break;
          }
          matchedEnd = 0;
        }
      }
      if (data.length !== 0) {
        t1 = B.JSArray_methods.join$0(data);
        _this._addToken$1(new A.CharactersToken(null, t1));
      }
      _this.set$__HtmlTokenizer_state_A(type$.bool_Function._as(_this.get$dataState()));
      return true;
    },
    set$__HtmlTokenizer_state_A(__HtmlTokenizer_state_A) {
      this.__HtmlTokenizer_state_A = type$.bool_Function._as(__HtmlTokenizer_state_A);
    },
    set$_attributes(_, _attributes) {
      this._attributes = type$.nullable_List_TagAttribute._as(_attributes);
    },
    set$_attributeNames(_attributeNames) {
      this._attributeNames = type$.nullable_Set_String._as(_attributeNames);
    },
    set$_tokenizer$_current(_current) {
      this._tokenizer$_current = type$.nullable_Token._as(_current);
    },
    $isIterator: 1,
    state$0($receiver) {
      return this.get$state(this).call$0();
    }
  };
  A.HtmlTokenizer_consumeEntity_closure.prototype = {
    call$1(e) {
      return B.JSString_methods.startsWith$1(A._asString(e), this.name);
    },
    $signature: 3
  };
  A.HtmlTokenizer_emitCurrentToken_closure.prototype = {
    call$0() {
      var t1 = this.attr.__TagAttribute_value_A;
      t1 === $ && A.throwLateFieldNI("value");
      return t1;
    },
    $signature: 13
  };
  A.ActiveFormattingElements.prototype = {
    add$1(_, node) {
      var t1, t2, t3, ns, equalCount, t4, ns0, t5, ns1, _this = this,
        _s28_ = "http://www.w3.org/1999/xhtml";
      type$.nullable_Element._as(node);
      if (node != null)
        for (t1 = A._instanceType(_this)._eval$1("ReversedListIterable<ListBase.E>"), t2 = new A.ReversedListIterable(_this, t1), t2 = new A.ListIterator(t2, t2.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t3 = node.localName, ns = node.namespaceUri, t1 = t1._eval$1("ListIterable.E"), equalCount = 0; t2.moveNext$0();) {
          t4 = t2.__internal$_current;
          if (t4 == null)
            t4 = t1._as(t4);
          if (t4 == null)
            break;
          ns0 = t4.namespaceUri;
          if (ns0 == null)
            ns0 = _s28_;
          t5 = t4.localName;
          ns1 = ns == null ? _s28_ : ns;
          if (ns1 === ns0 && t3 == t5 && A._mapEquals(t4.attributes, node.attributes))
            ++equalCount;
          if (equalCount === 3) {
            B.JSArray_methods.remove$1(_this._list_proxy$_list, t4);
            break;
          }
        }
      _this.super$ListProxy$add(0, node);
    }
  };
  A.TreeBuilder.prototype = {
    reset$0(_) {
      var _this = this;
      B.JSArray_methods.clear$0(_this.openElements);
      _this.activeFormattingElements.set$length(0, 0);
      _this.formPointer = _this.headPointer = null;
      _this.insertFromTable = false;
      _this.__TreeBuilder_document_A = A.Document$();
    },
    elementInScope$2$variant(target, variant) {
      var listElements1, listElements2, invert, t1, t2, t3, t4, t5, t6, ns, ns0,
        _s32_ = "We should never reach this point",
        _s28_ = "http://www.w3.org/1999/xhtml",
        exactNode = target instanceof A.Node;
      if (variant != null)
        switch (variant) {
          case "button":
            listElements1 = B.List_4e2;
            listElements2 = B.List_6d3;
            invert = false;
            break;
          case "list":
            listElements1 = B.List_4e2;
            listElements2 = B.List_jtQ;
            invert = false;
            break;
          case "table":
            listElements1 = B.List_uvG;
            listElements2 = B.List_empty0;
            invert = false;
            break;
          case "select":
            listElements1 = B.List_SxB;
            listElements2 = B.List_empty0;
            invert = true;
            break;
          default:
            throw A.wrapException(A.StateError$(_s32_));
        }
      else {
        listElements1 = B.List_4e2;
        listElements2 = B.List_empty0;
        invert = false;
      }
      for (t1 = this.openElements, t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"), t1 = new A.ReversedListIterable(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t3 = type$.Pair_of_String_and_nullable_String, t4 = !exactNode, t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t5 = t1.__internal$_current;
        if (t5 == null)
          t5 = t2._as(t5);
        if (t4) {
          t6 = t5.localName;
          t6 = t6 == null ? target == null : t6 === target;
        } else
          t6 = false;
        if (!t6)
          t6 = exactNode && t5 === target;
        else
          t6 = true;
        if (t6)
          return true;
        else {
          ns = t5.namespaceUri;
          t6 = ns == null;
          ns0 = t6 ? _s28_ : ns;
          t5 = t5.localName;
          if (!B.JSArray_methods.contains$1(listElements1, new A.Pair(ns0, t5, t3)))
            t5 = B.JSArray_methods.contains$1(listElements2, new A.Pair(t6 ? _s28_ : ns, t5, t3));
          else
            t5 = true;
          if (invert !== t5)
            return false;
        }
      }
      throw A.wrapException(A.StateError$(_s32_));
    },
    elementInScope$1(target) {
      return this.elementInScope$2$variant(target, null);
    },
    reconstructActiveFormattingElements$0() {
      var t2, t3, i, entry, t4, t5, t6, t7, t8, cloneToken, element, _this = this,
        t1 = _this.activeFormattingElements;
      if (t1.get$length(0) === 0)
        return;
      t2 = t1._list_proxy$_list;
      t3 = t2.length;
      i = t3 - 1;
      if (!(i >= 0))
        return A.ioore(t2, i);
      entry = t2[i];
      if (entry == null || B.JSArray_methods.contains$1(_this.openElements, entry))
        return;
      t3 = _this.openElements;
      while (true) {
        if (!(entry != null && !B.JSArray_methods.contains$1(t3, entry)))
          break;
        if (i === 0) {
          i = -1;
          break;
        }
        --i;
        if (!(i >= 0 && i < t2.length))
          return A.ioore(t2, i);
        entry = t2[i];
      }
      for (t3 = A._instanceType(t1)._eval$1("ListProxy.E"), t4 = type$.Object, t5 = type$.String; true;) {
        ++i;
        if (!(i >= 0 && i < t2.length))
          return A.ioore(t2, i);
        entry = t2[i];
        t6 = entry.localName;
        t7 = entry.namespaceUri;
        t8 = A.LinkedHashMap_LinkedHashMap$from(entry.attributes, t4, t5);
        cloneToken = new A.StartTagToken(t8, t7, t6, false);
        cloneToken.span = entry.sourceSpan;
        element = _this.insertElement$1(cloneToken);
        B.JSArray_methods.$indexSet(t2, i, t3._as(element));
        if (t1.get$length(0) === 0)
          A.throwExpression(A.IterableElementError_noElement());
        if (element === t1.$index(0, t1.get$length(0) - 1))
          break;
      }
    },
    clearActiveFormattingElements$0() {
      var t1 = this.activeFormattingElements,
        entry = t1.removeLast$0(t1);
      while (true) {
        if (!(!t1.get$isEmpty(t1) && entry != null))
          break;
        entry = t1.removeLast$0(t1);
      }
    },
    elementInActiveFormattingElements$1($name) {
      var t1, t2, t3;
      for (t1 = this.activeFormattingElements, t2 = A._instanceType(t1)._eval$1("ReversedListIterable<ListBase.E>"), t1 = new A.ReversedListIterable(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 == null)
          break;
        else if (t3.localName == $name)
          return t3;
      }
      return null;
    },
    insertComment$2(token, $parent) {
      var t1 = $parent.get$nodes(0),
        t2 = A.Comment$(token.get$data(0));
      t2.sourceSpan = token.span;
      t1.add$1(0, t2);
    },
    createElement$1(_, token) {
      var element,
        $name = token.name,
        namespace = token.namespace;
      if (namespace == null)
        namespace = this.defaultNamespace;
      this.__TreeBuilder_document_A === $ && A.throwLateFieldNI("document");
      element = A.Element$_($name, namespace === "" ? null : namespace);
      element.set$attributes(0, token.data);
      element.sourceSpan = token.span;
      return element;
    },
    insertElement$1(token) {
      if (this.insertFromTable)
        return this.insertElementTable$1(token);
      return this.insertElementNormal$1(token);
    },
    insertElementNormal$1(token) {
      var element, t1,
        $name = token.name,
        namespace = token.namespace;
      if (namespace == null)
        namespace = this.defaultNamespace;
      this.__TreeBuilder_document_A === $ && A.throwLateFieldNI("document");
      element = A.Element$_($name, namespace === "" ? null : namespace);
      element.set$attributes(0, token.data);
      element.sourceSpan = token.span;
      t1 = this.openElements;
      J.get$nodes$x(B.JSArray_methods.get$last(t1)).add$1(0, element);
      B.JSArray_methods.add$1(t1, element);
      return element;
    },
    insertElementTable$1(token) {
      var nodePos, t2, _this = this,
        element = _this.createElement$1(0, token),
        t1 = _this.openElements;
      if (!B.JSArray_methods.contains$1(B.List_kYS, B.JSArray_methods.get$last(t1).localName))
        return _this.insertElementNormal$1(token);
      else {
        nodePos = _this.getTableMisnestedNodePosition$0();
        t2 = nodePos[1];
        if (t2 == null)
          nodePos[0].get$nodes(0).add$1(0, element);
        else
          nodePos[0].insertBefore$2(0, element, t2);
        B.JSArray_methods.add$1(t1, element);
      }
      return element;
    },
    insertText$2(data, span) {
      var nodePos,
        t1 = this.openElements,
        $parent = B.JSArray_methods.get$last(t1);
      if (this.insertFromTable)
        t1 = !B.JSArray_methods.contains$1(B.List_kYS, B.JSArray_methods.get$last(t1).localName);
      else
        t1 = true;
      if (t1)
        A.TreeBuilder__insertText($parent, data, span, null);
      else {
        nodePos = this.getTableMisnestedNodePosition$0();
        t1 = nodePos[0];
        t1.toString;
        A.TreeBuilder__insertText(t1, data, span, type$.nullable_Element._as(nodePos[1]));
      }
    },
    getTableMisnestedNodePosition$0() {
      var lastTable, t4, fosterParent, insertBefore,
        t1 = this.openElements,
        t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"),
        t3 = new A.ReversedListIterable(t1, t2);
      t3 = new A.ListIterator(t3, t3.get$length(0), t2._eval$1("ListIterator<ListIterable.E>"));
      t2 = t2._eval$1("ListIterable.E");
      while (true) {
        if (!t3.moveNext$0()) {
          lastTable = null;
          break;
        }
        t4 = t3.__internal$_current;
        lastTable = t4 == null ? t2._as(t4) : t4;
        if (lastTable.localName === "table")
          break;
      }
      if (lastTable != null) {
        fosterParent = lastTable.parentNode;
        if (fosterParent != null)
          insertBefore = lastTable;
        else {
          t2 = B.JSArray_methods.indexOf$1(t1, lastTable) - 1;
          if (!(t2 >= 0 && t2 < t1.length))
            return A.ioore(t1, t2);
          fosterParent = t1[t2];
          insertBefore = null;
        }
      } else {
        if (0 >= t1.length)
          return A.ioore(t1, 0);
        fosterParent = t1[0];
        insertBefore = null;
      }
      return A._setArrayType([fosterParent, insertBefore], type$.JSArray_nullable_Node);
    },
    generateImpliedEndTags$1(exclude) {
      var t1 = this.openElements,
        $name = B.JSArray_methods.get$last(t1).localName;
      if ($name != exclude && B.JSArray_methods.contains$1(B.List_qBb, $name)) {
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        this.generateImpliedEndTags$1(exclude);
      }
    },
    generateImpliedEndTags$0() {
      return this.generateImpliedEndTags$1(null);
    },
    set$headPointer(headPointer) {
      this.headPointer = type$.nullable_Node._as(headPointer);
    },
    set$formPointer(formPointer) {
      this.formPointer = type$.nullable_Element._as(formPointer);
    }
  };
  A.Pair.prototype = {
    get$hashCode(_) {
      return 37 * J.get$hashCode$(this.first) + J.get$hashCode$(this.second);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Pair && other.first == this.first && other.second == this.second;
    }
  };
  A.formatStr_closure.prototype = {
    call$2(key, value) {
      var t1, t2, t3, last, t4, t5, match, digits, numberSize,
        result = new A.StringBuffer(""),
        search = "%(" + A._asString(key) + ")";
      for (t1 = this._box_0, t2 = search.length, t3 = J.getInterceptor$(value), last = 0, t4 = ""; t5 = t1.format, match = B.JSString_methods.indexOf$2(t5, search, last), match >= 0;) {
        result._contents = t4 + B.JSString_methods.substring$2(t5, last, match);
        match += t2;
        digits = match;
        while (true) {
          t4 = t1.format;
          if (!(digits < t4.length))
            return A.ioore(t4, digits);
          if (!A.isDigit(t4[digits]))
            break;
          ++digits;
        }
        if (digits > match) {
          numberSize = A.int_parse(B.JSString_methods.substring$2(t1.format, match, digits), null);
          match = digits;
        } else
          numberSize = 0;
        t4 = t1.format;
        if (!(match < t4.length))
          return A.ioore(t4, match);
        t4 = t4[match];
        switch (t4) {
          case "s":
            t4 = result._contents += A.S(value);
            break;
          case "d":
            t4 = result._contents += A.padWithZeros(t3.toString$0(value), numberSize);
            break;
          case "x":
            t4 = result._contents += A.padWithZeros(B.JSInt_methods.toRadixString$1(A._asInt(value), 16), numberSize);
            break;
          default:
            throw A.wrapException(A.UnsupportedError$("formatStr does not support format character " + t4));
        }
        last = match + 1;
      }
      t2 = result._contents = t4 + B.JSString_methods.substring$2(t5, last, t5.length);
      t1.format = t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    $signature: 88
  };
  A.BrowserAppBinding.prototype = {
    scheduleFrame$1(frameCallback) {
      var t1, t2;
      type$.void_Function._as(frameCallback);
      t1 = window;
      t1.toString;
      t2 = type$.void_Function_num._as(new A.BrowserAppBinding_scheduleFrame_closure(frameCallback));
      B.Window_methods._ensureRequestAnimationFrame$0(t1);
      t2 = A._wrapZone(t2, type$.num);
      t2.toString;
      B.Window_methods._requestAnimationFrame$1(t1, t2);
    }
  };
  A.BrowserAppBinding_scheduleFrame_closure.prototype = {
    call$1(highResTime) {
      A._asNum(highResTime);
      this.frameCallback.call$0();
    },
    $signature: 35
  };
  A._BrowserAppBinding_AppBinding_ComponentsBinding.prototype = {};
  A.DomRenderObject.prototype = {
    clearEvents$0() {
      var t1 = this.events;
      if (t1 != null)
        t1.forEach$1(0, new A.DomRenderObject_clearEvents_closure());
      this.set$events(null);
    },
    createChildRenderObject$0() {
      var t1 = new A.DomRenderObject(A._setArrayType([], type$.JSArray_Node_2));
      t1.parent = this;
      t1.namespace = this.namespace;
      return t1;
    },
    _createElement$1(_, tag) {
      var t1 = B.Map_ahyjx.$index(0, tag);
      if (t1 == null)
        t1 = this.namespace;
      this.namespace = t1;
      if (t1 != null) {
        t1 = document.createElementNS(t1, tag);
        return t1;
      }
      t1 = document.createElement(tag);
      return t1;
    },
    updateElement$6(tag, id, classes, styles, attributes, events) {
      var attributesToRemove, elem, toHydrate, t2, _i, e, nodes, old, t3, child, t4, t5, t6, t7, t8, prevEventTypes, _this = this, _null = null,
        t1 = type$.nullable_Map_String_String;
      t1._as(styles);
      t1._as(attributes);
      type$.nullable_Map_of_String_and_void_Function_Event._as(events);
      attributesToRemove = A._Cell$named("attributesToRemove");
      elem = A._Cell$named("elem");
      $label0$0: {
        t1 = _this.node;
        if (t1 == null) {
          toHydrate = _this.parent.toHydrate;
          t1 = toHydrate.length;
          if (t1 !== 0)
            for (t2 = type$.Element, _i = 0; _i < t1; ++_i) {
              e = toHydrate[_i];
              if (t2._is(e) && e.tagName.toLowerCase() === tag) {
                _this.set$node(e);
                elem._value = e;
                if (e === elem)
                  A.throwExpression(A.LateError$localNI(elem.__late_helper$_name));
                t1 = new A._ElementAttributeMap(e).get$keys();
                attributesToRemove._value = A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
                B.JSArray_methods.remove$1(toHydrate, e);
                nodes = new A._ChildNodeListLazy(e);
                _this.set$toHydrate(nodes.toList$0(nodes));
                break $label0$0;
              }
            }
          elem._value = _this.node = _this._createElement$1(0, tag);
          attributesToRemove._value = A.LinkedHashSet_LinkedHashSet$_empty(type$.String);
        } else {
          t2 = type$.Element;
          if (!t2._is(t1) || t1.tagName.toLowerCase() !== tag) {
            elem._value = _this._createElement$1(0, tag);
            old = _this.node;
            old.toString;
            J.replaceWith$1$x(old, elem._readLocal$0());
            _this.set$node(elem._readLocal$0());
            t1 = old.childNodes;
            t1.toString;
            t1 = B.NodeList_methods.get$isEmpty(t1);
            if (!t1) {
              t1 = old.childNodes;
              t1.toString;
              t1 = A.List_List$of(t1, true, type$.Node);
              for (t2 = t1.length, t3 = elem.__late_helper$_name, _i = 0; _i < t2; ++_i) {
                child = t1[_i];
                t4 = elem._value;
                if (t4 === elem)
                  A.throwExpression(A.LateError$localNI(t3));
                J.append$1$x(t4, child);
              }
            }
            attributesToRemove._value = A.LinkedHashSet_LinkedHashSet$_empty(type$.String);
          } else {
            elem._value = t2._as(t1);
            t1 = new A._ElementAttributeMap(elem._readLocal$0()).get$keys();
            attributesToRemove._value = A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
          }
        }
      }
      A._extension_0_clearOrSetAttribute(elem._readLocal$0(), "id", id);
      t1 = elem._readLocal$0();
      A._extension_0_clearOrSetAttribute(t1, "class", classes == null || classes.length === 0 ? _null : classes);
      t1 = elem._readLocal$0();
      A._extension_0_clearOrSetAttribute(t1, "style", styles == null || styles.get$isEmpty(styles) ? _null : styles.get$entries(styles).map$1$1(0, new A.DomRenderObject_updateElement_closure(), type$.String).join$1(0, "; "));
      t1 = attributes == null;
      if (!t1 && attributes.get$isNotEmpty(attributes))
        for (t2 = attributes.get$entries(attributes), t2 = t2.get$iterator(t2), t3 = type$.InputElement, t4 = elem.__late_helper$_name; t2.moveNext$0();) {
          t5 = t2.get$current();
          t6 = t5.key;
          if (J.$eq$(t6, "value")) {
            t7 = elem._value;
            if (t7 === elem)
              A.throwExpression(A.LateError$localNI(t4));
            if (t3._is(t7)) {
              t7 = t7.value;
              t8 = t5.value;
              t8 = t7 == null ? t8 != null : t7 !== t8;
              t7 = t8;
            } else
              t7 = false;
          } else
            t7 = false;
          if (t7) {
            t6 = elem._value;
            if (t6 === elem)
              A.throwExpression(A.LateError$localNI(t4));
            J.set$value$x(t6, t5.value);
            continue;
          }
          t7 = elem._value;
          if (t7 === elem)
            A.throwExpression(A.LateError$localNI(t4));
          A._extension_0_clearOrSetAttribute(t7, t6, t5.value);
        }
      t2 = attributesToRemove._readLocal$0();
      t3 = ["id", "class", "style"];
      t1 = t1 ? _null : attributes.get$keys();
      if (t1 != null)
        B.JSArray_methods.addAll$1(t3, t1);
      t2.removeAll$1(t3);
      if (J.get$isNotEmpty$asx(attributesToRemove._readLocal$0()))
        for (t1 = J.get$iterator$ax(attributesToRemove._readLocal$0()), t2 = elem.__late_helper$_name; t1.moveNext$0();) {
          t3 = t1.get$current();
          t4 = elem._value;
          if (t4 === elem)
            A.throwExpression(A.LateError$localNI(t2));
          J._removeAttribute$1$x(t4, t3);
        }
      if (events != null && events.get$isNotEmpty(events)) {
        t1 = _this.events;
        if (t1 == null)
          prevEventTypes = _null;
        else {
          t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>");
          prevEventTypes = A.LinkedHashSet_LinkedHashSet(t2._eval$1("Iterable.E"));
          prevEventTypes.addAll$1(0, new A.LinkedHashMapKeyIterable(t1, t2));
        }
        if (_this.events == null)
          _this.set$events(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.EventBinding));
        t1 = _this.events;
        t1.toString;
        events.forEach$1(0, new A.DomRenderObject_updateElement_closure0(prevEventTypes, t1, elem));
        if (prevEventTypes != null)
          prevEventTypes.forEach$1(0, new A.DomRenderObject_updateElement_closure1(t1));
      } else
        _this.clearEvents$0();
    },
    updateText$2(text, rawHtml) {
      var t1, toHydrate, t2, _i, e, _this = this;
      $label0$0: {
        t1 = _this.node;
        if (t1 == null) {
          toHydrate = _this.parent.toHydrate;
          t1 = toHydrate.length;
          if (t1 !== 0)
            for (t2 = type$.Text_2, _i = 0; _i < t1; ++_i) {
              e = toHydrate[_i];
              if (t2._is(e)) {
                _this.node = e;
                if (e.textContent !== text)
                  J.set$text$x(e, text);
                B.JSArray_methods.remove$1(toHydrate, e);
                break $label0$0;
              }
            }
          t1 = document.createTextNode(text);
          t1.toString;
          _this.node = t1;
        } else if (!type$.Text_2._is(t1)) {
          t2 = document.createTextNode(text);
          t2.toString;
          J.replaceWith$1$x(t1, t2);
          _this.node = t2;
        } else if (t1.textContent !== text)
          J.set$text$x(t1, text);
      }
    },
    attach$2($parent, after) {
      var parentNode, childNode, afterNode, p, _0_0, _0_4, _0_4_isSet, t1, _0_40, t2, _this = this;
      try {
        _this.parent = $parent;
        t1 = $parent == null;
        _this.namespace = t1 ? null : $parent.namespace;
        if (t1)
          return;
        parentNode = $parent.node;
        childNode = _this.node;
        if (childNode == null)
          return;
        afterNode = after == null ? null : after.node;
        p = null;
        _0_0 = new A._Record_2(afterNode, $parent);
        _0_4 = null;
        _0_4_isSet = false;
        if (_0_0._0 == null) {
          if (A.boolConversionCheck(_0_4_isSet))
            t1 = _0_4;
          else {
            _0_4_isSet = true;
            _0_40 = _0_0._1;
            _0_4 = _0_40;
            t1 = _0_40;
          }
          if (t1 instanceof A.RootDomRenderObject) {
            if (A.boolConversionCheck(_0_4_isSet))
              t1 = _0_4;
            else {
              _0_4_isSet = true;
              _0_40 = _0_0._1;
              _0_4 = _0_40;
              t1 = _0_40;
            }
            p = type$.RootDomRenderObject._as(t1);
            if (p.from != null) {
              t1 = p.from;
              t1.toString;
              t1 = t1 > 0;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
        if (t1) {
          t1 = p.container.childNodes;
          t1.toString;
          t2 = p.from;
          t2.toString;
          --t2;
          if (!(t2 >= 0 && t2 < t1.length))
            return A.ioore(t1, t2);
          afterNode = t1[t2];
        }
        t1 = childNode.previousSibling;
        t2 = afterNode;
        if (t1 == null ? t2 == null : t1 === t2) {
          t1 = childNode.parentNode;
          t2 = parentNode;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1)
          return;
        if (afterNode == null)
          if (parentNode.childNodes.length === 0)
            J.append$1$x(parentNode, childNode);
          else {
            t1 = parentNode.childNodes;
            t1.toString;
            J.insertBefore$2$x(parentNode, childNode, B.NodeList_methods.get$first(t1));
          }
        else {
          t1 = parentNode;
          t1.toString;
          J.insertBefore$2$x(t1, childNode, afterNode.nextSibling);
        }
      } finally {
        _this._finalize$0();
      }
    },
    _finalize$0() {
      var t1, t2, _i, node, t3;
      for (t1 = this.toHydrate, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        t3 = node.parentNode;
        if (t3 != null)
          J._removeChild$1$x(t3, node);
      }
      B.JSArray_methods.clear$0(this.toHydrate);
    },
    set$node(node) {
      this.node = type$.nullable_Node_2._as(node);
    },
    set$toHydrate(toHydrate) {
      this.toHydrate = type$.List_Node._as(toHydrate);
    },
    set$events(events) {
      this.events = type$.nullable_Map_String_EventBinding._as(events);
    }
  };
  A.DomRenderObject_clearEvents_closure.prototype = {
    call$2(type, binding) {
      A._asString(type);
      type$.EventBinding._as(binding).clear$0(0);
    },
    $signature: 36
  };
  A.DomRenderObject_updateElement_closure.prototype = {
    call$1(e) {
      type$.MapEntry_String_String._as(e);
      return A.S(e.key) + ": " + A.S(e.value);
    },
    $signature: 37
  };
  A.DomRenderObject_updateElement_closure0.prototype = {
    call$2(type, fn) {
      var t1, currentBinding;
      A._asString(type);
      type$.void_Function_Event._as(fn);
      t1 = this.prevEventTypes;
      if (t1 != null)
        t1.remove$1(0, type);
      t1 = this.dataEvents;
      currentBinding = t1.$index(0, type);
      if (currentBinding != null)
        currentBinding.set$fn(fn);
      else
        t1.$indexSet(0, type, A.EventBinding$(this.elem._readLocal$0(), type, fn));
    },
    $signature: 38
  };
  A.DomRenderObject_updateElement_closure1.prototype = {
    call$1(type) {
      var t1 = this.dataEvents.remove$1(0, A._asString(type));
      if (t1 != null)
        J.clear$0$ax(t1);
    },
    $signature: 22
  };
  A.RootDomRenderObject.prototype = {};
  A.EventBinding.prototype = {
    EventBinding$3(element, type, fn) {
      var t1 = new A.ElementEvents(element).$index(0, this.type),
        t2 = t1.$ti;
      this.subscription = A._EventStreamSubscription$(t1._target, t1._eventType, t2._eval$1("~(1)?")._as(new A.EventBinding_closure(this)), false, t2._precomputed1);
    },
    clear$0(_) {
      var t1 = this.subscription;
      if (t1 != null)
        t1.cancel$0();
      this.subscription = null;
    },
    set$fn(fn) {
      this.fn = type$.void_Function_Event._as(fn);
    }
  };
  A.EventBinding_closure.prototype = {
    call$1($event) {
      this.$this.fn.call$1($event);
    },
    $signature: 9
  };
  A._JasprConfig.prototype = {};
  A._ComponentConfig.prototype = {};
  A.ButtonType.prototype = {
    _enumToString$0() {
      return "ButtonType." + this._name;
    }
  };
  A.InputType.prototype = {
    _enumToString$0() {
      return "InputType." + this._name;
    }
  };
  A.AppBinding.prototype = {};
  A._AppBinding_Object_SchedulerBinding.prototype = {};
  A._AppBinding_Object_SchedulerBinding_SyncBinding.prototype = {};
  A.events_closure.prototype = {
    call$1(_) {
      type$.Event._as(_);
      return this.onClick.call$0();
    },
    $signature: 9
  };
  A._callWithValue_closure.prototype = {
    call$1(e) {
      var t1,
        target = J.get$target$x(type$.Event._as(e));
      A.print(J.get$runtimeType$(target));
      $label1$1: {
        if (type$.InputElement._is(target)) {
          t1 = new A._callWithValue__closure(target).call$0();
          break $label1$1;
        }
        if (type$.TextAreaElement._is(target)) {
          t1 = target.value;
          if (t1 == null)
            t1 = "";
          break $label1$1;
        }
        if (type$.SelectElement._is(target)) {
          t1 = J.map$1$1$ax(B.SelectElement_methods.get$selectedOptions(target), new A._callWithValue__closure0(), type$.String);
          t1 = A.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E"));
          break $label1$1;
        }
        t1 = null;
        break $label1$1;
      }
      this.fn.call$1(this.V._as(t1));
    },
    $signature: 9
  };
  A._callWithValue__closure.prototype = {
    call$0() {
      var t2, t3,
        t1 = this.target,
        type = A.IterableExtensions_get_firstOrNull(new A.WhereIterable(B.List_iHD, type$.bool_Function_InputType._as(new A._callWithValue___closure(t1)), type$.WhereIterable_InputType), type$.InputType);
      $label0$0: {
        if (B.InputType_checkbox_checkbox === type || B.InputType_radio_radio === type) {
          t1 = t1.checked;
          break $label0$0;
        }
        if (B.InputType_number_number === type) {
          t1 = t1.valueAsNumber;
          break $label0$0;
        }
        if (B.InputType_date_date === type || B.InputType_vdN === type) {
          t1 = t1.valueAsDate.getTime();
          t1.toString;
          t2 = new A.DateTime(t1, true);
          if (Math.abs(t1) <= 864e13)
            t3 = false;
          else
            t3 = true;
          if (t3)
            A.throwExpression(A.ArgumentError$("DateTime is outside valid range: " + t1, null));
          A.checkNotNullable(true, "isUtc", type$.bool);
          t1 = t2;
          break $label0$0;
        }
        if (B.InputType_file_file === type) {
          t1 = t1.files;
          break $label0$0;
        }
        t1 = t1.value;
        break $label0$0;
      }
      return t1;
    },
    $signature: 40
  };
  A._callWithValue___closure.prototype = {
    call$1(v) {
      return type$.InputType._as(v)._name === this.target.type;
    },
    $signature: 41
  };
  A._callWithValue__closure0.prototype = {
    call$1(o) {
      var t1 = type$.OptionElement._as(o).value;
      t1.toString;
      return t1;
    },
    $signature: 42
  };
  A.SchedulerPhase.prototype = {
    _enumToString$0() {
      return "SchedulerPhase." + this._name;
    }
  };
  A.SchedulerBinding.prototype = {
    scheduleBuild$1(buildCallback) {
      this.scheduleFrame$1(new A.SchedulerBinding_scheduleBuild_closure(this, type$.void_Function._as(buildCallback)));
    },
    _flushPostFrameCallbacks$0() {
      var _i,
        t1 = this.SchedulerBinding__postFrameCallbacks,
        localPostFrameCallbacks = A.List_List$of(t1, true, type$.void_Function);
      B.JSArray_methods.clear$0(t1);
      for (t1 = localPostFrameCallbacks.length, _i = 0; _i < t1; ++_i)
        localPostFrameCallbacks[_i].call$0();
    }
  };
  A.SchedulerBinding_scheduleBuild_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = type$.void_Function._as(this.buildCallback);
      t1.SchedulerBinding__schedulerPhase = B.SchedulerPhase_1;
      t2.call$0();
      t1.SchedulerBinding__schedulerPhase = B.SchedulerPhase_2;
      t1._flushPostFrameCallbacks$0();
      t1.SchedulerBinding__schedulerPhase = B.SchedulerPhase_0;
      return null;
    },
    $signature: 1
  };
  A._NamedColor.prototype = {};
  A.SyncBinding.prototype = {};
  A.SyncStateMixin.prototype = {};
  A.StateCodec.prototype = {};
  A.StateDecoder.prototype = {
    convert$1(input) {
      var t1 = type$.BinaryCodec._eval$1("Codec.T")._as(B.C_Base64Decoder.convert$1(A._asString(input)));
      return B.C_BinaryCodec.get$decoder().convert$1(t1);
    }
  };
  A.StateEncoder.prototype = {};
  A.BuildOwner.prototype = {
    scheduleBuildFor$1(element) {
      var _this = this;
      if (element._inDirtyList) {
        _this._dirtyElementsNeedsResorting = true;
        return;
      }
      if (!_this._scheduledBuild) {
        element._binding.scheduleBuild$1(_this.get$performBuild());
        _this._scheduledBuild = true;
      }
      B.JSArray_methods.add$1(_this._dirtyElements, element);
      element._inDirtyList = true;
    },
    lockState$1(callback) {
      return this.lockState$body$BuildOwner(type$.dynamic_Function._as(callback));
    },
    lockState$body$BuildOwner(callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$next = [], res;
      var $async$lockState$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 2;
              res = callback.call$0();
              $async$goto = res instanceof A._Future ? 5 : 6;
              break;
            case 5:
              // then
              $async$goto = 7;
              return A._asyncAwait(res, $async$lockState$1);
            case 7:
              // returning from await.
            case 6:
              // join
              $async$next.push(4);
              // goto finally
              $async$goto = 3;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 3:
              // finally
              $async$handler = 1;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 4:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$lockState$1, $async$completer);
    },
    performRebuildOn$2(child, whenComplete) {
      type$.void_Function._as(whenComplete);
      if (this._isFirstBuild)
        child._binding.toString;
      child.performRebuild$0();
      whenComplete.call$0();
      return;
    },
    performBuild$0() {
      var dirtyCount, index, element, e, element0, t1, t2, t3, exception, _i, _this = this;
      try {
        t1 = _this._dirtyElements;
        B.JSArray_methods.sort$1(t1, A.framework_Element__sort$closure());
        _this._dirtyElementsNeedsResorting = false;
        dirtyCount = t1.length;
        index = 0;
        while (true) {
          t2 = index;
          t3 = dirtyCount;
          if (typeof t2 !== "number")
            return t2.$lt();
          if (typeof t3 !== "number")
            return A.iae(t3);
          if (!(t2 < t3))
            break;
          element = B.JSArray_methods.$index(t1, index);
          try {
            element.rebuild$0();
            element.toString;
          } catch (exception) {
            e = A.unwrapException(exception);
            t1 = A.S(e);
            A.printString("Error on rebuilding component: " + t1);
            throw exception;
          }
          t2 = index;
          if (typeof t2 !== "number")
            return t2.$add();
          index = t2 + 1;
          t2 = dirtyCount;
          t3 = t1.length;
          if (typeof t2 !== "number")
            return t2.$lt();
          if (!(t2 < t3)) {
            t2 = _this._dirtyElementsNeedsResorting;
            t2.toString;
          } else
            t2 = true;
          if (t2) {
            B.JSArray_methods.sort$1(t1, A.framework_Element__sort$closure());
            t2 = _this._dirtyElementsNeedsResorting = false;
            dirtyCount = t1.length;
            while (true) {
              t3 = index;
              if (typeof t3 !== "number")
                return t3.$gt();
              if (t3 > 0) {
                t3 = index;
                if (typeof t3 !== "number")
                  return t3.$sub();
                t3 = B.JSArray_methods.$index(t1, t3 - 1)._dirty;
              } else
                t3 = t2;
              if (!t3)
                break;
              t3 = index;
              if (typeof t3 !== "number")
                return t3.$sub();
              index = t3 - 1;
            }
          }
        }
      } finally {
        for (t1 = _this._dirtyElements, t2 = t1.length, _i = 0; _i < t2; ++_i) {
          element0 = t1[_i];
          element0._inDirtyList = false;
        }
        B.JSArray_methods.clear$0(t1);
        _this._dirtyElementsNeedsResorting = null;
        _this.lockState$1(_this._inactiveElements.get$_unmountAll());
        _this._scheduledBuild = false;
      }
    }
  };
  A.ComponentsBinding.prototype = {
    attachRootComponent$1(app) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, buildOwner;
      var $async$attachRootComponent$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.ComponentsBinding__rootElement;
              buildOwner = t1 == null ? null : t1._owner;
              if (buildOwner == null)
                buildOwner = new A.BuildOwner(A._setArrayType([], type$.JSArray_Element), new A._InactiveElements(A.HashSet_HashSet(type$.Element_3)));
              $async$goto = 2;
              return A._asyncAwait(buildOwner.lockState$1(new A.ComponentsBinding_attachRootComponent_closure($async$self, buildOwner, app)), $async$attachRootComponent$1);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$attachRootComponent$1, $async$completer);
    }
  };
  A.ComponentsBinding_attachRootComponent_closure.prototype = {
    call$0() {
      var element, t2, t3, t4, t5, from, to, t6, nodes, _null = null,
        t1 = this.buildOwner;
      t1._isFirstBuild = true;
      element = A._RootElement$(new A._Root(this.app, _null));
      t2 = element._binding = this.$this;
      element._owner = t1;
      t3 = $.$get$_queryReg();
      t4 = t2.__BrowserAppBinding_attachTarget_A;
      t4 === $ && A.throwLateFieldNI("attachTarget");
      t4 = t3.firstMatch$1(t4)._match;
      t3 = t4.length;
      if (1 >= t3)
        return A.ioore(t4, 1);
      t5 = t4[1];
      t5.toString;
      if (2 >= t3)
        return A.ioore(t4, 2);
      t3 = t4[2];
      from = A.Primitives_parseInt(t3 == null ? "" : t3, _null);
      if (3 >= t4.length)
        return A.ioore(t4, 3);
      t3 = t4[3];
      to = A.Primitives_parseInt(t3 == null ? "" : t3, _null);
      t3 = document.querySelector(t5);
      t3.toString;
      t4 = new A.RootDomRenderObject(t3, from, to, A._setArrayType([], type$.JSArray_Node_2));
      t5 = from == null;
      t6 = t5 ? 0 : from;
      nodes = A.SubListIterable$(new A._ChildNodeListLazy(t3), t6, _null, type$._ChildNodeListLazy._eval$1("ListBase.E"));
      if (to != null)
        nodes = nodes.take$1(0, to - (t5 ? 0 : from));
      t4.node = t3;
      t4.set$toHydrate(nodes.toList$0(0));
      element.RenderObjectElement__renderObject = t4;
      element.super$Element$mount(_null, _null);
      element._firstBuild$0();
      t1 = new A.ComponentsBinding_attachRootComponent_closure_end(t2, element, t1);
      t2 = element._asyncFirstBuild;
      if (t2 != null)
        return t2.then$1$1(new A.ComponentsBinding_attachRootComponent__closure(t1), type$.Null);
      t1.call$0();
    },
    $signature: 43
  };
  A.ComponentsBinding_attachRootComponent_closure_end.prototype = {
    call$0() {
      this.$this.ComponentsBinding__rootElement = this.element;
      this.buildOwner._isFirstBuild = false;
    },
    $signature: 2
  };
  A.ComponentsBinding_attachRootComponent__closure.prototype = {
    call$1(_) {
      return this.end.call$0();
    },
    $signature: 11
  };
  A._Root.prototype = {
    createElement$0(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new A._RootElement(null, t1, this, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    }
  };
  A._RootElement.prototype = {
    get$component() {
      return type$._Root._as(A.Element.prototype.get$component.call(this));
    },
    build$0() {
      return type$._Root._as(A.Element.prototype.get$component.call(this)).child;
    }
  };
  A.DomComponent.prototype = {
    createElement$0(_) {
      var t1 = A.HashSet_HashSet(type$.Element_3),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.DomElement(null, t1, t2, this, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    }
  };
  A.DomElement.prototype = {
    get$component() {
      return type$.DomComponent._as(A.Element.prototype.get$component.call(this));
    },
    _updateInheritance$0() {
      var t1, _this = this;
      _this.super$Element$_updateInheritance();
      t1 = _this._inheritedElements;
      if (t1 != null && t1.containsKey$1(B.Type__WrappingDomComponent_yfz)) {
        t1 = _this._inheritedElements;
        t1.toString;
        _this.set$_inheritedElements(A.HashMap_HashMap$from(t1, type$.Type, type$.InheritedElement));
      }
      t1 = _this._inheritedElements;
      _this.set$_wrappingElement(t1 == null ? null : t1.remove$1(0, B.Type__WrappingDomComponent_yfz));
    },
    didChangeDependencies$0() {
      this.super$Element$didChangeDependencies();
      this.updateRenderObject$0();
    },
    build$0() {
      var t1 = type$.DomComponent._as(A.Element.prototype.get$component.call(this)),
        t2 = type$.JSArray_Component,
        t3 = A._setArrayType([], t2),
        t4 = t1._child;
      if (t4 != null)
        t3.push(t4);
      t1 = t1._children;
      B.JSArray_methods.addAll$1(t3, t1 == null ? A._setArrayType([], t2) : t1);
      return t3;
    },
    update$1(newComponent) {
      this.super$_DomElement_MultiChildElement_RenderObjectElement$update(type$.DomComponent._as(newComponent));
      this._dirty = true;
      this.rebuild$0();
    },
    updateRenderObject$0() {
      var t2, t3, t4, t5, t6, t7, _this = this, _null = null,
        t1 = _this._wrappingElement;
      if (t1 != null)
        type$._WrappingDomComponent._as(_this.dependOnInheritedElement$1(t1));
      t1 = _this.RenderObjectElement__renderObject;
      t1.toString;
      t2 = type$.DomComponent;
      t3 = t2._as(A.Element.prototype.get$component.call(_this));
      t4 = t2._as(A.Element.prototype.get$component.call(_this)).id;
      if (t4 == null)
        t4 = _null;
      t5 = _this._join$1$3(_null, t2._as(A.Element.prototype.get$component.call(_this)).classes, new A.DomElement_updateRenderObject_closure(), type$.String);
      t2._as(A.Element.prototype.get$component.call(_this));
      t6 = type$.Map_String_String;
      t7 = _this._join$1$3(_null, _null, new A.DomElement_updateRenderObject_closure0(), t6);
      t6 = _this._join$1$3(_null, t2._as(A.Element.prototype.get$component.call(_this)).attributes, new A.DomElement_updateRenderObject_closure1(), t6);
      t1.updateElement$6(t3.tag, t4, t5, t7, t6, _this._join$1$3(_null, t2._as(A.Element.prototype.get$component.call(_this)).events, new A.DomElement_updateRenderObject_closure2(), type$.Map_of_String_and_void_Function_Event));
    },
    _join$1$3(a, b, joiner, $T) {
      $T._eval$1("0?")._as(b);
      $T._eval$1("0(0,0)")._as(joiner);
      return b;
    },
    set$_wrappingElement(_wrappingElement) {
      this._wrappingElement = type$.nullable_InheritedElement._as(_wrappingElement);
    }
  };
  A.DomElement_updateRenderObject_closure.prototype = {
    call$2(a, b) {
      A._asString(b);
      return A.S(a) + " " + b;
    },
    $signature: 34
  };
  A.DomElement_updateRenderObject_closure0.prototype = {
    call$2(a, b) {
      var t1 = type$.Map_String_String;
      t1._as(a);
      t1._as(b);
      t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$of(a, t1, t1);
      t1.addAll$1(0, b);
      return t1;
    },
    $signature: 23
  };
  A.DomElement_updateRenderObject_closure1.prototype = {
    call$2(a, b) {
      var t1 = type$.Map_String_String;
      t1._as(a);
      t1._as(b);
      t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$of(a, t1, t1);
      t1.addAll$1(0, b);
      return t1;
    },
    $signature: 23
  };
  A.DomElement_updateRenderObject_closure2.prototype = {
    call$2(a, b) {
      var t1 = type$.Map_of_String_and_void_Function_Event;
      t1._as(a);
      t1._as(b);
      t1 = A.LinkedHashMap_LinkedHashMap$of(a, type$.String, type$.void_Function_Event);
      t1.addAll$1(0, b);
      return t1;
    },
    $signature: 46
  };
  A.Text.prototype = {
    createElement$0(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new A.TextElement(null, t1, this, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    }
  };
  A.NoChildElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
      this._firstBuild$0();
    },
    _firstBuild$1(onBuilt) {
      type$.nullable_void_Function._as(onBuilt);
      this.super$Element$_firstBuild(onBuilt);
      this.rebuild$1(onBuilt);
    },
    performRebuild$0() {
      this._dirty = false;
    },
    visitChildren$1(visitor) {
      type$.void_Function_Element._as(visitor);
    }
  };
  A.TextElement.prototype = {
    get$component() {
      return type$.Text_3._as(A.Element.prototype.get$component.call(this));
    },
    updateRenderObject$0() {
      var t2, t3,
        t1 = this.RenderObjectElement__renderObject;
      t1.toString;
      t2 = type$.Text_3;
      t3 = t2._as(A.Element.prototype.get$component.call(this));
      t2._as(A.Element.prototype.get$component.call(this));
      t1.updateText$2(t3.text, false);
    }
  };
  A.Component.prototype = {};
  A._ElementLifecycle.prototype = {
    _enumToString$0() {
      return "_ElementLifecycle." + this._name;
    }
  };
  A.Element.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return this === other;
    },
    get$hashCode(_) {
      return this._cachedHash;
    },
    get$component() {
      var t1 = this._component;
      t1.toString;
      return t1;
    },
    updateChild$3(child, newComponent, prevSibling) {
      var t1, newChild, _this = this;
      if (newComponent == null) {
        if (child != null) {
          if (J.$eq$(_this._lastChild, child))
            _this.updateLastChild$1(prevSibling);
          _this.deactivateChild$1(child);
        }
        return null;
      }
      if (child != null)
        if (child._component === newComponent) {
          t1 = J.$eq$(child._prevSibling, prevSibling);
          if (!t1)
            child.updatePrevSibling$1(prevSibling);
          newChild = child;
        } else {
          t1 = child.get$component();
          t1 = A.getRuntimeTypeOfDartObject(t1) === A.getRuntimeTypeOfDartObject(newComponent) && t1.key == newComponent.key;
          if (t1) {
            t1 = J.$eq$(child._prevSibling, prevSibling);
            if (!t1)
              child.updatePrevSibling$1(prevSibling);
            child.update$1(newComponent);
            newChild = child;
          } else {
            _this.deactivateChild$1(child);
            newChild = _this.inflateComponent$2(newComponent, prevSibling);
          }
        }
      else
        newChild = _this.inflateComponent$2(newComponent, prevSibling);
      if (J.$eq$(_this._lastChild, prevSibling))
        _this.updateLastChild$1(newChild);
      return newChild;
    },
    mount$2($parent, prevSibling) {
      var t1, t2, _this = this;
      _this._parent = $parent;
      t1 = type$.RenderObjectElement._is($parent);
      if (t1)
        t2 = $parent;
      else
        t2 = $parent == null ? null : $parent._parentRenderObjectElement;
      _this._parentRenderObjectElement = t2;
      _this._prevSibling = prevSibling;
      if (prevSibling == null)
        if (t1)
          t1 = null;
        else
          t1 = $parent == null ? null : $parent._prevAncestorSibling;
      else
        t1 = prevSibling;
      _this._prevAncestorSibling = t1;
      _this._lifecycleState = B._ElementLifecycle_1;
      t1 = $parent != null;
      if (t1) {
        t2 = $parent._depth;
        t2.toString;
        ++t2;
      } else
        t2 = 1;
      _this._depth = t2;
      if (t1) {
        t1 = $parent._owner;
        t1.toString;
        _this._owner = t1;
        t1 = $parent._binding;
        t1.toString;
        _this._binding = t1;
      }
      _this.get$component();
      _this._updateInheritance$0();
      _this._updateObservers$0();
      _this.attachNotificationTree$0();
    },
    _firstBuild$1(onBuilt) {
      type$.nullable_void_Function._as(onBuilt);
    },
    update$1(newComponent) {
      this._component = newComponent;
    },
    inflateComponent$2(newComponent, prevSibling) {
      var newChild = newComponent.createElement$0(0);
      newChild.mount$2(this, prevSibling);
      return newChild;
    },
    deactivateChild$1(child) {
      var t1;
      child._prevAncestorSibling = child._prevSibling = child._parent = null;
      t1 = this._owner._inactiveElements;
      if (child._lifecycleState === B._ElementLifecycle_1) {
        child.deactivate$0();
        child.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
      }
      t1._elements.add$1(0, child);
    },
    deactivate$0() {
      var t2, t3, _this = this,
        t1 = _this._dependencies;
      if (t1 != null && t1._collection$_length !== 0)
        for (t2 = A._instanceType(t1), t1 = new A._HashSetIterator(t1, t1._computeElements$0(), t2._eval$1("_HashSetIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
          t3 = t1._collection$_current;
          (t3 == null ? t2._as(t3) : t3).deactivateDependent$1(_this);
        }
      _this.set$_inheritedElements(null);
      _this._lifecycleState = B._ElementLifecycle_2;
    },
    unmount$0() {
      var _this = this;
      _this.get$component();
      _this._component = _this._parentRenderObjectElement = null;
      _this.set$_dependencies(null);
      _this._lifecycleState = B._ElementLifecycle_3;
    },
    dependOnInheritedElement$2$aspect(ancestor, aspect) {
      var _this = this;
      if (_this._dependencies == null)
        _this.set$_dependencies(A.HashSet_HashSet(type$.InheritedElement));
      _this._dependencies.add$1(0, ancestor);
      ancestor.updateDependencies$2(_this, aspect);
      return ancestor.get$component();
    },
    dependOnInheritedElement$1(ancestor) {
      return this.dependOnInheritedElement$2$aspect(ancestor, null);
    },
    dependOnInheritedComponentOfExactType$1$0($T) {
      var t1, ancestor;
      A.checkTypeBound($T, type$.InheritedComponent, "T", "dependOnInheritedComponentOfExactType");
      t1 = this._inheritedElements;
      ancestor = t1 == null ? null : t1.$index(0, A.createRuntimeType($T));
      if (ancestor != null)
        return $T._as(this.dependOnInheritedElement$2$aspect(ancestor, null));
      this._hadUnsatisfiedDependencies = true;
      return null;
    },
    getElementForInheritedComponentOfExactType$1$0($T) {
      var t1;
      A.checkTypeBound($T, type$.InheritedComponent, "T", "getElementForInheritedComponentOfExactType");
      t1 = this._inheritedElements;
      return t1 == null ? null : t1.$index(0, A.createRuntimeType($T));
    },
    _updateInheritance$0() {
      var t1 = this._parent;
      this.set$_inheritedElements(t1 == null ? null : t1._inheritedElements);
    },
    _updateObservers$0() {
      var t1 = this._parent;
      this.set$_observerElements(t1 == null ? null : t1._observerElements);
    },
    attachNotificationTree$0() {
      var t1 = this._parent;
      this._notificationTree = t1 == null ? null : t1._notificationTree;
    },
    didChangeDependencies$0() {
      this.markNeedsBuild$0();
    },
    markNeedsBuild$0() {
      var _this = this;
      if (_this._lifecycleState !== B._ElementLifecycle_1)
        return;
      if (_this._dirty)
        return;
      _this._dirty = true;
      _this._owner.scheduleBuildFor$1(_this);
    },
    rebuild$1(onRebuilt) {
      var _this = this, _box_0 = {};
      type$.nullable_void_Function._as(onRebuilt);
      if (_this._lifecycleState !== B._ElementLifecycle_1 || !_this._dirty)
        return;
      _box_0.debugPreviousBuildTarget = null;
      _this._owner.performRebuildOn$2(_this, new A.Element_rebuild_closure(_box_0, _this, onRebuilt));
    },
    rebuild$0() {
      return this.rebuild$1(null);
    },
    updateLastChild$1(child) {
      var t1, _this = this;
      _this._lastChild = child;
      _this._lastRenderObjectElement = child == null ? null : child.get$_lastRenderObjectElement();
      t1 = _this._parent;
      if (J.$eq$(t1 == null ? null : t1._lastChild, _this)) {
        t1 = _this._parent;
        t1 = t1 == null ? null : t1.get$_lastRenderObjectElement();
        t1 = !J.$eq$(t1, _this.get$_lastRenderObjectElement());
      } else
        t1 = false;
      if (t1)
        _this._parent.updateLastChild$1(_this);
    },
    updatePrevSibling$1(prevSibling) {
      this._prevSibling = prevSibling;
      this._updateAncestorSiblingRecursively$1(false);
      this._parentChanged = false;
    },
    _didUpdateSlot$0() {
    },
    _updateAncestorSiblingRecursively$1(didChangeAncestor) {
      var t1, _this = this,
        newAncestorSibling = _this._prevSibling;
      if (newAncestorSibling == null) {
        t1 = _this._parent;
        if (type$.RenderObjectElement._is(t1))
          newAncestorSibling = null;
        else {
          t1 = t1 == null ? null : t1._prevAncestorSibling;
          newAncestorSibling = t1;
        }
      }
      if (didChangeAncestor || !J.$eq$(newAncestorSibling, _this._prevAncestorSibling)) {
        _this._prevAncestorSibling = newAncestorSibling;
        _this._didUpdateSlot$0();
        if (!type$.RenderObjectElement._is(_this))
          _this.visitChildren$1(new A.Element__updateAncestorSiblingRecursively_closure());
      }
    },
    set$_observerElements(_observerElements) {
      this._observerElements = type$.nullable_List_ObserverElement._as(_observerElements);
    },
    set$_inheritedElements(_inheritedElements) {
      this._inheritedElements = type$.nullable_Map_Type_InheritedElement._as(_inheritedElements);
    },
    set$_dependencies(_dependencies) {
      this._dependencies = type$.nullable_Set_InheritedElement._as(_dependencies);
    },
    $isBuildContext: 1,
    get$_lastRenderObjectElement() {
      return this._lastRenderObjectElement;
    }
  };
  A.Element_rebuild_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1._dependencies;
      if (t2 != null && t2._collection$_length !== 0)
        for (t3 = A._instanceType(t2), t2 = new A._HashSetIterator(t2, t2._computeElements$0(), t3._eval$1("_HashSetIterator<1>")), t3 = t3._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          (t4 == null ? t3._as(t4) : t4).didRebuildDependent$1(t1);
        }
      t1 = this.onRebuilt;
      if (t1 != null)
        t1.call$0();
    },
    $signature: 1
  };
  A.Element__updateAncestorSiblingRecursively_closure.prototype = {
    call$1(e) {
      return e._updateAncestorSiblingRecursively$1(true);
    },
    $signature: 12
  };
  A._InactiveElements.prototype = {
    _unmount$2(element, detachNode) {
      var t1, t2;
      element.visitChildren$1(new A._InactiveElements__unmount_closure(this, element, detachNode));
      if (type$.RenderObjectElement._is(element) && detachNode) {
        t1 = element.RenderObjectElement__renderObject;
        t2 = t1.node;
        if (t2 != null)
          J.remove$0$ax(t2);
        t1.namespace = t1.parent = null;
      }
      element.unmount$0();
    },
    _unmountAll$0() {
      var t2, t3,
        t1 = this._elements,
        elements = A.List_List$of(t1, true, A._instanceType(t1)._precomputed1);
      B.JSArray_methods.sort$1(elements, A.framework_Element__sort$closure());
      t1.clear$0(0);
      for (t1 = A._arrayInstanceType(elements)._eval$1("ReversedListIterable<1>"), t2 = new A.ReversedListIterable(elements, t1), t2 = new A.ListIterator(t2, t2.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"); t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        this._unmount$2(t3 == null ? t1._as(t3) : t3, true);
      }
    }
  };
  A._InactiveElements__unmount_closure.prototype = {
    call$1(child) {
      var t1 = this.detachNode && !type$.RenderObjectElement._is(this.element);
      this.$this._unmount$2(child, t1);
    },
    $signature: 12
  };
  A.InheritedComponent.prototype = {
    createElement$0(_) {
      return A.InheritedElement$(this);
    }
  };
  A.InheritedElement.prototype = {
    get$component() {
      return type$.InheritedComponent._as(A.Element.prototype.get$component.call(this));
    },
    _updateInheritance$0() {
      var t2, _this = this,
        t1 = _this._parent,
        incomingElements = t1 == null ? null : t1._inheritedElements;
      t1 = type$.Type;
      t2 = type$.InheritedElement;
      if (incomingElements != null)
        _this.set$_inheritedElements(A.HashMap_HashMap$from(incomingElements, t1, t2));
      else
        _this.set$_inheritedElements(A.HashMap_HashMap(t1, t2));
      t1 = _this._inheritedElements;
      t1.toString;
      t1.$indexSet(0, A.getRuntimeTypeOfDartObject(_this.get$component()), _this);
    },
    getDependencies$1(dependent) {
      return this._framework$_dependents.$index(0, dependent);
    },
    setDependencies$2(dependent, value) {
      this._framework$_dependents.$indexSet(0, dependent, value);
    },
    updateDependencies$2(dependent, aspect) {
      this.setDependencies$2(dependent, null);
    },
    update$1(newComponent) {
      var oldComponent, _this = this;
      type$.InheritedComponent._as(newComponent);
      oldComponent = _this.get$component();
      _this.super$Element$update(newComponent);
      if (_this.get$component().container !== oldComponent.container)
        _this.notifyClients$1(oldComponent);
      _this._dirty = true;
      _this.rebuild$0();
    },
    notifyClients$1(oldComponent) {
      var t1, t2, t3;
      for (t1 = this._framework$_dependents, t2 = A._instanceType(t1), t1 = new A._HashMapKeyIterator(t1, t1._computeKeys$0(), t2._eval$1("_HashMapKeyIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        (t3 == null ? t2._as(t3) : t3).didChangeDependencies$0();
      }
    },
    didRebuildDependent$1(dependent) {
    },
    deactivateDependent$1(dependent) {
      this._framework$_dependents.remove$1(0, dependent);
    },
    build$0() {
      return this.get$component().child;
    }
  };
  A.Key.prototype = {};
  A.LocalKey.prototype = {};
  A.UniqueKey.prototype = {
    toString$0(_) {
      return "[#" + A.Primitives_objectHashCode(this) + "]";
    }
  };
  A.MultiChildElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
      this._firstBuild$0();
    },
    _firstBuild$1(onBuilt) {
      type$.nullable_void_Function._as(onBuilt);
      this.super$Element$_firstBuild(onBuilt);
      this.rebuild$1(onBuilt);
    },
    _firstBuild$0() {
      return this._firstBuild$1(null);
    },
    performRebuild$0() {
      var e, st, exception, t1, t2, _this = this, _null = null, built = null;
      try {
        built = J.toList$0$ax(_this.build$0());
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        _this._debugDoingBuild = false;
        built = A._setArrayType([new A.DomComponent("div", _null, _null, _null, _null, _null, new A.Text("Error on building component: " + A.S(e), false, _null), _null, _null)], type$.JSArray_Component);
        A.print("Error: " + A.S(e) + " " + A.S(st));
      } finally {
        _this._dirty = false;
      }
      t1 = _this._children;
      if (t1 == null)
        t1 = A._setArrayType([], type$.JSArray_Element);
      t2 = _this._forgottenChildren;
      _this.set$_children(0, _this.updateChildren$3$forgottenChildren(t1, built, t2));
      t2.clear$0(0);
    },
    updateChildren$3$forgottenChildren(oldChildren, newComponents, forgottenChildren) {
      var replaceWithNullIfForgotten, newChildrenBottom, t1, oldChildrenBottom, t2, t3, newChildren, prevChild, newChildrenTop, oldChildrenTop, oldChild, newComponent, haveOldChildren, oldKeyedChildren, key, t4, t5, _this = this, _null = null;
      type$.List_Element_2._as(oldChildren);
      type$.List_Component._as(newComponents);
      type$.nullable_Set_Element._as(forgottenChildren);
      replaceWithNullIfForgotten = new A.MultiChildElement_updateChildren_replaceWithNullIfForgotten(forgottenChildren);
      newChildrenBottom = newComponents.length - 1;
      t1 = J.getInterceptor$asx(oldChildren);
      oldChildrenBottom = t1.get$length(oldChildren) - 1;
      t2 = t1.get$length(oldChildren);
      t3 = newComponents.length;
      newChildren = t2 === t3 ? oldChildren : A.List_List$filled(t3, _null, true, type$.nullable_Element_2);
      t2 = J.getInterceptor$ax(newChildren);
      prevChild = _null;
      newChildrenTop = 0;
      oldChildrenTop = 0;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenTop));
        if (!(newChildrenTop < newComponents.length))
          return A.ioore(newComponents, newChildrenTop);
        newComponent = newComponents[newChildrenTop];
        if (oldChild != null) {
          t3 = oldChild.get$component();
          t3 = !(A.getRuntimeTypeOfDartObject(t3) === A.getRuntimeTypeOfDartObject(newComponent) && t3.key == newComponent.key);
        } else
          t3 = true;
        if (t3)
          break;
        t3 = _this.updateChild$3(oldChild, newComponent, prevChild);
        t3.toString;
        t2.$indexSet(newChildren, newChildrenTop, t3);
        ++newChildrenTop;
        ++oldChildrenTop;
        prevChild = t3;
      }
      while (true) {
        haveOldChildren = oldChildrenTop <= oldChildrenBottom;
        if (!(haveOldChildren && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenBottom));
        if (!(newChildrenBottom >= 0 && newChildrenBottom < newComponents.length))
          return A.ioore(newComponents, newChildrenBottom);
        newComponent = newComponents[newChildrenBottom];
        if (oldChild != null) {
          t3 = oldChild.get$component();
          t3 = !(A.getRuntimeTypeOfDartObject(t3) === A.getRuntimeTypeOfDartObject(newComponent) && t3.key == newComponent.key);
        } else
          t3 = true;
        if (t3)
          break;
        --oldChildrenBottom;
        --newChildrenBottom;
      }
      if (haveOldChildren) {
        oldKeyedChildren = A.LinkedHashMap_LinkedHashMap$_empty(type$.Key, type$.Element_3);
        for (; oldChildrenTop <= oldChildrenBottom;) {
          oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenTop));
          if (oldChild != null)
            if (oldChild.get$component().key != null) {
              t3 = oldChild.get$component().key;
              t3.toString;
              oldKeyedChildren.$indexSet(0, t3, oldChild);
            } else {
              oldChild._prevAncestorSibling = oldChild._prevSibling = oldChild._parent = null;
              t3 = _this._owner._inactiveElements;
              if (oldChild._lifecycleState === B._ElementLifecycle_1) {
                oldChild.deactivate$0();
                oldChild.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
              }
              t3._elements.add$1(0, oldChild);
            }
          ++oldChildrenTop;
        }
        haveOldChildren = true;
      } else
        oldKeyedChildren = _null;
      for (; newChildrenTop <= newChildrenBottom; prevChild = t3) {
        if (!(newChildrenTop < newComponents.length))
          return A.ioore(newComponents, newChildrenTop);
        newComponent = newComponents[newChildrenTop];
        if (haveOldChildren) {
          key = newComponent.key;
          if (key != null) {
            oldChild = oldKeyedChildren.$index(0, key);
            if (oldChild != null) {
              t3 = oldChild.get$component();
              if (A.getRuntimeTypeOfDartObject(t3) === A.getRuntimeTypeOfDartObject(newComponent) && t3.key === key)
                oldKeyedChildren.remove$1(0, key);
              else
                oldChild = _null;
            }
          } else
            oldChild = _null;
        } else
          oldChild = _null;
        t3 = _this.updateChild$3(oldChild, newComponent, prevChild);
        t3.toString;
        t2.$indexSet(newChildren, newChildrenTop, t3);
        ++newChildrenTop;
      }
      newChildrenBottom = newComponents.length - 1;
      oldChildrenBottom = t1.get$length(oldChildren) - 1;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = t1.$index(oldChildren, oldChildrenTop);
        if (!(newChildrenTop < newComponents.length))
          return A.ioore(newComponents, newChildrenTop);
        t3 = _this.updateChild$3(oldChild, newComponents[newChildrenTop], prevChild);
        t3.toString;
        t2.$indexSet(newChildren, newChildrenTop, t3);
        ++newChildrenTop;
        ++oldChildrenTop;
        prevChild = t3;
      }
      if (haveOldChildren && oldKeyedChildren.__js_helper$_length !== 0)
        for (t1 = oldKeyedChildren.get$values(0), t3 = A._instanceType(t1), t3 = t3._eval$1("@<1>")._bind$1(t3._rest[1]), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t3._eval$1("MappedIterator<1,2>")), t3 = t3._rest[1]; t1.moveNext$0();) {
          t4 = t1.__internal$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (!forgottenChildren.contains$1(0, t4)) {
            t4._prevAncestorSibling = t4._prevSibling = t4._parent = null;
            t5 = _this._owner._inactiveElements;
            if (t4._lifecycleState === B._ElementLifecycle_1) {
              t4.deactivate$0();
              t4.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
            }
            t5._elements.add$1(0, t4);
          }
        }
      return t2.cast$1$0(newChildren, type$.Element_3);
    },
    visitChildren$1(visitor) {
      var t1, t2, t3, child;
      type$.void_Function_Element._as(visitor);
      t1 = this._children;
      t1 = J.get$iterator$ax(t1 == null ? [] : t1);
      t2 = this._forgottenChildren;
      t3 = type$.Element_3;
      for (; t1.moveNext$0();) {
        child = t1.get$current();
        if (!t2.contains$1(0, child))
          visitor.call$1(t3._as(child));
      }
    },
    set$_children(_, _children) {
      this._children = type$.nullable_List_Element._as(_children);
    }
  };
  A.MultiChildElement_updateChildren_replaceWithNullIfForgotten.prototype = {
    call$1(child) {
      var t1 = this.forgottenChildren.contains$1(0, child);
      return t1 ? null : child;
    },
    $signature: 48
  };
  A.RenderObject.prototype = {};
  A.RenderObjectElement.prototype = {
    attachRenderObject$0() {
      var t1, after, t2, t3,
        prevElem = this._prevAncestorSibling;
      while (true) {
        t1 = prevElem == null;
        if (!(!t1 && prevElem.get$_lastRenderObjectElement() == null))
          break;
        prevElem = prevElem._prevAncestorSibling;
      }
      after = t1 ? null : prevElem.get$_lastRenderObjectElement();
      t1 = this.RenderObjectElement__renderObject;
      t1.toString;
      t2 = this._parentRenderObjectElement;
      if (t2 == null)
        t2 = null;
      else {
        t2 = t2.RenderObjectElement__renderObject;
        t2.toString;
      }
      if (after == null)
        t3 = null;
      else {
        t3 = after.RenderObjectElement__renderObject;
        t3.toString;
      }
      t1.attach$2(t2, t3);
    },
    get$_lastRenderObjectElement() {
      return this;
    }
  };
  A._DomElement_MultiChildElement_RenderObjectElement__firstBuild_closure.prototype = {
    call$0() {
      this.$this.attachRenderObject$0();
    },
    $signature: 1
  };
  A._TextElement_NoChildElement_RenderObjectElement__firstBuild_closure.prototype = {
    call$0() {
      this.$this.attachRenderObject$0();
    },
    $signature: 1
  };
  A.__RootElement_SingleChildElement_RenderObjectElement__firstBuild_closure.prototype = {
    call$0() {
      this.$this.attachRenderObject$0();
    },
    $signature: 1
  };
  A.SingleChildElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
      this._firstBuild$0();
    },
    _firstBuild$1(onBuilt) {
      type$.nullable_void_Function._as(onBuilt);
      this.super$Element$_firstBuild(onBuilt);
      this.rebuild$1(onBuilt);
    },
    _firstBuild$0() {
      return this._firstBuild$1(null);
    },
    performRebuild$0() {
      var e, st, exception, _this = this, _null = null, built = null;
      try {
        built = _this.build$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        _this._debugDoingBuild = false;
        built = new A.DomComponent("div", _null, _null, _null, _null, _null, new A.Text("Error on building component: " + A.S(e), false, _null), _null, _null);
        A.print("Error: " + A.S(e) + " " + A.S(st));
      } finally {
        _this._dirty = false;
      }
      _this._child = _this.updateChild$3(_this._child, built, _null);
    },
    visitChildren$1(visitor) {
      var t1;
      type$.void_Function_Element._as(visitor);
      t1 = this._child;
      if (t1 != null)
        visitor.call$1(t1);
    }
  };
  A.StatefulComponent.prototype = {
    createElement$0(_) {
      return A.StatefulElement$(this);
    }
  };
  A._StateLifecycle.prototype = {
    _enumToString$0() {
      return "_StateLifecycle." + this._name;
    }
  };
  A.State.prototype = {
    initState$0() {
    },
    didUpdateComponent$1(oldComponent) {
      A._instanceType(this)._eval$1("State.T")._as(oldComponent);
    },
    setState$1(fn) {
      type$.void_Function._as(fn).call$0();
      this._framework$_element.markNeedsBuild$0();
    },
    dispose$0() {
    },
    set$_component(_component) {
      this._component = A._instanceType(this)._eval$1("State.T?")._as(_component);
    }
  };
  A.StatefulElement.prototype = {
    build$0() {
      return this._framework$_state.build$1(this);
    },
    _firstBuild$0() {
      var _this = this;
      if (_this._owner._isFirstBuild)
        _this._framework$_state.toString;
      _this._initState$0();
      _this.super$MultiChildElement$_firstBuild(null);
    },
    _initState$0() {
      var result, _this = this;
      try {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = true;
        result = _this._framework$_state.initState$0();
      } finally {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = false;
      }
      _this._framework$_state.toString;
    },
    performRebuild$0() {
      var _this = this;
      if (_this._didChangeDependencies) {
        _this._framework$_state.toString;
        _this._didChangeDependencies = false;
      }
      _this.super$MultiChildElement$performRebuild();
    },
    update$1(newComponent) {
      var oldComponent, t1, t2, _this = this;
      type$.StatefulComponent._as(newComponent);
      _this.super$Element$update(newComponent);
      t1 = _this._framework$_state;
      t2 = t1._component;
      t2.toString;
      oldComponent = t2;
      _this._dirty = true;
      t1.set$_component(newComponent);
      try {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = true;
        _this._framework$_state.didUpdateComponent$1(oldComponent);
      } finally {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = false;
      }
      _this.rebuild$0();
    },
    deactivate$0() {
      this._framework$_state.toString;
      this.super$Element$deactivate();
    },
    unmount$0() {
      var _this = this;
      _this.super$Element$unmount();
      _this._framework$_state.dispose$0();
      _this._framework$_state._framework$_element = null;
      _this.set$_framework$_state(null);
    },
    didChangeDependencies$0() {
      this.super$Element$didChangeDependencies();
      this._didChangeDependencies = true;
    },
    set$_framework$_state(_state) {
      this._framework$_state = type$.nullable_State_StatefulComponent._as(_state);
    }
  };
  A._DomElement_MultiChildElement_RenderObjectElement.prototype = {
    _firstBuild$0() {
      var _this = this;
      if (_this.RenderObjectElement__renderObject == null) {
        _this.RenderObjectElement__renderObject = _this._parentRenderObjectElement.RenderObjectElement__renderObject.createChildRenderObject$0();
        _this.updateRenderObject$0();
      }
      _this.super$MultiChildElement$_firstBuild(new A._DomElement_MultiChildElement_RenderObjectElement__firstBuild_closure(_this, null));
    },
    update$1(newComponent) {
      this.super$Element$update(newComponent);
      this.updateRenderObject$0();
    },
    _didUpdateSlot$0() {
      this.super$Element$_didUpdateSlot();
      this.attachRenderObject$0();
    }
  };
  A._TextElement_NoChildElement_RenderObjectElement.prototype = {
    _firstBuild$0() {
      var _this = this;
      if (_this.RenderObjectElement__renderObject == null) {
        _this.RenderObjectElement__renderObject = _this._parentRenderObjectElement.RenderObjectElement__renderObject.createChildRenderObject$0();
        _this.updateRenderObject$0();
      }
      _this.super$NoChildElement$_firstBuild(new A._TextElement_NoChildElement_RenderObjectElement__firstBuild_closure(_this, null));
    },
    update$1(newComponent) {
      this.super$Element$update(newComponent);
      this.updateRenderObject$0();
    },
    _didUpdateSlot$0() {
      this.super$Element$_didUpdateSlot();
      this.attachRenderObject$0();
    }
  };
  A.__RootElement_SingleChildElement_RenderObjectElement.prototype = {
    _firstBuild$0() {
      var _this = this;
      if (_this.RenderObjectElement__renderObject == null)
        _this.RenderObjectElement__renderObject = _this._parentRenderObjectElement.RenderObjectElement__renderObject.createChildRenderObject$0();
      _this.super$SingleChildElement$_firstBuild(new A.__RootElement_SingleChildElement_RenderObjectElement__firstBuild_closure(_this, null));
    },
    update$1(newComponent) {
      this.super$Element$update(newComponent);
    },
    _didUpdateSlot$0() {
      this.super$Element$_didUpdateSlot();
      this.attachRenderObject$0();
    }
  };
  A.JasprConverter.prototype = {
    convert$1(source) {
      var t4, p, output,
        t1 = A._setArrayType([], type$.JSArray_ParseError),
        t2 = A._setArrayType([], type$.JSArray_Element_2),
        t3 = A._setArrayType([], type$.JSArray_nullable_Element);
      t2 = new A.TreeBuilder("http://www.w3.org/1999/xhtml", t2, new A.ActiveFormattingElements(t3));
      t2.reset$0(0);
      t3 = A.ListQueue$(type$.String);
      t4 = A._setArrayType([], type$.JSArray_int);
      t4 = new A.HtmlInputStream(A.codecName(null), null, t3, t4);
      t4.set$_rawChars(new A.CodeUnits(source));
      t4.charEncodingName = "utf-8";
      t4.charEncodingCertain = true;
      t4.reset$0(0);
      t3 = new A.HtmlTokenizer(t4, true, true, false, A.ListQueue$(type$.nullable_Token), new A.StringBuffer(""), new A.StringBuffer(""), new A.StringBuffer(""));
      t3.reset$0(0);
      p = new A.HtmlParser(false, t3, t2, t1);
      t3.parser = p;
      p._parse$0();
      t2 = t2.__TreeBuilder_document_A;
      t2 === $ && A.throwLateFieldNI("document");
      for (t1 = type$.WhereTypeIterable_Element, t3 = t1._eval$1("Iterable.E"), t3 = A.List_List$of(new A.WhereTypeIterable(B.JSArray_methods.get$first(A.List_List$of(new A.WhereTypeIterable(t2.get$children(0)._childNodes, t1), false, t3)).get$children(0)._childNodes, t1), false, t3), t1 = A._arrayInstanceType(t3), t3 = new J.ArrayIterator(t3, t3.length, t1._eval$1("ArrayIterator<1>")), t1 = t1._precomputed1, output = ""; t3.moveNext$0();) {
        t2 = t3.__interceptors$_current;
        output += this._convertElement$2(t2 == null ? t1._as(t2) : t2, source);
      }
      return B.JSString_methods.trim$0(output);
    },
    _convertElement$2(e, source) {
      var t1, noChildren, t2, sourceContainsParent, t3, t4, out, t5, t6, unsupportedAttrMap, specialAttrMap, t7, attrKey,
        eName = e.localName;
      if (!B.JSArray_methods.contains$1($._components, eName))
        return "";
      t1 = type$.JSArray_String;
      noChildren = B.JSArray_methods.contains$1(A._setArrayType(["br", "img"], t1), eName);
      t2 = A.S(eName);
      sourceContainsParent = B.JSString_methods.contains$1(source, "<" + t2);
      t3 = !sourceContainsParent;
      if (t3) {
        t4 = type$.WhereTypeIterable_Element;
        t4 = A.List_List$of(new A.WhereTypeIterable(e.get$children(0)._childNodes, t4), false, t4._eval$1("Iterable.E")).length === 0;
      } else
        t4 = false;
      if (t4)
        return "";
      if (sourceContainsParent)
        out = noChildren ? "\nimg(\n" : "\n" + t2 + "([";
      else
        out = "";
      t2 = e.get$nodes(0);
      if (!t2.get$isEmpty(t2))
        for (t2 = e.get$nodes(0)._list_proxy$_list, t4 = A._arrayInstanceType(t2), t2 = new J.ArrayIterator(t2, t2.length, t4._eval$1("ArrayIterator<1>")), t4 = t4._precomputed1; t2.moveNext$0();) {
          t5 = t2.__interceptors$_current;
          if (t5 == null)
            t5 = t4._as(t5);
          if (t5.get$nodeType(t5) === 3) {
            t6 = t5.get$text(t5);
            t6 = t6 == null ? null : B.JSString_methods.trim$0(t6).length !== 0;
            t6 = t6 === true;
          } else
            t6 = false;
          if (t6) {
            t5 = t5.get$text(t5);
            t5.toString;
            out += "text('" + A.stringReplaceAllUnchecked(t5, "\n", "") + "'),";
          }
        }
      for (t2 = type$.WhereTypeIterable_Element, t2 = A.List_List$of(new A.WhereTypeIterable(e.get$children(0)._childNodes, t2), false, t2._eval$1("Iterable.E")), t4 = A._arrayInstanceType(t2), t2 = new J.ArrayIterator(t2, t2.length, t4._eval$1("ArrayIterator<1>")), t4 = t4._precomputed1; t2.moveNext$0();) {
        t5 = t2.__interceptors$_current;
        out += this._convertElement$2(t5 == null ? t4._as(t5) : t5, source);
      }
      if (t3)
        return out;
      if (!noChildren)
        out += "],";
      if (e.get$className(0).length !== 0)
        out = this.classesAsList ? out + ("classes: ['" + new A.MappedListIterable(A._setArrayType(e.get$className(0).split(" "), t1), type$.String_Function_String._as(new A.JasprConverter__convertElement_closure()), type$.MappedListIterable_String_String).join$1(0, "', '") + "',].join(' '),") : out + ("classes: '" + e.get$className(0) + "',");
      t1 = type$.String;
      unsupportedAttrMap = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      specialAttrMap = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t1 = e.attributes.get$entries(0), t1 = t1.get$iterator(t1), t2 = eName === "form", t3 = eName === "button", t4 = eName === "input"; t1.moveNext$0();) {
        t5 = t1.get$current();
        t6 = t5.key;
        t7 = J.getInterceptor$(t6);
        if (t7.$eq(t6, "class"))
          continue;
        attrKey = t7.toString$0(t6);
        if (B.JSArray_methods.contains$1($._unsupportedAttributes, attrKey)) {
          unsupportedAttrMap.$indexSet(0, attrKey, t5.value);
          continue;
        }
        if (t4 && attrKey === "type") {
          specialAttrMap.$indexSet(0, attrKey, "InputType." + A.ReCase$(t5.value)._getSnakeCase$0());
          continue;
        }
        if (t3 && attrKey === "type") {
          specialAttrMap.$indexSet(0, attrKey, "ButtonType." + A.ReCase$(t5.value)._getSnakeCase$0());
          continue;
        }
        if (t2 && attrKey === "method") {
          specialAttrMap.$indexSet(0, attrKey, "FormMethod." + A.ReCase$(t5.value)._getSnakeCase$0());
          continue;
        }
        if (attrKey === "for")
          attrKey = "htmlFor";
        out += attrKey + ": '" + A.S(t5.value) + "',";
      }
      if (specialAttrMap.__js_helper$_length !== 0)
        for (t1 = specialAttrMap.get$entries(0), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          t2 = t1.get$current();
          out += A.S(t2.key) + ": " + A.S(t2.value) + ",";
        }
      if (unsupportedAttrMap.__js_helper$_length !== 0) {
        out += "attributes: {";
        for (t1 = unsupportedAttrMap.get$entries(0), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          t2 = t1.get$current();
          out += "'" + A.S(t2.key) + "': '" + A.S(t2.value) + "',";
        }
        out += "},";
      }
      return out + "),\n";
    }
  };
  A.JasprConverter__convertElement_closure.prototype = {
    call$1(e) {
      var t1;
      A._asString(e);
      t1 = A.RegExp_RegExp("\\s+", false);
      return B.JSString_methods.trim$0(A.stringReplaceAllUnchecked(e, t1, " "));
    },
    $signature: 8
  };
  A.App.prototype = {
    createState$0() {
      return new A.AppState(B._StateLifecycle_0);
    }
  };
  A.AppState.prototype = {
    convert$0() {
      var t2, rawInput,
        t1 = this._framework$_element;
      t1.toString;
      t2 = $.$get$inputProvider();
      t1 = A.ProviderScope__scopeOf(t1, false);
      t1 = A.InheritedElement.prototype.get$component.call(t1);
      rawInput = type$.ProviderListenable_String._as(t2).read$1(0, t1.container);
      if (B.JSString_methods.trim$0(rawInput).length === 0)
        return;
      this.setState$1(new A.AppState_convert_closure(this, rawInput));
    },
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$AppState(context), type$._SyncStarIterable_Component);
    },
    build$body$AppState($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t3, t4, t1, t2;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.String;
                t2 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
                t2.$indexSet(0, "src", "img/jaspr-64.png");
                t3 = type$.JSArray_Component;
                t2 = A._setArrayType([new A.DomComponent("img", null, "h-7 pr-3", null, t2, null, null, null, null), new A.Text("Jaspr HTML Converter", false, null)], t3);
                t4 = type$.JSArray_String;
                $async$goto = 2;
                return $async$iterator._async$_current = A.div(A._setArrayType([A.div(A._setArrayType([new A.DomComponent("h3", null, B.JSArray_methods.join$1(A._setArrayType(["text-lg", "font-bold", "leading-6", "inline-flex", "items-center", "text-gray-900"], t4), " "), null, null, null, null, t2, null), A.div(A._setArrayType([new A.PrimaryButton("Convert", $async$self.get$convert(), B.ButtonSize_3, "shadow-sm text-white font-medium bg-indigo-600 hover:bg-indigo-500 w-24", null), A.SecondaryButton$("ml-3 ring-1 ring-inset ring-gray-100 w-24", "Clear", new A.AppState_build_closure($async$self, context), B.ButtonSize_3)], t3), B.JSArray_methods.join$1(A._setArrayType(["mt-3", "sm:ml-4", "sm:mt-0"], t4), " "), null)], t3), B.JSArray_methods.join$1(A._setArrayType(["border-b", "border-gray-200", "pb-5", "sm:flex", "sm:items-center", "sm:justify-between"], t4), " "), null), A.div(A._setArrayType([new A.ConverterOptions(null)], t3), B.JSArray_methods.join$1(A._setArrayType(["pt-4"], t4), " "), null), A.div(A._setArrayType([new A.DartInputArea(A.ProviderContext_watch(context, $.$get$inputProvider(), t1), new A.AppState_build_closure0(context), null), new A.JasprRenderArea(A.ProviderContext_watch(context, $.$get$outputProvider(), t1), null)], t3), "grid grid-cols-2 gap-2 pt-5 h-5/6", null)], t3), "h-screen w-screen p-5", null), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    }
  };
  A.AppState_convert_closure.prototype = {
    call$0() {
      var t3,
        t1 = this.$this,
        t2 = t1._framework$_element;
      t2.toString;
      t3 = $.$get$classAsListProvider();
      t2 = A.ProviderScope__scopeOf(t2, false);
      t2 = A.InheritedElement.prototype.get$component.call(t2);
      t2 = type$.ProviderListenable_bool._as(t3).read$1(0, t2.container);
      t1 = t1._framework$_element;
      t1.toString;
      t3 = $.$get$outputProvider().get$notifier();
      t1 = A.ProviderScope__scopeOf(t1, false);
      t1 = A.InheritedElement.prototype.get$component.call(t1);
      t1 = type$.ProviderListenable_StateController_String._as(t3).read$1(0, t1.container);
      J.getInterceptor$z(t1).super$StateNotifier$state(t1, A.instanceType(t1)._precomputed1._as(new A.JasprConverter(t2).convert$1(this.rawInput)));
    },
    $signature: 1
  };
  A.AppState_build_closure.prototype = {
    call$0() {
      this.$this.setState$1(new A.AppState_build__closure(this.context));
    },
    $signature: 1
  };
  A.AppState_build__closure.prototype = {
    call$0() {
      var t4,
        t1 = this.context,
        t2 = $.$get$inputProvider().get$notifier(),
        t3 = A.ProviderScope__scopeOf(t1, false);
      t3 = A.InheritedElement.prototype.get$component.call(t3);
      t4 = type$.ProviderListenable_StateController_String;
      t3 = t4._as(t2).read$1(0, t3.container);
      J.getInterceptor$z(t3).super$StateNotifier$state(t3, A.instanceType(t3)._precomputed1._as(""));
      t3 = $.$get$outputProvider().get$notifier();
      t1 = A.ProviderScope__scopeOf(t1, false);
      t1 = A.InheritedElement.prototype.get$component.call(t1);
      t1 = t4._as(t3).read$1(0, t1.container);
      J.getInterceptor$z(t1).super$StateNotifier$state(t1, A.instanceType(t1)._precomputed1._as(""));
    },
    $signature: 1
  };
  A.AppState_build_closure0.prototype = {
    call$1(value) {
      var t1, t2;
      A._asString(value);
      t1 = $.$get$inputProvider().get$notifier();
      t2 = A.ProviderScope__scopeOf(this.context, false);
      t2 = A.InheritedElement.prototype.get$component.call(t2);
      t2 = type$.ProviderListenable_StateController_String._as(t1).read$1(0, t2.container);
      J.getInterceptor$z(t2).super$StateNotifier$state(t2, A.instanceType(t2)._precomputed1._as(value));
    },
    $signature: 22
  };
  A.DartInputArea.prototype = {
    createState$0() {
      return new A.DartInputAreaState(B._StateLifecycle_0);
    }
  };
  A.DartInputAreaState.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$DartInputAreaState(context), type$._SyncStarIterable_Component);
    },
    build$body$DartInputAreaState($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t10, t1, t2, t3, t4, t5, t6, t7, t8, t9;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                t2 = type$.JSArray_String;
                t3 = A.label(A._setArrayType([new A.Text("Raw HTML:", false, null)], t1), B.JSArray_methods.join$1(A._setArrayType(["block", "text-md", "font-bold", "leading-6", "text-gray-900"], t2), " "), "input-area");
                t4 = A.div(A._setArrayType([A.SecondaryButton$("ring-1 ring-inset ring-gray-200 w-22", "Hello World", new A.DartInputAreaState_build_closure($async$self, context), B.ButtonSize_1), A.SecondaryButton$("ring-1 ring-inset ring-gray-200 w-22", "Example 1", new A.DartInputAreaState_build_closure0($async$self, context), B.ButtonSize_1), A.SecondaryButton$("ring-1 ring-inset ring-gray-200 w-22", "Example 2", new A.DartInputAreaState_build_closure1($async$self, context), B.ButtonSize_1), A.SecondaryButton$("ring-1 ring-inset ring-gray-200 w-22", "Example 3", new A.DartInputAreaState_build_closure2($async$self, context), B.ButtonSize_1)], t1), B.JSArray_methods.join$1(A._setArrayType(["py-2", "space-x-3"], t2), " "), null);
                t5 = A._setArrayType([new A.Text($async$self._component.input, false, null)], t1);
                t6 = B.JSArray_methods.join$1(A._setArrayType(["resize-none", "block", "w-full", "h-full", "rounded-md", "border-0", "p-3", "text-gray-900", "shadow-sm", "ring-1", "ring-inset", "ring-gray-300", "placeholder:text-gray-400", "focus:ring-2", "focus:ring-inset", "focus:ring-indigo-600", "font-mono", "text-sm"], t2), " ");
                t7 = $async$self._component.onInput;
                t8 = type$.String;
                t9 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t8, t8), t8, t8);
                t9.$indexSet(0, "name", "input-area");
                t9.$indexSet(0, "placeholder", "Enter raw HTML here...");
                t9.$indexSet(0, "required", "");
                t10 = A.LinkedHashMap_LinkedHashMap$_empty(t8, type$.void_Function_Event);
                t10.addAll$1(0, A.events__events$closure().call$2$2$onChange$onInput(null, t7, t8, t8));
                $async$goto = 2;
                return $async$iterator._async$_current = A.div(A._setArrayType([t3, t4, A.div(A._setArrayType([new A.DomComponent("textarea", "input-area", t6, null, t9, t10, null, t5, null)], t1), B.JSArray_methods.join$1(A._setArrayType(["mt-2", "h-full"], t2), " "), null)], t1), "h-full", null), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    }
  };
  A.DartInputAreaState_build_closure.prototype = {
    call$0() {
      var t1, t2,
        _s33_ = "<div><h1>Hello, World!</h1></div>";
      B.TextAreaElement_methods.set$value(type$.TextAreaElement._as(window.document.querySelector("#input-area")), _s33_);
      t1 = $.$get$inputProvider().get$notifier();
      t2 = A.ProviderScope__scopeOf(this.context, false);
      t2 = A.InheritedElement.prototype.get$component.call(t2);
      t2 = type$.ProviderListenable_StateController_String._as(t1).read$1(0, t2.container);
      J.getInterceptor$z(t2).super$StateNotifier$state(t2, A.instanceType(t2)._precomputed1._as(_s33_));
    },
    $signature: 1
  };
  A.DartInputAreaState_build_closure0.prototype = {
    call$0() {
      var t1, t2,
        _s408_ = '<div class="bg-white px-6 py-24 sm:py-32 lg:px-8">\n  <div class="mx-auto max-w-2xl text-center">\n    <h2 class="text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl">Support center</h2>\n    <p class="mt-6 text-lg leading-8 text-gray-600">Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure qui lorem cupidatat commodo. Elit sunt amet fugiat veniam occaecat fugiat aliqua.</p>\n  </div>\n</div>\n';
      B.TextAreaElement_methods.set$value(type$.TextAreaElement._as(window.document.querySelector("#input-area")), _s408_);
      t1 = $.$get$inputProvider().get$notifier();
      t2 = A.ProviderScope__scopeOf(this.context, false);
      t2 = A.InheritedElement.prototype.get$component.call(t2);
      t2 = type$.ProviderListenable_StateController_String._as(t1).read$1(0, t2.container);
      J.getInterceptor$z(t2).super$StateNotifier$state(t2, A.instanceType(t2)._precomputed1._as(_s408_));
    },
    $signature: 1
  };
  A.DartInputAreaState_build_closure1.prototype = {
    call$0() {
      var t1, t2,
        _s943_ = '<div class="bg-white">\n  <div class="px-6 py-24 sm:px-6 sm:py-32 lg:px-8">\n    <div class="mx-auto max-w-2xl text-center">\n      <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">Boost your productivity.<br>Start using our app today.</h2>\n      <p class="mx-auto mt-6 max-w-xl text-lg leading-8 text-gray-600">Incididunt sint fugiat pariatur cupidatat consectetur sit cillum anim id veniam aliqua proident excepteur commodo do ea.</p>\n      <div class="mt-10 flex items-center justify-center gap-x-6">\n        <a href="#" class="rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Get started</a>\n        <a href="#" class="text-sm font-semibold leading-6 text-gray-900">Learn more <span aria-hidden="true">\u2192</span></a>\n      </div>\n    </div>\n  </div>\n</div>\n';
      B.TextAreaElement_methods.set$value(type$.TextAreaElement._as(window.document.querySelector("#input-area")), _s943_);
      t1 = $.$get$inputProvider().get$notifier();
      t2 = A.ProviderScope__scopeOf(this.context, false);
      t2 = A.InheritedElement.prototype.get$component.call(t2);
      t2 = type$.ProviderListenable_StateController_String._as(t1).read$1(0, t2.container);
      J.getInterceptor$z(t2).super$StateNotifier$state(t2, A.instanceType(t2)._precomputed1._as(_s943_));
    },
    $signature: 1
  };
  A.DartInputAreaState_build_closure2.prototype = {
    call$0() {
      var t1, t2,
        _s1438_ = '<div class="bg-white py-16 sm:py-24 lg:py-32">\n  <div class="mx-auto grid max-w-7xl grid-cols-1 gap-10 px-6 lg:grid-cols-12 lg:gap-8 lg:px-8">\n    <div class="max-w-xl text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl lg:col-span-7">\n      <h2 class="inline sm:block lg:inline xl:block">Want product news and updates?</h2>\n      <p class="inline sm:block lg:inline xl:block">Sign up for our newsletter.</p>\n    </div>\n    <form class="w-full max-w-md lg:col-span-5 lg:pt-2">\n      <div class="flex gap-x-4">\n        <label for="email-address" class="sr-only">Email address</label>\n        <input id="email-address" name="email" type="email" autocomplete="email" required class="min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="Enter your email">\n        <button type="submit" class="flex-none rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Subscribe</button>\n      </div>\n      <p class="mt-4 text-sm leading-6 text-gray-900">We care about your data. Read our <a href="#" class="font-semibold text-indigo-600 hover:text-indigo-500">privacy&nbsp;policy</a>.</p>\n    </form>\n  </div>\n</div>\n';
      B.TextAreaElement_methods.set$value(type$.TextAreaElement._as(window.document.querySelector("#input-area")), _s1438_);
      t1 = $.$get$inputProvider().get$notifier();
      t2 = A.ProviderScope__scopeOf(this.context, false);
      t2 = A.InheritedElement.prototype.get$component.call(t2);
      t2 = type$.ProviderListenable_StateController_String._as(t1).read$1(0, t2.container);
      J.getInterceptor$z(t2).super$StateNotifier$state(t2, A.instanceType(t2)._precomputed1._as(_s1438_));
    },
    $signature: 1
  };
  A.ConverterOptions.prototype = {
    createState$0() {
      return new A.ConverterOptionsState(B._StateLifecycle_0);
    }
  };
  A.ConverterOptionsState.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$ConverterOptionsState(context), type$._SyncStarIterable_Component);
    },
    build$body$ConverterOptionsState($async$context) {
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return $async$iterator._async$_current = new A.BoolConvertorOption(null), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    }
  };
  A.BoolConvertorOption.prototype = {
    createState$0() {
      return new A.BoolConvertorOptionState(B._StateLifecycle_0);
    }
  };
  A.BoolConvertorOptionState.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$BoolConvertorOptionState(context), type$._SyncStarIterable_Component);
    },
    build$body$BoolConvertorOptionState($async$context) {
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, t4, t5, t6;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                t2 = A.label(A._setArrayType([new A.Text("Select all", false, null)], t1), "sr-only", "select-all");
                t3 = A._setArrayType([], t1);
                t4 = J.toString$0$(A.ProviderContext_watch(context, $.$get$classAsListProvider(), type$.bool));
                t5 = type$.String;
                t6 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t5, t5), t5, t5);
                t6.$indexSet(0, "type", "checkbox");
                t6.$indexSet(0, "name", "select-all");
                t6.$indexSet(0, "value", t4);
                t4 = A.LinkedHashMap_LinkedHashMap$_empty(t5, type$.void_Function_Event);
                t5 = type$.dynamic;
                t4.addAll$1(0, A.events__events$closure().call$2$2$onChange$onInput(new A.BoolConvertorOptionState_build_closure(context), null, t5, t5));
                $async$goto = 2;
                return $async$iterator._async$_current = A.span(A._setArrayType([A.span(A._setArrayType([t2, new A.DomComponent("input", "select-all", "h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600", null, t6, t4, null, t3, null)], t1), "inline-flex items-center rounded-l-md border border-gray-300 bg-white px-2 py-2"), A.label(A._setArrayType([new A.Text("Select message type", false, null)], t1), "sr-only", "message-type"), new A.DomComponent("p", null, "-ml-px block w-full rounded-l-none rounded-r-md border-0 bg-white py-1.5 pl-3 pr-3 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6", null, null, null, null, A._setArrayType([new A.Text("Classes as List", false, null)], t1), null)], t1), "inline-flex rounded-md shadow-sm"), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    }
  };
  A.BoolConvertorOptionState_build_closure.prototype = {
    call$1(value) {
      var t1 = $.$get$classAsListProvider().get$notifier(),
        t2 = A.ProviderScope__scopeOf(this.context, false);
      t2 = A.InheritedElement.prototype.get$component.call(t2);
      t2 = type$.ProviderListenable_StateController_bool._as(t1).read$1(0, t2.container);
      J.getInterceptor$z(t2).super$StateNotifier$state(t2, A.instanceType(t2)._precomputed1._as(A._asBool(value)));
    },
    $signature: 7
  };
  A.JasprRenderArea.prototype = {
    createState$0() {
      return new A.JasprRenderAreaState(B._StateLifecycle_0);
    }
  };
  A.JasprRenderAreaState.prototype = {
    copyToClipboard$0() {
      var t1, _this = this;
      _this.setState$1(new A.JasprRenderAreaState_copyToClipboard_closure(_this));
      t1 = window.navigator.clipboard;
      if (t1 != null) {
        t1 = t1.writeText(_this._component.output);
        t1.toString;
        A.promiseToFuture(t1, type$.dynamic);
      }
      A.Future_Future$delayed(B.Duration_1000000, new A.JasprRenderAreaState_copyToClipboard_closure0(_this), type$.Null);
    },
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$JasprRenderAreaState(context), type$._SyncStarIterable_Component);
    },
    build$body$JasprRenderAreaState($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t2, t3, copySvg, checkSvg, t4, t5, t6, t1;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = context._binding;
                t1.toString;
                B.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function._as(new A.JasprRenderAreaState_build_closure($async$self)));
                t1 = type$.JSArray_Component;
                t2 = A._setArrayType([A.path(A._setArrayType([], t1), "M12.9975 10.7499L11.7475 10.7499C10.6429 10.7499 9.74747 11.6453 9.74747 12.7499L9.74747 21.2499C9.74747 22.3544 10.6429 23.2499 11.7475 23.2499L20.2475 23.2499C21.352 23.2499 22.2475 22.3544 22.2475 21.2499L22.2475 12.7499C22.2475 11.6453 21.352 10.7499 20.2475 10.7499L18.9975 10.7499", B.C__NamedColor, "1.5"), A.path(A._setArrayType([], t1), "M17.9975 12.2499L13.9975 12.2499C13.4452 12.2499 12.9975 11.8022 12.9975 11.2499L12.9975 9.74988C12.9975 9.19759 13.4452 8.74988 13.9975 8.74988L17.9975 8.74988C18.5498 8.74988 18.9975 9.19759 18.9975 9.74988L18.9975 11.2499C18.9975 11.8022 18.5498 12.2499 17.9975 12.2499Z", B.C__NamedColor, "1.5"), A.path(A._setArrayType([], t1), "M13.7475 16.2499L18.2475 16.2499", null, "1.5"), A.path(A._setArrayType([], t1), "M13.7475 19.2499L18.2475 19.2499", null, "1.5")], t1);
                t3 = type$.String;
                t3 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t3, t3), t3, t3);
                t3.$indexSet(0, "viewBox", "0 0 32 32");
                copySvg = new A.DomComponent("svg", null, "h-6 w-6 stroke-slate-100 transition group-hover:rotate-[-4deg] group-hover:stroke-slate-600", null, t3, null, null, t2, null);
                checkSvg = A.span(A._setArrayType([new A.Text("\u2713", false, null)], t1), "px-1.5 py-0.5");
                t2 = type$.JSArray_String;
                t3 = A.label(A._setArrayType([new A.Text("Jaspr Component Code:", false, null)], t1), B.JSArray_methods.join$1(A._setArrayType(["block", "text-md", "font-bold", "leading-6", "text-gray-900"], t2), " "), "render-area");
                t4 = $async$self.copyInProgress ? checkSvg : copySvg;
                t4 = A._setArrayType([new A.Text("Copy Code", false, null), t4], t1);
                t5 = A._setArrayType(["inline-flex", "items-center", "gap-x-1.5", "rounded-md"], t2);
                if ($async$self._component.output.length === 0)
                  B.JSArray_methods.addAll$1(t5, A._setArrayType(["cursor-not-allowed", "bg-gray-300"], t2));
                if ($async$self._component.output.length !== 0) {
                  t6 = A._setArrayType(["cursor-pointer"], t2);
                  if ($async$self.copyInProgress)
                    t6.push("bg-green-600");
                  else
                    t6.push("bg-indigo-600");
                  B.JSArray_methods.addAll$1(t5, t6);
                }
                t5.push("text-white");
                t5.push("text-sm");
                t5.push("px-2");
                t5.push("py-0.5");
                t5.push("pl-4");
                t5.push("rounded");
                t4 = A.div(A._setArrayType([A.button(t4, null, B.JSArray_methods.join$1(t5, " "), null, null, $async$self.get$copyToClipboard(), B.ButtonType_button)], t1), B.JSArray_methods.join$1(A._setArrayType(["py-2", "space-x-3"], t2), " "), null);
                t5 = A._setArrayType([new A.DomComponent("code", null, "language-dart rounded-md", null, null, null, null, A._setArrayType([new A.Text($async$self._component.output, false, null)], t1), null)], t1);
                $async$goto = 2;
                return $async$iterator._async$_current = A.div(A._setArrayType([t3, t4, A.div(A._setArrayType([new A.DomComponent("pre", "render-area", B.JSArray_methods.join$1(A._setArrayType(["block", "w-full", "h-full", "rounded-md", "border-0", "p-3", "text-gray-900", "shadow-sm", "ring-1", "ring-inset", "ring-gray-300", "placeholder:text-gray-400", "focus:ring-2", "focus:ring-inset", "focus:ring-indigo-600", "font-mono", "text-sm"], t2), " "), null, null, null, null, t5, null)], t1), B.JSArray_methods.join$1(A._setArrayType(["mt-2", "h-full"], t2), " "), null)], t1), "h-full", new A.UniqueKey()), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    }
  };
  A.JasprRenderAreaState_copyToClipboard_closure.prototype = {
    call$0() {
      this.$this.copyInProgress = true;
    },
    $signature: 1
  };
  A.JasprRenderAreaState_copyToClipboard_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.setState$1(new A.JasprRenderAreaState_copyToClipboard__closure(t1));
    },
    $signature: 2
  };
  A.JasprRenderAreaState_copyToClipboard__closure.prototype = {
    call$0() {
      this.$this.copyInProgress = false;
    },
    $signature: 1
  };
  A.JasprRenderAreaState_build_closure.prototype = {
    call$0() {
      if (this.$this._component.output.length !== 0)
        self.hljs.highlightAll();
    },
    $signature: 1
  };
  A.inputProvider_closure.prototype = {
    call$1(ref) {
      type$.StateProviderRef_String._as(ref);
      return "<div><h1>Hello, World!</h1></div>";
    },
    $signature: 24
  };
  A.outputProvider_closure.prototype = {
    call$1(ref) {
      type$.StateProviderRef_String._as(ref);
      return "";
    },
    $signature: 24
  };
  A.classAsListProvider_closure.prototype = {
    call$1(ref) {
      type$.StateProviderRef_bool._as(ref);
      return false;
    },
    $signature: 50
  };
  A.ProviderScope.prototype = {
    createState$0() {
      return new A.ProviderScopeState("provider_scope", B._StateLifecycle_0);
    }
  };
  A.ProviderScopeState.prototype = {
    initState$0() {
      var t3, _this = this,
        $parent = _this._getParent$0(),
        t1 = $.$get$_bindingProvider(),
        t2 = _this._framework$_element._binding;
      t2.toString;
      t3 = t1.$ti._precomputed1;
      t3 = A._setArrayType([new A.ProviderOverride(t1, A.ValueProvider$(t3._as(t2), t3))], type$.JSArray_Override);
      _this._component.toString;
      B.JSArray_methods.addAll$1(t3, B.List_empty);
      _this._component.toString;
      t3 = A.ProviderContainer$(null, t3, $parent);
      _this.__ProviderScopeState_container_F !== $ && A.throwLateFieldAI("container");
      _this.__ProviderScopeState_container_F = t3;
      _this.super$_ProviderScopeState_State_SyncStateMixin$initState();
    },
    _getParent$0() {
      var t1, scope;
      this._component.toString;
      t1 = this._framework$_element.getElementForInheritedComponentOfExactType$1$0(type$.UncontrolledProviderScope);
      scope = t1 == null ? null : t1.get$component();
      return scope == null ? null : scope.container;
    },
    didUpdateComponent$1(oldComponent) {
      this.super$State$didUpdateComponent(type$.ProviderScope._as(oldComponent));
      this._framework1$_dirty = true;
      this._component.toString;
    },
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$ProviderScopeState(context), type$._SyncStarIterable_Component);
    },
    build$body$ProviderScopeState($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, t4;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                if ($async$self._framework1$_dirty) {
                  $async$self._framework1$_dirty = false;
                  t1 = $async$self.__ProviderScopeState_container_F;
                  t1 === $ && A.throwLateFieldNI("container");
                  t2 = $.$get$_bindingProvider();
                  t3 = context._binding;
                  t3.toString;
                  t4 = t2.$ti._precomputed1;
                  t4 = A._setArrayType([new A.ProviderOverride(t2, A.ValueProvider$(t4._as(t3), t4))], type$.JSArray_Override);
                  $async$self._component.toString;
                  B.JSArray_methods.addAll$1(t4, B.List_empty);
                  t1.updateOverrides$1(t4);
                }
                t1 = $async$self.__ProviderScopeState_container_F;
                t1 === $ && A.throwLateFieldNI("container");
                $async$goto = 2;
                return $async$iterator._async$_current = new A.UncontrolledProviderScope(t1, $async$self._component.child, null), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    },
    dispose$0() {
      var t1 = this.__ProviderScopeState_container_F;
      t1 === $ && A.throwLateFieldNI("container");
      t1.dispose$0();
      this.super$_ProviderScopeState_State_SyncStateMixin$dispose();
    },
    $isSyncState: 1
  };
  A.UncontrolledProviderScope.prototype = {
    createElement$0(_) {
      var t1 = A.HashMap_HashMap(type$.Element_3, type$.nullable_Object),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A._UncontrolledProviderScopeElement(t1, t2, this, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    }
  };
  A._UncontrolledProviderScopeElement.prototype = {
    get$component() {
      return A.InheritedElement.prototype.get$component.call(this);
    },
    mount$2($parent, prevSibling) {
      A.InheritedElement.prototype.get$component.call(this).container.get$scheduler().flutterVsyncs.add$1(0, this.get$_jasprVsync());
      this.super$SingleChildElement$mount($parent, prevSibling);
    },
    updateDependencies$2(dependent, aspect) {
      var t2,
        t1 = type$.nullable_ProviderDependencies._as(this.super$InheritedElement$getDependencies(dependent));
      if (t1 == null) {
        t1 = type$.ProviderListenable_dynamic;
        t2 = type$.ProviderSubscription_dynamic;
        t2 = new A.ProviderDependencies(dependent, A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
        t1 = t2;
      }
      this.super$InheritedElement$setDependencies(dependent, t1);
    },
    _jasprVsync$1(task) {
      this.set$_task(type$.void_Function._as(task));
      A.Future_Future$microtask(new A._UncontrolledProviderScopeElement__jasprVsync_closure(this), type$.Null);
    },
    setDependencies$2(dependent, value) {
      this.super$InheritedElement$setDependencies(dependent, type$.ProviderDependencies._as(value));
    },
    didRebuildDependent$1(dependent) {
      var t1 = type$.nullable_ProviderDependencies._as(this.super$InheritedElement$getDependencies(dependent));
      if (t1 != null)
        t1.didRebuild$0();
      this.super$InheritedElement$didRebuildDependent(dependent);
    },
    deactivateDependent$1(dependent) {
      var t1 = type$.nullable_ProviderDependencies._as(this.super$InheritedElement$getDependencies(dependent));
      if (t1 != null)
        t1.deactivate$0();
      this.super$InheritedElement$deactivateDependent(dependent);
    },
    unmount$0() {
      var _this = this;
      _this._framework1$_mounted = false;
      A.InheritedElement.prototype.get$component.call(_this).container.get$scheduler().flutterVsyncs.remove$1(0, _this.get$_jasprVsync());
      _this.super$Element$unmount();
    },
    build$0() {
      var t1 = this._task;
      if (t1 != null)
        t1.call$0();
      this.set$_task(null);
      return this.super$InheritedElement$build();
    },
    set$_task(_task) {
      this._task = type$.nullable_void_Function._as(_task);
    }
  };
  A._UncontrolledProviderScopeElement__jasprVsync_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this, t2 = type$.Null;
            case 2:
              // for condition
              if (!t1._owner._isFirstBuild) {
                // goto after for
                $async$goto = 3;
                break;
              }
              $async$goto = 4;
              return A._asyncAwait(A.Future_Future$microtask(new A._UncontrolledProviderScopeElement__jasprVsync__closure(), t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              if (t1._framework1$_mounted)
                t1.markNeedsBuild$0();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 32
  };
  A._UncontrolledProviderScopeElement__jasprVsync__closure.prototype = {
    call$0() {
    },
    $signature: 2
  };
  A._bindingProvider_closure.prototype = {
    call$1(_) {
      type$.ProviderRef_AppBinding._as(_);
      return A.throwExpression(A.UnimplementedError$("Overridden by ProviderScope."));
    },
    $signature: 52
  };
  A.ProviderDependencies.prototype = {
    didRebuild$0() {
      var t3, _i, _this = this,
        t1 = type$.ProviderSubscription_dynamic,
        t2 = A.List_List$of(_this.oldWatchers.get$values(0), true, t1);
      B.JSArray_methods.addAll$1(t2, _this.oldListeners.get$values(0));
      for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        J.close$0$z(t2[_i]);
      _this.set$oldWatchers(_this.watchers);
      t2 = type$.ProviderListenable_dynamic;
      _this.set$watchers(A.LinkedHashMap_LinkedHashMap$_empty(t2, t1));
      _this.set$oldListeners(_this.listeners);
      _this.set$listeners(A.LinkedHashMap_LinkedHashMap$_empty(t2, t1));
    },
    deactivate$0() {
      var t3, _i, _this = this,
        t1 = type$.ProviderSubscription_dynamic,
        t2 = A.List_List$of(_this.watchers.get$values(0), true, t1);
      B.JSArray_methods.addAll$1(t2, _this.oldWatchers.get$values(0));
      B.JSArray_methods.addAll$1(t2, _this.listeners.get$values(0));
      B.JSArray_methods.addAll$1(t2, _this.oldListeners.get$values(0));
      for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        J.close$0$z(t2[_i]);
      t2 = type$.ProviderListenable_dynamic;
      _this.set$oldWatchers(A.LinkedHashMap_LinkedHashMap$_empty(t2, t1));
      _this.set$watchers(A.LinkedHashMap_LinkedHashMap$_empty(t2, t1));
      _this.set$oldListeners(A.LinkedHashMap_LinkedHashMap$_empty(t2, t1));
      _this.set$listeners(A.LinkedHashMap_LinkedHashMap$_empty(t2, t1));
    },
    watch$1$1(target, $T) {
      var t1, container, t2, subscription, _this = this;
      $T._eval$1("ProviderListenable<0>")._as(target);
      t1 = A.ProviderScope__scopeOf(_this.dependent, true);
      container = A.InheritedElement.prototype.get$component.call(t1).container;
      t1 = _this.listenedContainer;
      if (t1 != null && t1 !== container)
        _this.deactivate$0();
      _this.listenedContainer = container;
      if (!_this.watchers.containsKey$1(target))
        if (_this.oldWatchers.containsKey$1(target)) {
          t1 = _this.watchers;
          t2 = _this.oldWatchers.remove$1(0, target);
          t2.toString;
          t1.$indexSet(0, target, t2);
        } else {
          subscription = $T._eval$1("ProviderListenable<0>")._as(target).addListener$5$fireImmediately$onDependencyMayHaveChanged$onError(container, $T._eval$1("~(0?,0)")._as(new A.ProviderDependencies_watch_closure(_this, target, $T)), false, null, null);
          _this.watchers.$indexSet(0, target, subscription);
        }
      return $T._as(_this.watchers.$index(0, target).read$0(0));
    },
    set$watchers(watchers) {
      this.watchers = type$.Map_of_ProviderListenable_dynamic_and_ProviderSubscription_dynamic._as(watchers);
    },
    set$listeners(listeners) {
      this.listeners = type$.Map_of_ProviderListenable_dynamic_and_ProviderSubscription_dynamic._as(listeners);
    },
    set$oldWatchers(oldWatchers) {
      this.oldWatchers = type$.Map_of_ProviderListenable_dynamic_and_ProviderSubscription_dynamic._as(oldWatchers);
    },
    set$oldListeners(oldListeners) {
      this.oldListeners = type$.Map_of_ProviderListenable_dynamic_and_ProviderSubscription_dynamic._as(oldListeners);
    }
  };
  A.ProviderDependencies_watch_closure.prototype = {
    call$2(_, v) {
      var t2,
        t1 = this.T;
      t1._eval$1("0?")._as(_);
      t1._as(v);
      t1 = this.$this;
      t2 = this.target;
      if (t1.watchers.$index(0, t2) == null && t1.oldWatchers.$index(0, t2) == null)
        return;
      t1.dependent.markNeedsBuild$0();
    },
    $signature() {
      return this.T._eval$1("~(0?,0)");
    }
  };
  A._ProviderScopeState_State_SyncStateMixin.prototype = {
    initState$0() {
      var t1, t2, t3, data, _this = this;
      _this.super$State$initState();
      t1 = _this._framework$_element._binding;
      t2 = _this.SyncScopeMixin_syncId;
      t1.SyncBinding__globalSyncRegistry.$indexSet(0, t2, _this);
      t3 = _this.__ProviderScopeState_container_F;
      t3 === $ && A.throwLateFieldNI("container");
      if (t3.depth === 0) {
        data = t1._rawState.$index(0, t2);
        _this.updateState$1(data);
      }
    },
    dispose$0() {
      var _this = this,
        t1 = _this._framework$_element._binding.SyncBinding__globalSyncRegistry,
        t2 = _this.SyncScopeMixin_syncId;
      if (t1.$index(0, t2) === _this)
        t1.remove$1(0, t2);
      _this.super$State$dispose();
    }
  };
  A._ProviderScopeState_State_SyncStateMixin_SyncScopeMixin.prototype = {};
  A._syncStateProvider_closure.prototype = {
    call$1(ref) {
      type$.StateProviderRef_Map_String_dynamic._as(ref);
      return A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
    },
    $signature: 53
  };
  A.SyncScopeMixin.prototype = {
    updateState$1(value) {
      var t1, t2, t3;
      type$.nullable_Map_dynamic_dynamic._as(value);
      t1 = this.__ProviderScopeState_container_F;
      t1 === $ && A.throwLateFieldNI("container");
      t1 = type$.ProviderListenable_StateController_Map_String_dynamic._as($.$get$_syncStateProvider().get$notifier()).read$1(0, t1);
      t2 = A.instanceType(t1);
      t3 = J.getInterceptor$z(t1);
      t3.super$StateNotifier$state(t1, t2._precomputed1._as(t2._eval$1("1(1)")._as(new A.SyncScopeMixin_updateState_closure(value)).call$1(A.StateNotifier.prototype.get$state.call(t3, t1))));
    }
  };
  A.SyncScopeMixin_updateState_closure.prototype = {
    call$1(s) {
      var t3,
        t1 = A.LinkedHashMap_LinkedHashMap$of(type$.Map_String_dynamic._as(s), type$.String, type$.dynamic),
        t2 = this.value;
      if (t2 != null)
        for (t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
          t3 = t2.get$current();
          t1.$indexSet(0, A._asString(t3.key), t3.value);
        }
      return t1;
    },
    $signature: 54
  };
  A.PrimaryButton.prototype = {
    createState$0() {
      return new A.PrimaryButtonState(B._StateLifecycle_0);
    }
  };
  A.PrimaryButtonState.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$PrimaryButtonState(context), type$._SyncStarIterable_Component);
    },
    build$body$PrimaryButtonState($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, t4;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                A.TailwindTheme_of(context);
                t1 = A._setArrayType([new A.Text($async$self._component.label, false, null)], type$.JSArray_Component);
                t2 = $async$self._component;
                t2 = B.Map_NY8co.$index(0, t2.size);
                t2.toString;
                t3 = B.Map_NY2nU.$index(0, $async$self._component.size);
                t3.toString;
                t4 = B.Map_NYGOj.$index(0, $async$self._component.size);
                t4.toString;
                $async$goto = 2;
                return $async$iterator._async$_current = A.button(t1, null, A.combineClasses(A._setArrayType([t2, t3, t4, string$.x20___fo, $async$self._component.classes], type$.JSArray_String)), false, null, $async$self._component.onClick, B.ButtonType_button), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    }
  };
  A.ButtonSize.prototype = {
    _enumToString$0() {
      return "ButtonSize." + this._name;
    }
  };
  A.SecondaryButton.prototype = {
    createState$0() {
      return new A.SecondaryButtonState(B._StateLifecycle_0);
    }
  };
  A.SecondaryButtonState.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$SecondaryButtonState(context), type$._SyncStarIterable_Component);
    },
    build$body$SecondaryButtonState($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, t4;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                A.TailwindTheme_of(context);
                t1 = A._setArrayType([new A.Text($async$self._component.label, false, null)], type$.JSArray_Component);
                t2 = $async$self._component;
                t2 = B.Map_NY8co.$index(0, t2.size);
                t2.toString;
                t3 = B.Map_NY2nU.$index(0, $async$self._component.size);
                t3.toString;
                t4 = B.Map_NYGOj.$index(0, $async$self._component.size);
                t4.toString;
                $async$goto = 2;
                return $async$iterator._async$_current = A.button(t1, null, A.combineClasses(A._setArrayType([t2, t3, t4, string$.x20___fo, $async$self._component.classes], type$.JSArray_String)), false, null, $async$self._component.onClick, B.ButtonType_button), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    }
  };
  A.ButtonStyle.prototype = {};
  A.TailwindThemeData.prototype = {};
  A.Context.prototype = {
    absolute$15(_, part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15) {
      var t1;
      A._validateArgList("absolute", A._setArrayType([part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15], type$.JSArray_nullable_String));
      t1 = this.style;
      t1 = t1.rootLength$1(part1) > 0 && !t1.isRootRelative$1(part1);
      if (t1)
        return part1;
      t1 = this._context$_current;
      return this.join$16(0, t1 == null ? A.current() : t1, part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15);
    },
    absolute$1(_, part1) {
      var _null = null;
      return this.absolute$15(0, part1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    join$16(_, part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15, part16) {
      var parts = A._setArrayType([part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15, part16], type$.JSArray_nullable_String);
      A._validateArgList("join", parts);
      return this.joinAll$1(new A.WhereTypeIterable(parts, type$.WhereTypeIterable_String));
    },
    join$2(_, part1, part2) {
      var _null = null;
      return this.join$16(0, part1, part2, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    joinAll$1(parts) {
      var t1, t2, t3, needsSeparator, isAbsoluteAndNotRootRelative, t4, t5, parsed, path, t6;
      type$.Iterable_String._as(parts);
      for (t1 = parts.$ti, t2 = t1._eval$1("bool(Iterable.E)")._as(new A.Context_joinAll_closure()), t3 = parts.get$iterator(0), t1 = new A.WhereIterator(t3, t2, t1._eval$1("WhereIterator<Iterable.E>")), t2 = this.style, needsSeparator = false, isAbsoluteAndNotRootRelative = false, t4 = ""; t1.moveNext$0();) {
        t5 = t3.get$current();
        if (t2.isRootRelative$1(t5) && isAbsoluteAndNotRootRelative) {
          parsed = A.ParsedPath_ParsedPath$parse(t5, t2);
          path = t4.charCodeAt(0) == 0 ? t4 : t4;
          t4 = B.JSString_methods.substring$2(path, 0, t2.rootLength$2$withDrive(path, true));
          parsed.root = t4;
          if (t2.needsSeparator$1(t4))
            B.JSArray_methods.$indexSet(parsed.separators, 0, t2.get$separator());
          t4 = "" + parsed.toString$0(0);
        } else if (t2.rootLength$1(t5) > 0) {
          isAbsoluteAndNotRootRelative = !t2.isRootRelative$1(t5);
          t4 = "" + t5;
        } else {
          t6 = t5.length;
          if (t6 !== 0) {
            if (0 >= t6)
              return A.ioore(t5, 0);
            t6 = t2.containsSeparator$1(t5[0]);
          } else
            t6 = false;
          if (!t6)
            if (needsSeparator)
              t4 += t2.get$separator();
          t4 += t5;
        }
        needsSeparator = t2.needsSeparator$1(t5);
      }
      return t4.charCodeAt(0) == 0 ? t4 : t4;
    },
    split$1(_, path) {
      var parsed = A.ParsedPath_ParsedPath$parse(path, this.style),
        t1 = parsed.parts,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("WhereIterable<1>");
      parsed.set$parts(A.List_List$of(new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Context_split_closure()), t3), true, t3._eval$1("Iterable.E")));
      t1 = parsed.root;
      if (t1 != null)
        B.JSArray_methods.insert$2(parsed.parts, 0, t1);
      return parsed.parts;
    },
    normalize$1(path) {
      var parsed;
      if (!this._needsNormalization$1(path))
        return path;
      parsed = A.ParsedPath_ParsedPath$parse(path, this.style);
      parsed.normalize$0();
      return parsed.toString$0(0);
    },
    _needsNormalization$1(path) {
      var t2, i, start, previous, t3, previousPrevious, codeUnit, t4,
        t1 = this.style,
        root = t1.rootLength$1(path);
      if (root !== 0) {
        if (t1 === $.$get$Style_windows())
          for (t2 = path.length, i = 0; i < root; ++i) {
            if (!(i < t2))
              return A.ioore(path, i);
            if (path.charCodeAt(i) === 47)
              return true;
          }
        start = root;
        previous = 47;
      } else {
        start = 0;
        previous = null;
      }
      for (t2 = new A.CodeUnits(path).__internal$_string, t3 = t2.length, i = start, previousPrevious = null; i < t3; ++i, previousPrevious = previous, previous = codeUnit) {
        if (!(i >= 0))
          return A.ioore(t2, i);
        codeUnit = t2.charCodeAt(i);
        if (t1.isSeparator$1(codeUnit)) {
          if (t1 === $.$get$Style_windows() && codeUnit === 47)
            return true;
          if (previous != null && t1.isSeparator$1(previous))
            return true;
          if (previous === 46)
            t4 = previousPrevious == null || previousPrevious === 46 || t1.isSeparator$1(previousPrevious);
          else
            t4 = false;
          if (t4)
            return true;
        }
      }
      if (previous == null)
        return true;
      if (t1.isSeparator$1(previous))
        return true;
      if (previous === 46)
        t1 = previousPrevious == null || t1.isSeparator$1(previousPrevious) || previousPrevious === 46;
      else
        t1 = false;
      if (t1)
        return true;
      return false;
    },
    relative$1(path) {
      var from, fromParsed, pathParsed, t3, t4, t5, _this = this,
        _s26_ = 'Unable to find a path to "',
        t1 = _this.style,
        t2 = t1.rootLength$1(path);
      if (t2 <= 0)
        return _this.normalize$1(path);
      t2 = _this._context$_current;
      from = t2 == null ? A.current() : t2;
      if (t1.rootLength$1(from) <= 0 && t1.rootLength$1(path) > 0)
        return _this.normalize$1(path);
      if (t1.rootLength$1(path) <= 0 || t1.isRootRelative$1(path))
        path = _this.absolute$1(0, path);
      if (t1.rootLength$1(path) <= 0 && t1.rootLength$1(from) > 0)
        throw A.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      fromParsed = A.ParsedPath_ParsedPath$parse(from, t1);
      fromParsed.normalize$0();
      pathParsed = A.ParsedPath_ParsedPath$parse(path, t1);
      pathParsed.normalize$0();
      t2 = fromParsed.parts;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        t2 = J.$eq$(t2[0], ".");
      } else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      t2 = fromParsed.root;
      t3 = pathParsed.root;
      if (t2 != t3)
        t2 = t2 == null || t3 == null || !t1.pathsEqual$2(t2, t3);
      else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      while (true) {
        t2 = fromParsed.parts;
        t3 = t2.length;
        if (t3 !== 0) {
          t4 = pathParsed.parts;
          t5 = t4.length;
          if (t5 !== 0) {
            if (0 >= t3)
              return A.ioore(t2, 0);
            t2 = t2[0];
            if (0 >= t5)
              return A.ioore(t4, 0);
            t4 = t1.pathsEqual$2(t2, t4[0]);
            t2 = t4;
          } else
            t2 = false;
        } else
          t2 = false;
        if (!t2)
          break;
        B.JSArray_methods.removeAt$1(fromParsed.parts, 0);
        B.JSArray_methods.removeAt$1(fromParsed.separators, 1);
        B.JSArray_methods.removeAt$1(pathParsed.parts, 0);
        B.JSArray_methods.removeAt$1(pathParsed.separators, 1);
      }
      t2 = fromParsed.parts;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        t2 = J.$eq$(t2[0], "..");
      } else
        t2 = false;
      if (t2)
        throw A.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      t2 = type$.String;
      B.JSArray_methods.insertAll$2(pathParsed.parts, 0, A.List_List$filled(fromParsed.parts.length, "..", false, t2));
      B.JSArray_methods.$indexSet(pathParsed.separators, 0, "");
      B.JSArray_methods.insertAll$2(pathParsed.separators, 1, A.List_List$filled(fromParsed.parts.length, t1.get$separator(), false, t2));
      t1 = pathParsed.parts;
      t2 = t1.length;
      if (t2 === 0)
        return ".";
      if (t2 > 1 && J.$eq$(B.JSArray_methods.get$last(t1), ".")) {
        B.JSArray_methods.removeLast$0(pathParsed.parts);
        t1 = pathParsed.separators;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        B.JSArray_methods.add$1(t1, "");
      }
      pathParsed.root = "";
      pathParsed.removeTrailingSeparators$0();
      return pathParsed.toString$0(0);
    },
    toUri$1(path) {
      var t2,
        t1 = this.style;
      if (t1.rootLength$1(path) <= 0)
        return t1.relativePathToUri$1(path);
      else {
        t2 = this._context$_current;
        return t1.absolutePathToUri$1(this.join$2(0, t2 == null ? A.current() : t2, path));
      }
    },
    prettyUri$1(uri) {
      var path, rel, _this = this,
        typedUri = A._parseUri(uri);
      if (typedUri.get$scheme() === "file" && _this.style === $.$get$Style_url())
        return typedUri.toString$0(0);
      else if (typedUri.get$scheme() !== "file" && typedUri.get$scheme() !== "" && _this.style !== $.$get$Style_url())
        return typedUri.toString$0(0);
      path = _this.normalize$1(_this.style.pathFromUri$1(A._parseUri(typedUri)));
      rel = _this.relative$1(path);
      return _this.split$1(0, rel).length > _this.split$1(0, path).length ? path : rel;
    }
  };
  A.Context_joinAll_closure.prototype = {
    call$1(part) {
      return A._asString(part) !== "";
    },
    $signature: 3
  };
  A.Context_split_closure.prototype = {
    call$1(part) {
      return A._asString(part).length !== 0;
    },
    $signature: 3
  };
  A._validateArgList_closure.prototype = {
    call$1(arg) {
      A._asStringQ(arg);
      return arg == null ? "null" : '"' + arg + '"';
    },
    $signature: 55
  };
  A.InternalStyle.prototype = {
    getRoot$1(path) {
      var t1,
        $length = this.rootLength$1(path);
      if ($length > 0)
        return B.JSString_methods.substring$2(path, 0, $length);
      if (this.isRootRelative$1(path)) {
        if (0 >= path.length)
          return A.ioore(path, 0);
        t1 = path[0];
      } else
        t1 = null;
      return t1;
    },
    relativePathToUri$1(path) {
      var segments, t2, _null = null,
        t1 = path.length;
      if (t1 === 0)
        return A._Uri__Uri(_null, _null, _null, _null);
      segments = A.Context_Context(this).split$1(0, path);
      t2 = t1 - 1;
      if (!(t2 >= 0))
        return A.ioore(path, t2);
      if (this.isSeparator$1(path.charCodeAt(t2)))
        B.JSArray_methods.add$1(segments, "");
      return A._Uri__Uri(_null, _null, segments, _null);
    },
    pathsEqual$2(path1, path2) {
      return path1 === path2;
    }
  };
  A.ParsedPath.prototype = {
    get$hasTrailingSeparator() {
      var t1 = this.parts;
      if (t1.length !== 0)
        t1 = J.$eq$(B.JSArray_methods.get$last(t1), "") || !J.$eq$(B.JSArray_methods.get$last(this.separators), "");
      else
        t1 = false;
      return t1;
    },
    removeTrailingSeparators$0() {
      var t1, t2, _this = this;
      while (true) {
        t1 = _this.parts;
        if (!(t1.length !== 0 && J.$eq$(B.JSArray_methods.get$last(t1), "")))
          break;
        B.JSArray_methods.removeLast$0(_this.parts);
        t1 = _this.separators;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      }
      t1 = _this.separators;
      t2 = t1.length;
      if (t2 !== 0)
        B.JSArray_methods.$indexSet(t1, t2 - 1, "");
    },
    normalize$0() {
      var t1, t2, leadingDoubles, _i, part, t3, _this = this,
        newParts = A._setArrayType([], type$.JSArray_String);
      for (t1 = _this.parts, t2 = t1.length, leadingDoubles = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        part = t1[_i];
        t3 = J.getInterceptor$(part);
        if (!(t3.$eq(part, ".") || t3.$eq(part, "")))
          if (t3.$eq(part, "..")) {
            t3 = newParts.length;
            if (t3 !== 0) {
              if (0 >= t3)
                return A.ioore(newParts, -1);
              newParts.pop();
            } else
              ++leadingDoubles;
          } else
            B.JSArray_methods.add$1(newParts, part);
      }
      if (_this.root == null)
        B.JSArray_methods.insertAll$2(newParts, 0, A.List_List$filled(leadingDoubles, "..", false, type$.String));
      if (newParts.length === 0 && _this.root == null)
        B.JSArray_methods.add$1(newParts, ".");
      _this.set$parts(newParts);
      t1 = _this.style;
      _this.set$separators(A.List_List$filled(newParts.length + 1, t1.get$separator(), true, type$.String));
      t2 = _this.root;
      if (t2 == null || newParts.length === 0 || !t1.needsSeparator$1(t2))
        B.JSArray_methods.$indexSet(_this.separators, 0, "");
      t2 = _this.root;
      if (t2 != null && t1 === $.$get$Style_windows()) {
        t2.toString;
        _this.root = A.stringReplaceAllUnchecked(t2, "/", "\\");
      }
      _this.removeTrailingSeparators$0();
    },
    toString$0(_) {
      var i, t2, t3, _this = this,
        t1 = _this.root;
      t1 = t1 != null ? "" + t1 : "";
      for (i = 0; i < _this.parts.length; ++i, t1 = t3) {
        t2 = _this.separators;
        if (!(i < t2.length))
          return A.ioore(t2, i);
        t2 = A.S(t2[i]);
        t3 = _this.parts;
        if (!(i < t3.length))
          return A.ioore(t3, i);
        t3 = t1 + t2 + A.S(t3[i]);
      }
      t1 += A.S(B.JSArray_methods.get$last(_this.separators));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    set$parts(parts) {
      this.parts = type$.List_String._as(parts);
    },
    set$separators(separators) {
      this.separators = type$.List_String._as(separators);
    }
  };
  A.PathException.prototype = {
    toString$0(_) {
      return "PathException: " + this.message;
    },
    $isException: 1
  };
  A.Style.prototype = {
    toString$0(_) {
      return this.get$name(this);
    }
  };
  A.PosixStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t2,
        t1 = path.length;
      if (t1 !== 0) {
        t2 = t1 - 1;
        if (!(t2 >= 0))
          return A.ioore(path, t2);
        t2 = path.charCodeAt(t2) !== 47;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    },
    rootLength$2$withDrive(path, withDrive) {
      var t1 = path.length;
      if (t1 !== 0) {
        if (0 >= t1)
          return A.ioore(path, 0);
        t1 = path.charCodeAt(0) === 47;
      } else
        t1 = false;
      if (t1)
        return 1;
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return false;
    },
    pathFromUri$1(uri) {
      var t1;
      if (uri.get$scheme() === "" || uri.get$scheme() === "file") {
        t1 = uri.get$path(uri);
        return A._Uri__uriDecode(t1, 0, t1.length, B.C_Utf8Codec, false);
      }
      throw A.wrapException(A.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
    },
    absolutePathToUri$1(path) {
      var parsed = A.ParsedPath_ParsedPath$parse(path, this),
        t1 = parsed.parts;
      if (t1.length === 0)
        B.JSArray_methods.addAll$1(t1, A._setArrayType(["", ""], type$.JSArray_String));
      else if (parsed.get$hasTrailingSeparator())
        B.JSArray_methods.add$1(parsed.parts, "");
      return A._Uri__Uri(null, null, parsed.parts, "file");
    },
    get$name() {
      return "posix";
    },
    get$separator() {
      return "/";
    }
  };
  A.UrlStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t2,
        t1 = path.length;
      if (t1 === 0)
        return false;
      t2 = t1 - 1;
      if (!(t2 >= 0))
        return A.ioore(path, t2);
      if (path.charCodeAt(t2) !== 47)
        return true;
      return B.JSString_methods.endsWith$1(path, "://") && this.rootLength$1(path) === t1;
    },
    rootLength$2$withDrive(path, withDrive) {
      var i, codeUnit, index,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      if (0 >= t1)
        return A.ioore(path, 0);
      if (path.charCodeAt(0) === 47)
        return 1;
      for (i = 0; i < t1; ++i) {
        codeUnit = path.charCodeAt(i);
        if (codeUnit === 47)
          return 0;
        if (codeUnit === 58) {
          if (i === 0)
            return 0;
          index = B.JSString_methods.indexOf$2(path, "/", B.JSString_methods.startsWith$2(path, "//", i + 1) ? i + 3 : i);
          if (index <= 0)
            return t1;
          if (!withDrive || t1 < index + 3)
            return index;
          if (!B.JSString_methods.startsWith$1(path, "file://"))
            return index;
          t1 = A.driveLetterEnd(path, index + 1);
          return t1 == null ? index : t1;
        }
      }
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      var t1 = path.length;
      if (t1 !== 0) {
        if (0 >= t1)
          return A.ioore(path, 0);
        t1 = path.charCodeAt(0) === 47;
      } else
        t1 = false;
      return t1;
    },
    pathFromUri$1(uri) {
      return uri.toString$0(0);
    },
    relativePathToUri$1(path) {
      return A.Uri_parse(path);
    },
    absolutePathToUri$1(path) {
      return A.Uri_parse(path);
    },
    get$name() {
      return "url";
    },
    get$separator() {
      return "/";
    }
  };
  A.WindowsStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47 || codeUnit === 92;
    },
    needsSeparator$1(path) {
      var t2,
        t1 = path.length;
      if (t1 === 0)
        return false;
      t2 = t1 - 1;
      if (!(t2 >= 0))
        return A.ioore(path, t2);
      t2 = path.charCodeAt(t2);
      return !(t2 === 47 || t2 === 92);
    },
    rootLength$2$withDrive(path, withDrive) {
      var t2, index,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      if (0 >= t1)
        return A.ioore(path, 0);
      if (path.charCodeAt(0) === 47)
        return 1;
      if (path.charCodeAt(0) === 92) {
        if (t1 >= 2) {
          if (1 >= t1)
            return A.ioore(path, 1);
          t2 = path.charCodeAt(1) !== 92;
        } else
          t2 = true;
        if (t2)
          return 1;
        index = B.JSString_methods.indexOf$2(path, "\\", 2);
        if (index > 0) {
          index = B.JSString_methods.indexOf$2(path, "\\", index + 1);
          if (index > 0)
            return index;
        }
        return t1;
      }
      if (t1 < 3)
        return 0;
      if (!A.isAlphabetic(path.charCodeAt(0)))
        return 0;
      if (path.charCodeAt(1) !== 58)
        return 0;
      t1 = path.charCodeAt(2);
      if (!(t1 === 47 || t1 === 92))
        return 0;
      return 3;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return this.rootLength$1(path) === 1;
    },
    pathFromUri$1(uri) {
      var path, t1;
      if (uri.get$scheme() !== "" && uri.get$scheme() !== "file")
        throw A.wrapException(A.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
      path = uri.get$path(uri);
      if (uri.get$host(uri) === "") {
        if (path.length >= 3 && B.JSString_methods.startsWith$1(path, "/") && A.driveLetterEnd(path, 1) != null)
          path = B.JSString_methods.replaceFirst$2(path, "/", "");
      } else
        path = "\\\\" + uri.get$host(uri) + path;
      t1 = A.stringReplaceAllUnchecked(path, "/", "\\");
      return A._Uri__uriDecode(t1, 0, t1.length, B.C_Utf8Codec, false);
    },
    absolutePathToUri$1(path) {
      var rootParts, t2,
        parsed = A.ParsedPath_ParsedPath$parse(path, this),
        t1 = parsed.root;
      t1.toString;
      if (B.JSString_methods.startsWith$1(t1, "\\\\")) {
        rootParts = new A.WhereIterable(A._setArrayType(t1.split("\\"), type$.JSArray_String), type$.bool_Function_String._as(new A.WindowsStyle_absolutePathToUri_closure()), type$.WhereIterable_String);
        B.JSArray_methods.insert$2(parsed.parts, 0, rootParts.get$last(0));
        if (parsed.get$hasTrailingSeparator())
          B.JSArray_methods.add$1(parsed.parts, "");
        return A._Uri__Uri(rootParts.get$first(0), null, parsed.parts, "file");
      } else {
        if (parsed.parts.length === 0 || parsed.get$hasTrailingSeparator())
          B.JSArray_methods.add$1(parsed.parts, "");
        t1 = parsed.parts;
        t2 = parsed.root;
        t2.toString;
        t2 = A.stringReplaceAllUnchecked(t2, "/", "");
        B.JSArray_methods.insert$2(t1, 0, A.stringReplaceAllUnchecked(t2, "\\", ""));
        return A._Uri__Uri(null, null, parsed.parts, "file");
      }
    },
    codeUnitsEqual$2(codeUnit1, codeUnit2) {
      var upperCase1;
      if (codeUnit1 === codeUnit2)
        return true;
      if (codeUnit1 === 47)
        return codeUnit2 === 92;
      if (codeUnit1 === 92)
        return codeUnit2 === 47;
      if ((codeUnit1 ^ codeUnit2) !== 32)
        return false;
      upperCase1 = codeUnit1 | 32;
      return upperCase1 >= 97 && upperCase1 <= 122;
    },
    pathsEqual$2(path1, path2) {
      var t1, t2, i;
      if (path1 === path2)
        return true;
      t1 = path1.length;
      t2 = path2.length;
      if (t1 !== t2)
        return false;
      for (i = 0; i < t1; ++i) {
        if (!(i < t2))
          return A.ioore(path2, i);
        if (!this.codeUnitsEqual$2(path1.charCodeAt(i), path2.charCodeAt(i)))
          return false;
      }
      return true;
    },
    get$name() {
      return "windows";
    },
    get$separator() {
      return "\\";
    }
  };
  A.WindowsStyle_absolutePathToUri_closure.prototype = {
    call$1(part) {
      return A._asString(part) !== "";
    },
    $signature: 3
  };
  A.ReCase.prototype = {
    _groupIntoWords$1(text) {
      var t1, t2, t3, t4, i, char, nextChar, t5, isEndOfWord,
        sb = new A.StringBuffer(""),
        words = A._setArrayType([], type$.JSArray_String);
      for (t1 = text.length, t2 = this.symbolSet, t3 = this._upperAlphaRegex._nativeRegExp, t4 = text.toUpperCase() !== text, i = 0; i < t1;) {
        char = text[i];
        ++i;
        if (i === t1)
          nextChar = null;
        else {
          if (!(i < t1))
            return A.ioore(text, i);
          nextChar = text[i];
        }
        if (t2.contains$1(0, char))
          continue;
        t5 = sb._contents += char;
        if (nextChar != null)
          isEndOfWord = t3.test(nextChar) && t4 || t2.contains$1(0, nextChar);
        else
          isEndOfWord = true;
        if (isEndOfWord) {
          B.JSArray_methods.add$1(words, t5.charCodeAt(0) == 0 ? t5 : t5);
          sb._contents = "";
        }
      }
      return words;
    },
    _getSnakeCase$0() {
      var t2, t3,
        t1 = this.__ReCase__words_A;
      t1 === $ && A.throwLateFieldNI("_words");
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,String>");
      return B.JSArray_methods.join$1(A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.ReCase__getSnakeCase_closure()), t3), true, t3._eval$1("ListIterable.E")), "_");
    },
    set$__ReCase__words_A(__ReCase__words_A) {
      this.__ReCase__words_A = type$.List_String._as(__ReCase__words_A);
    }
  };
  A.ReCase__getSnakeCase_closure.prototype = {
    call$1(word) {
      return A._asString(word).toLowerCase();
    },
    $signature: 8
  };
  A.AlwaysAliveProviderListenable.prototype = {};
  A.AlwaysAliveProviderBase.prototype = {};
  A._StateReader.prototype = {
    _create$0() {
      var element, element0, _this = this,
        t1 = _this.origin;
      if (t1.$eq(0, $._circularDependencyLock))
        throw A.wrapException(new A.CircularDependencyError());
      if ($._circularDependencyLock == null)
        $._circularDependencyLock = t1;
      try {
        element0 = _this.override.createElement$0(0);
        element0.set$_provider(_this.override);
        element0.__ProviderElementBase__origin_A = t1;
        element0.__ProviderElementBase__container_F !== $ && A.throwLateFieldAI("_container");
        element0.__ProviderElementBase__container_F = _this.container;
        element0.mount$0();
        element = element0;
        element._framework0$_state.map$1$2$data$error(0, new A._StateReader__create_closure(_this), new A._StateReader__create_closure0(_this), type$.void);
        return element;
      } finally {
        if (J.$eq$($._circularDependencyLock, t1))
          $._circularDependencyLock = null;
      }
    }
  };
  A._StateReader__create_closure.prototype = {
    call$1(data) {
      var observer, t1, t2, t3, t4, t5, t6, t7, t8, _i;
      for (t1 = this.$this, t2 = t1.container, t3 = t2.observers, t4 = t3.length, t1 = t1.origin, t5 = data.state, t6 = type$.ProviderBase_nullable_Object, t7 = type$.nullable_Object, t8 = type$.ProviderContainer, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
        observer = t3[_i];
        A.runTernaryGuarded(observer.get$didAddProvider(), t1, t5, t2, t6, t7, t8);
      }
    },
    $signature: 56
  };
  A._StateReader__create_closure0.prototype = {
    call$1(error) {
      var observer, observer0, t1, t2, t3, t4, t5, t6, t7, _i, t8, t9, t10;
      for (t1 = this.$this, t2 = t1.container, t3 = t2.observers, t4 = t3.length, t1 = t1.origin, t5 = type$.ProviderBase_nullable_Object, t6 = type$.Null, t7 = type$.ProviderContainer, _i = 0; t8 = t3.length, _i < t8; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
        observer = t3[_i];
        A.runTernaryGuarded(observer.get$didAddProvider(), t1, null, t2, t5, t6, t7);
      }
      for (t4 = error.error, t6 = error.stackTrace, t9 = type$.Object, t10 = type$.StackTrace, _i = 0; _i < t3.length; t3.length === t8 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
        observer0 = t3[_i];
        A.runQuaternaryGuarded(observer0.get$providerDidFail(), t1, t4, t6, t2, t5, t9, t10, t7);
      }
    },
    $signature: 57
  };
  A.ProviderContainer.prototype = {
    ProviderContainer$3$observers$overrides$parent(observers, overrides, $parent) {
      var t1, t2, t3, t4, _i, override, _this = this;
      if ($parent != null) {
        B.JSArray_methods.add$1($parent._framework0$_children, _this);
        _this._overrideForFamily.addAll$1(0, $parent._overrideForFamily);
      }
      for (t1 = overrides.length, t2 = type$.ProviderOverride, t3 = _this._overrideForProvider, t4 = _this._stateReaders, _i = 0; _i < overrides.length; overrides.length === t1 || (0, A.throwConcurrentModificationError)(overrides), ++_i) {
        override = overrides[_i];
        if (t2._is(override)) {
          t3.$indexSet(0, override.get$_origin(), override.get$_override());
          t4.$indexSet(0, override.get$_origin(), new A._StateReader(override.get$_origin(), override.get$_override(), _this, false));
        }
      }
    },
    get$scheduler() {
      var t1, t2,
        value = this.__ProviderContainer_scheduler_FI;
      if (value === $) {
        t1 = A._setArrayType([], type$.JSArray_AutoDisposeProviderElementMixin_nullable_Object);
        t2 = A._setArrayType([], type$.JSArray_ProviderElementBase_dynamic);
        this.__ProviderContainer_scheduler_FI !== $ && A.throwLateFieldADI("scheduler");
        value = this.__ProviderContainer_scheduler_FI = new A.ProviderScheduler(A.LinkedHashSet_LinkedHashSet$_empty(type$.void_Function_void_Function), t1, t2);
      }
      return value;
    },
    updateOverrides$1(overrides) {
      var t1, t2, t3, t4, t5, t6, t7, _i, override, t8, t9, t10, element;
      type$.List_Override._as(overrides);
      if (this._disposed)
        throw A.wrapException(A.StateError$("Called updateOverrides on a ProviderContainer that was already disposed"));
      for (t1 = overrides.length, t2 = type$.ProviderOverride, t3 = type$.void_Function_ProviderBase_dynamic, t4 = type$.ProviderBase_nullable_Object, t5 = type$.void, t6 = this._stateReaders, t7 = this._overrideForProvider, _i = 0; _i < overrides.length; overrides.length === t1 || (0, A.throwConcurrentModificationError)(overrides), ++_i) {
        override = overrides[_i];
        if (t2._is(override)) {
          t8 = t6.$index(0, override.get$_origin());
          t8.toString;
          t9 = override.get$_origin();
          t10 = override.get$_override();
          t7.$indexSet(0, t9, t10);
          t8.override = t10;
          element = t8._framework0$_element;
          if (element == null)
            continue;
          A.runUnaryGuarded(t3._as(element.get$update()), override.get$_override(), t4, t5);
        }
      }
    },
    readProviderElement$1$1(provider, State) {
      var reader, t1;
      State._eval$1("ProviderBase<0>")._as(provider);
      if (this._disposed)
        throw A.wrapException(A.StateError$("Tried to read a provider from a ProviderContainer that was already disposed"));
      reader = this._putIfAbsent$1(provider);
      t1 = reader._framework0$_element;
      if (t1 == null)
        t1 = reader._framework0$_element = reader._create$0();
      return State._eval$1("ProviderElementBase<0>")._as(t1);
    },
    _putIfAbsent$1(provider) {
      var t2,
        t1 = this._stateReaders,
        currentReader = t1.$index(0, provider);
      if (currentReader != null)
        return currentReader;
      t2 = new A.ProviderContainer__putIfAbsent_getReader(this, provider).call$0();
      t1.$indexSet(0, provider, t2);
      return t2;
    },
    dispose$0() {
      var t1, t2, t3, _this = this;
      if (_this._disposed)
        return;
      _this._disposed = true;
      t1 = _this._framework0$_parent;
      if (t1 != null)
        B.JSArray_methods.remove$1(t1._framework0$_children, _this);
      if (_this._root == null) {
        t1 = _this.get$scheduler();
        t1._disposed = true;
        t2 = t1._pendingTaskCompleter;
        if (t2 != null)
          t2.complete$0(0);
        t1._pendingTaskCompleter = null;
      }
      for (t1 = _this.getAllProviderElementsInOrder$0(), t1 = A.List_List$of(t1, true, t1.$ti._eval$1("Iterable.E")), t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"), t1 = new A.ReversedListIterable(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        (t3 == null ? t2._as(t3) : t3).dispose$0();
      }
    },
    getAllProviderElementsInOrder$0() {
      return new A._SyncStarIterable(this.getAllProviderElementsInOrder$body$ProviderContainer(), type$._SyncStarIterable_ProviderElementBase_dynamic);
    },
    getAllProviderElementsInOrder$body$ProviderContainer() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, queue, t3, t4, t5, t6, _box_0, t7, element, result, visitedNodes, t1, t2;
        return function $async$getAllProviderElementsInOrder$0($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                visitedNodes = A.HashSet_HashSet(type$.ProviderElementBase_dynamic);
                t1 = type$._DoubleLinkedQueueSentinel_ProviderElementBase_dynamic;
                t2 = new A._DoubleLinkedQueueSentinel(t1);
                t2.set$_previousLink(t2);
                t2.set$_nextLink(t2);
                queue = new A.DoubleLinkedQueue(t2, type$.DoubleLinkedQueue_ProviderElementBase_dynamic);
                for (t3 = $async$self._stateReaders.get$values(0), t4 = A._instanceType(t3), t4 = t4._eval$1("@<1>")._bind$1(t4._rest[1]), t3 = new A.MappedIterator(J.get$iterator$ax(t3.__internal$_iterable), t3._f, t4._eval$1("MappedIterator<1,2>")), t4 = t4._rest[1], t5 = t1._precomputed1, t6 = t1._eval$1("DoubleLinkedQueue<1>?"), t1 = t1._eval$1("_DoubleLinkedQueueElement<1>"); t3.moveNext$0();) {
                  _box_0 = {};
                  t7 = t3.__internal$_current;
                  if (t7 == null)
                    t7 = t4._as(t7);
                  if (t7.container !== $async$self)
                    continue;
                  element = t7._framework0$_element;
                  if (element == null)
                    continue;
                  _box_0.hasAncestorsInContainer = false;
                  element.visitAncestors$1(new A.ProviderContainer_getAllProviderElementsInOrder_closure(_box_0, $async$self));
                  if (!_box_0.hasAncestorsInContainer) {
                    t5._as(element);
                    new A._DoubleLinkedQueueElement(t6._as(queue), element, t1)._link$2(t2._previousLink, t2);
                    ++queue._elementCount;
                  }
                }
              case 2:
                // for condition
                if (!!queue.get$isEmpty(0)) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                result = t2._nextLink._remove$0();
                --queue._elementCount;
                if (!visitedNodes.add$1(0, result)) {
                  // goto for condition
                  $async$goto = 2;
                  break;
                }
                $async$goto = 4;
                return $async$iterator._async$_current = result, 1;
              case 4:
                // after yield
                result.visitChildren$2$elementVisitor$notifierVisitor(new A.ProviderContainer_getAllProviderElementsInOrder_closure0($async$self, visitedNodes, queue), new A.ProviderContainer_getAllProviderElementsInOrder_closure1());
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    },
    $isNode1: 1
  };
  A.ProviderContainer__putIfAbsent_getReader.prototype = {
    call$0() {
      var t4, dependencies, containerForDependencyOverride, t5, t6, t7, t8, t9, deepestOverrideContainer, reader, _this = this,
        t1 = _this.$this,
        root = t1._root,
        t2 = root == null,
        t3 = !t2;
      if (t3) {
        t4 = _this.provider;
        dependencies = t4.get$allTransitiveDependencies();
        if (dependencies == null)
          containerForDependencyOverride = null;
        else {
          t5 = dependencies.$ti._eval$1("ProviderContainer?(1)")._as(new A.ProviderContainer__putIfAbsent_getReader_closure(t1));
          t6 = dependencies._base;
          t7 = A._instanceType(t6);
          t8 = t7._eval$1("EfficientLengthMappedIterable<1,ProviderContainer?>");
          t9 = t8._eval$1("WhereIterable<Iterable.E>");
          containerForDependencyOverride = A.List_List$of(new A.WhereIterable(new A.EfficientLengthMappedIterable(t6, t7._eval$1("ProviderContainer?(1)")._as(t5), t8), t8._eval$1("bool(Iterable.E)")._as(new A.ProviderContainer__putIfAbsent_getReader_closure0()), t9), true, t9._eval$1("Iterable.E"));
        }
        if (containerForDependencyOverride != null && containerForDependencyOverride.length !== 0) {
          deepestOverrideContainer = (containerForDependencyOverride && B.JSArray_methods).fold$1$2(containerForDependencyOverride, root, new A.ProviderContainer__putIfAbsent_getReader_closure1(), type$.ProviderContainer);
          return deepestOverrideContainer._stateReaders.putIfAbsent$2(t4, new A.ProviderContainer__putIfAbsent_getReader_closure2(t4, deepestOverrideContainer));
        }
      }
      t4 = t2 ? null : root._stateReaders.containsKey$1(_this.provider);
      if (t4 === true) {
        t1 = root._stateReaders.$index(0, _this.provider);
        t1.toString;
        return t1;
      }
      t4 = _this.provider;
      reader = new A._StateReader(t4, t4, t2 ? t1 : root, true);
      if (t3)
        root._stateReaders.$indexSet(0, t4, reader);
      return reader;
    },
    $signature: 25
  };
  A.ProviderContainer__putIfAbsent_getReader_closure.prototype = {
    call$1(dep) {
      var t1, reader, familyOverride;
      type$.ProviderOrFamily._as(dep);
      t1 = this.$this;
      reader = t1._stateReaders.$index(0, dep);
      if (reader != null)
        return reader.container;
      familyOverride = t1._overrideForFamily.$index(0, dep);
      return familyOverride == null ? null : familyOverride.container;
    },
    $signature: 59
  };
  A.ProviderContainer__putIfAbsent_getReader_closure0.prototype = {
    call$1(container) {
      return type$.nullable_ProviderContainer._as(container) != null;
    },
    $signature: 60
  };
  A.ProviderContainer__putIfAbsent_getReader_closure1.prototype = {
    call$2(previous, container) {
      type$.ProviderContainer._as(previous);
      type$.nullable_ProviderContainer._as(container);
      if (container.depth > previous.depth)
        return container;
      return previous;
    },
    $signature: 61
  };
  A.ProviderContainer__putIfAbsent_getReader_closure2.prototype = {
    call$0() {
      var t1 = this.provider;
      return new A._StateReader(t1, t1, this.deepestOverrideContainer, true);
    },
    $signature: 25
  };
  A.ProviderContainer_getAllProviderElementsInOrder_closure.prototype = {
    call$1(element) {
      var t1 = type$.ProviderElementBase_dynamic._as(element).__ProviderElementBase__container_F;
      t1 === $ && A.throwLateFieldNI("_container");
      if (t1 === this.$this)
        this._box_0.hasAncestorsInContainer = true;
    },
    $signature: 14
  };
  A.ProviderContainer_getAllProviderElementsInOrder_closure0.prototype = {
    call$1(dependent) {
      dependent.get$container();
    },
    $signature: 14
  };
  A.ProviderContainer_getAllProviderElementsInOrder_closure1.prototype = {
    call$1(_) {
    },
    $signature: 95
  };
  A.ProviderOverride.prototype = {$isOverride: 1,
    get$_origin() {
      return this._origin;
    },
    get$_override() {
      return this._override;
    }
  };
  A.CircularDependencyError.prototype = {};
  A.ProviderElementBase.prototype = {
    get$hasListeners() {
      var t1 = this._dependents;
      t1 = t1 == null ? null : t1.length !== 0;
      return t1 === true || this._providerDependents.length !== 0;
    },
    setState$1(newState) {
      var previousResult, result, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(newState);
      previousResult = _this._framework0$_state;
      result = new A.ResultData(newState, t1._eval$1("ResultData<1>"));
      _this.set$_framework0$_state(result);
      if (_this._didBuild)
        _this._notifyListeners$2(result, previousResult);
    },
    get$requireState() {
      var state = this._framework0$_state;
      if (state == null)
        throw A.wrapException(A.StateError$("Tried to read the state of an uninitialized provider"));
      return state.when$1$2$data$error(new A.ProviderElementBase_requireState_closure(this), A.stack_trace__throwErrorWithCombinedStackTrace$closure(), A._instanceType(this)._precomputed1);
    },
    mount$0() {
      var _this = this;
      _this._mounted = true;
      _this.buildState$0();
      _this._framework0$_state.map$1$2$data$error(0, new A.ProviderElementBase_mount_closure(_this), new A.ProviderElementBase_mount_closure0(_this), type$.Null);
    },
    update$1(newProvider) {
      this.set$_provider(A._instanceType(this)._eval$1("ProviderBase<1>")._as(newProvider));
    },
    flush$0() {
      var _this = this;
      _this._maybeRebuildDependencies$0();
      if (_this._mustRecomputeState) {
        _this._mustRecomputeState = false;
        _this._performBuild$0();
      }
    },
    _maybeRebuildDependencies$0() {
      if (!this._dependencyMayHaveChanged)
        return;
      this._dependencyMayHaveChanged = false;
      this.visitAncestors$1(new A.ProviderElementBase__maybeRebuildDependencies_closure());
    },
    _performBuild$0() {
      var previousStateResult, t1, t2, _this = this,
        previousDependencies = _this._framework0$_dependencies;
      _this.set$_previousDependencies(previousDependencies);
      _this.set$_framework0$_dependencies(A.HashMap_HashMap(type$.ProviderElementBase_nullable_Object, type$.Object));
      previousStateResult = _this._framework0$_state;
      _this.buildState$0();
      t1 = _this._framework0$_state;
      if (t1 != previousStateResult) {
        t1.toString;
        _this._notifyListeners$2(t1, previousStateResult);
      }
      for (t1 = previousDependencies.get$entries(0), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current().key;
        B.JSArray_methods.remove$1(t2._providerDependents, _this);
        t2._onRemoveListener$0();
      }
      _this.set$_previousDependencies(null);
    },
    buildState$0() {
      var err, stack, exception, _this = this,
        previousDidChangeDependency = _this._didChangeDependency;
      _this._didBuild = _this._didChangeDependency = false;
      try {
        _this._mounted = true;
        _this.create$1$didChangeDependency(previousDidChangeDependency);
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        _this.set$_framework0$_state(new A.ResultError(err, stack, A._instanceType(_this)._eval$1("ResultError<1>")));
      } finally {
        _this._didBuild = true;
      }
    },
    _notifyListeners$2(newState, previousStateResult) {
      var t2, previousState, t3, listeners, i, t4, t5, t6, t7, _i, t8, t9, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("Result<1>")._as(newState);
      t1._eval$1("Result<1>?")._as(previousStateResult);
      t2 = previousStateResult == null;
      previousState = t2 ? null : previousStateResult.get$stateOrNull();
      t3 = type$.Null;
      newState.map$1$2$data$error(0, new A.ProviderElementBase__notifyListeners_closure(_this, previousState), new A.ProviderElementBase__notifyListeners_closure0(_this), t3);
      if (!t2)
        if (previousStateResult.get$hasState())
          if (newState.get$hasState()) {
            t2 = previousState == null ? t1._precomputed1._as(previousState) : previousState;
            t2 = !_this.updateShouldNotify$2(t2, newState.get$requireState());
          } else
            t2 = false;
        else
          t2 = false;
      else
        t2 = false;
      if (t2)
        return;
      t2 = _this._dependents;
      if (t2 == null)
        listeners = null;
      else
        listeners = J.JSArray_JSArray$markFixed(t2.slice(0), A._arrayInstanceType(t2)._precomputed1);
      newState.map$1$2$data$error(0, new A.ProviderElementBase__notifyListeners_closure1(_this, listeners, previousState), new A.ProviderElementBase__notifyListeners_closure2(_this, listeners), t3);
      for (t2 = _this._providerDependents, i = 0; i < t2.length; ++i)
        t2[i]._markDependencyChanged$0();
      t2 = _this.__ProviderElementBase__container_F;
      t2 === $ && A.throwLateFieldNI("_container");
      t4 = t2.observers;
      t5 = t4.length;
      t6 = type$.ProviderBase_nullable_Object;
      t1 = t1._eval$1("1?");
      t7 = type$.ProviderContainer;
      _i = 0;
      for (; _i < t4.length; t4.length === t5 || (0, A.throwConcurrentModificationError)(t4), ++_i) {
        t8 = t4[_i].get$didUpdateProvider();
        t9 = _this.__ProviderElementBase__origin_A;
        t9 === $ && A.throwLateFieldNI("_origin");
        A.runQuaternaryGuarded(t8, t9, previousState, newState.get$stateOrNull(), t2, t6, t1, t1, t7);
      }
      for (t1 = t2.observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        newState.map$1$2$data$error(0, new A.ProviderElementBase__notifyListeners_closure3(_this), new A.ProviderElementBase__notifyListeners_closure4(_this, t1[_i]), t3);
    },
    visitChildren$2$elementVisitor$notifierVisitor(elementVisitor, notifierVisitor) {
      var t1, i, dependents;
      type$.void_Function_ProviderElementBase_dynamic._as(elementVisitor);
      type$.void_Function_ProxyElementValueNotifier_dynamic._as(notifierVisitor);
      for (t1 = this._providerDependents, i = 0; i < t1.length; ++i)
        elementVisitor.call$1(t1[i]);
      dependents = this._dependents;
      if (dependents != null)
        for (t1 = dependents.length, i = 0; i < t1; ++i)
          ;
    },
    visitAncestors$1(visitor) {
      var t1;
      type$.void_Function_ProviderElementBase_dynamic._as(visitor);
      t1 = this._framework0$_dependencies;
      new A._HashMapKeyIterable(t1, A._instanceType(t1)._eval$1("_HashMapKeyIterable<1>")).forEach$1(0, visitor);
    },
    dispose$0() {
      var t1, t2, _this = this;
      _this.runOnDispose$0();
      for (t1 = _this._framework0$_dependencies.get$entries(0), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current().key;
        B.JSArray_methods.remove$1(t2._providerDependents, _this);
        t2._onRemoveListener$0();
      }
      t1 = _this._framework0$_dependencies;
      if (t1._collection$_length > 0) {
        t1._strings = t1._nums = t1._collection$_rest = t1._collection$_keys = null;
        t1._collection$_length = 0;
      }
    },
    _onRemoveListener$0() {
      if (!this.get$hasListeners())
        this._didCancelOnce = true;
    },
    runOnDispose$0() {
      var t1, t2, t3, t4, t5, _i, t6, t7, _this = this, _null = null;
      if (!_this._mounted)
        return;
      _this._mounted = false;
      t1 = _this.__ProviderElementBase__container_F;
      t1 === $ && A.throwLateFieldNI("_container");
      t2 = t1.observers;
      t3 = t2.length;
      t4 = type$.ProviderBase_nullable_Object;
      t5 = type$.ProviderContainer;
      _i = 0;
      for (; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        t6 = t2[_i].get$didDisposeProvider();
        t7 = _this.__ProviderElementBase__origin_A;
        t7 === $ && A.throwLateFieldNI("_origin");
        A.runBinaryGuarded(t6, t7, t1, t4, t5);
      }
      _this.set$_onDisposeListeners(_null);
      _this.set$_onCancelListeners(_null);
      _this.set$_onResumeListeners(_null);
      _this.set$_onAddListeners(_null);
      _this.set$_onRemoveListeners(_null);
      _this.set$_onChangeSelfListeners(_null);
      _this.set$_onErrorSelfListeners(_null);
      _this._didCancelOnce = false;
    },
    toString$0(_) {
      var t1 = A.getRuntimeTypeOfDartObject(this).toString$0(0),
        t2 = this._provider.toString$0(0),
        t3 = this.__ProviderElementBase__origin_A;
      t3 === $ && A.throwLateFieldNI("_origin");
      return t1 + "(provider: " + t2 + ", origin: " + t3.toString$0(0) + ")";
    },
    set$_provider(_provider) {
      this._provider = A._instanceType(this)._eval$1("ProviderBase<1>")._as(_provider);
    },
    set$_framework0$_dependencies(_dependencies) {
      this._framework0$_dependencies = type$.HashMap_of_ProviderElementBase_nullable_Object_and_Object._as(_dependencies);
    },
    set$_previousDependencies(_previousDependencies) {
      this._previousDependencies = type$.nullable_HashMap_of_ProviderElementBase_nullable_Object_and_Object._as(_previousDependencies);
    },
    set$_dependents(_dependents) {
      this._dependents = type$.nullable_List_ProviderSubscription_dynamic._as(_dependents);
    },
    set$_onDisposeListeners(_onDisposeListeners) {
      this._onDisposeListeners = type$.nullable_List_of_void_Function._as(_onDisposeListeners);
    },
    set$_onResumeListeners(_onResumeListeners) {
      this._onResumeListeners = type$.nullable_List_of_void_Function._as(_onResumeListeners);
    },
    set$_onCancelListeners(_onCancelListeners) {
      this._onCancelListeners = type$.nullable_List_of_void_Function._as(_onCancelListeners);
    },
    set$_onAddListeners(_onAddListeners) {
      this._onAddListeners = type$.nullable_List_of_void_Function._as(_onAddListeners);
    },
    set$_onRemoveListeners(_onRemoveListeners) {
      this._onRemoveListeners = type$.nullable_List_of_void_Function._as(_onRemoveListeners);
    },
    set$_onChangeSelfListeners(_onChangeSelfListeners) {
      this._onChangeSelfListeners = A._instanceType(this)._eval$1("List<~(1?,1)>?")._as(_onChangeSelfListeners);
    },
    set$_onErrorSelfListeners(_onErrorSelfListeners) {
      this._onErrorSelfListeners = type$.nullable_List_of_void_Function_Object_StackTrace._as(_onErrorSelfListeners);
    },
    set$_framework0$_state(_state) {
      this._framework0$_state = A._instanceType(this)._eval$1("Result<1>?")._as(_state);
    },
    $isNode1: 1
  };
  A.ProviderElementBase_requireState_closure.prototype = {
    call$1(data) {
      return A._instanceType(this.$this)._precomputed1._as(data);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("1(1)");
    }
  };
  A.ProviderElementBase_mount_closure.prototype = {
    call$1(newState) {
      A._instanceType(this.$this)._eval$1("ResultData<1>")._as(newState);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultData<1>)");
    }
  };
  A.ProviderElementBase_mount_closure0.prototype = {
    call$1(newState) {
      A._instanceType(this.$this)._eval$1("ResultError<1>")._as(newState);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultError<1>)");
    }
  };
  A.ProviderElementBase__maybeRebuildDependencies_closure.prototype = {
    call$1(element) {
      return type$.ProviderElementBase_dynamic._as(element).flush$0();
    },
    $signature: 14
  };
  A.ProviderElementBase__notifyListeners_closure.prototype = {
    call$1(newState) {
      A._instanceType(this.$this)._eval$1("ResultData<1>")._as(newState);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultData<1>)");
    }
  };
  A.ProviderElementBase__notifyListeners_closure0.prototype = {
    call$1(newState) {
      A._instanceType(this.$this)._eval$1("ResultError<1>")._as(newState);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultError<1>)");
    }
  };
  A.ProviderElementBase__notifyListeners_closure1.prototype = {
    call$1(newState) {
      var t2, t3, t4, t5, i, listener,
        t1 = A._instanceType(this.$this);
      t1._eval$1("ResultData<1>")._as(newState);
      t2 = this.listeners;
      if (t2 != null)
        for (t3 = this.previousState, t4 = newState.state, t5 = t1._eval$1("1?"), t1 = t1._precomputed1, i = 0; i < t2.length; ++i) {
          listener = t2[i];
          if (listener instanceof A._ProviderStateSubscription)
            $.Zone__current.runBinaryGuarded$2$3(listener.listener, t3, t4, t5, t1);
        }
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultData<1>)");
    }
  };
  A.ProviderElementBase__notifyListeners_closure2.prototype = {
    call$1(newState) {
      var t2, t3, t4, t5, t6, i, listener,
        t1 = A._instanceType(this.$this);
      t1._eval$1("ResultError<1>")._as(newState);
      t2 = this.listeners;
      if (t2 != null)
        for (t1 = t1._eval$1("_ProviderStateSubscription<1>"), t3 = newState.error, t4 = newState.stackTrace, t5 = type$.Object, t6 = type$.StackTrace, i = 0; i < t2.length; ++i) {
          listener = t2[i];
          if (t1._is(listener))
            $.Zone__current.runBinaryGuarded$2$3(listener.onError, t3, t4, t5, t6);
        }
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultError<1>)");
    }
  };
  A.ProviderElementBase__notifyListeners_closure3.prototype = {
    call$1(_) {
      A._instanceType(this.$this)._eval$1("ResultData<1>")._as(_);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultData<1>)");
    }
  };
  A.ProviderElementBase__notifyListeners_closure4.prototype = {
    call$1(newState) {
      var t2, t3,
        t1 = this.$this;
      A._instanceType(t1)._eval$1("ResultError<1>")._as(newState);
      t2 = this.observer.get$providerDidFail();
      t3 = t1.__ProviderElementBase__origin_A;
      t3 === $ && A.throwLateFieldNI("_origin");
      t1 = t1.__ProviderElementBase__container_F;
      t1 === $ && A.throwLateFieldNI("_container");
      A.runQuaternaryGuarded(t2, t3, newState.error, newState.stackTrace, t1, type$.ProviderBase_nullable_Object, type$.Object, type$.StackTrace, type$.ProviderContainer);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultError<1>)");
    }
  };
  A.ProviderOrFamily.prototype = {
    get$allTransitiveDependencies() {
      return this.allTransitiveDependencies;
    }
  };
  A.ProviderListenable.prototype = {};
  A.ProviderSubscription.prototype = {
    ProviderSubscription$1(source) {
    },
    close$0(_) {
      if (this._closed)
        return;
      this._closed = true;
    }
  };
  A.ProviderBase.prototype = {
    get$_origin() {
      return this;
    },
    get$_override() {
      return this;
    },
    addListener$5$fireImmediately$onDependencyMayHaveChanged$onError(node, listener, fireImmediately, onDependencyMayHaveChanged, onError) {
      var t2, element, dependents,
        t1 = A._instanceType(this);
      t1._eval$1("~(1?,1)")._as(listener);
      t2 = $.Zone__current;
      element = node.readProviderElement$1$1(this, t1._precomputed1);
      element.flush$0();
      if (element._didCancelOnce)
        element.get$hasListeners();
      t1 = new A._ProviderStateSubscription(new A.ProviderBase_addListener_closure(this, listener), element, t2.get$handleUncaughtError(), node, t1._eval$1("_ProviderStateSubscription<1>"));
      t1.ProviderSubscription$1(node);
      dependents = element._dependents;
      if (dependents == null) {
        dependents = A._setArrayType([], type$.JSArray_ProviderSubscription_dynamic);
        element.set$_dependents(dependents);
      }
      B.JSArray_methods.add$1(dependents, t1);
      return t1;
    },
    read$1(_, node) {
      var element = node.readProviderElement$1$1(this, A._instanceType(this)._precomputed1);
      element.flush$0();
      return element.get$requireState();
    },
    get$hashCode(_) {
      var t1 = A.Object.prototype.get$hashCode.call(this, 0);
      return t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other === this;
    },
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "#" + B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(this.get$hashCode(0) & 1048575, 16), 5, "0");
    },
    $isProviderOverride: 1,
    $isOverride: 1
  };
  A.ProviderBase_addListener_closure.prototype = {
    call$2(prev, next) {
      var t1 = A._instanceType(this.$this);
      return this.listener.call$2(t1._eval$1("1?")._as(prev), t1._precomputed1._as(next));
    },
    $signature: 18
  };
  A._ProviderStateSubscription.prototype = {
    read$0(_) {
      var t1;
      if (this._closed)
        throw A.wrapException(A.StateError$("called ProviderSubscription.read on a subscription that was closed"));
      t1 = this.listenedElement;
      t1.flush$0();
      return t1.get$requireState();
    },
    close$0(_) {
      var t1, t2, _this = this;
      if (!_this._closed) {
        t1 = _this.listenedElement;
        t2 = t1._dependents;
        if (t2 != null)
          B.JSArray_methods.remove$1(t2, _this);
        t1._onRemoveListener$0();
      }
      _this.super$ProviderSubscription$close(0);
    }
  };
  A.OverrideWithValueMixin.prototype = {};
  A.ProviderElementProxy.prototype = {
    read$1(_, node) {
      var result,
        element = node.readProviderElement$1$1(this._origin, this.$ti._precomputed1);
      element.flush$0();
      result = this._lense.call$1(element)._result;
      if (result == null)
        A.throwExpression(A.StateError$("Trying to read an uninitialized value."));
      return result.state;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return this.$ti._is(other) && other._origin.$eq(0, this._origin);
    },
    get$hashCode(_) {
      return this._origin.get$hashCode(0);
    },
    $isAlwaysAliveRefreshable: 1
  };
  A.ProviderScheduler.prototype = {};
  A.ValueProvider.prototype = {
    get$allTransitiveDependencies() {
      return null;
    },
    createElement$0(_) {
      return new A.ValueProviderElement(this, A.HashMap_HashMap(type$.ProviderElementBase_nullable_Object, type$.Object), A._setArrayType([], type$.JSArray_ProviderElementBase_nullable_Object), this.$ti._eval$1("ValueProviderElement<1>"));
    },
    $isAlwaysAliveRefreshable: 1
  };
  A.ValueProviderElement.prototype = {
    update$1(newProvider) {
      var newValue, t2, _this = this,
        t1 = _this.$ti;
      _this.super$ProviderElementBase$update(t1._eval$1("ProviderBase<1>")._as(newProvider));
      newValue = t1._eval$1("ValueProvider<1>")._as(_this._provider)._framework0$_value;
      t2 = _this._framework0$_state;
      t2.toString;
      if (newValue !== t1._eval$1("ResultData<1>")._as(t2).state)
        _this.setState$1(newValue);
    },
    create$1$didChangeDependency(didChangeDependency) {
      this.setState$1(this.$ti._eval$1("ValueProvider<1>")._as(this._provider)._framework0$_value);
    },
    updateShouldNotify$2(previous, next) {
      var t1 = this.$ti._precomputed1;
      t1._as(previous);
      t1._as(next);
      return true;
    }
  };
  A._ProviderBase_ProviderOrFamily_ProviderListenable.prototype = {};
  A._ProviderElementProxy_Object_ProviderListenable.prototype = {};
  A._ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable.prototype = {};
  A._ValueProvider_ProviderBase_AlwaysAliveProviderBase.prototype = {};
  A.ProxyElementValueNotifier.prototype = {
    set$result(_, value) {
      var previous, _this = this;
      _this.$ti._eval$1("Result<1>?")._as(value);
      previous = _this._result;
      _this.set$_result(value);
      if (value != null)
        value.when$1$2$data$error(new A.ProxyElementValueNotifier_result_closure(_this, previous), _this.get$_notifyError(), type$.void);
    },
    set$_result(_result) {
      this._result = this.$ti._eval$1("Result<1>?")._as(_result);
    }
  };
  A.ProxyElementValueNotifier_result_closure.prototype = {
    call$1(newValue) {
      var t2,
        t1 = this.$this;
      t1.$ti._precomputed1._as(newValue);
      t2 = this.previous;
      return t1._notifyValue$2(t2 == null ? null : t2.state, newValue);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1)");
    }
  };
  A._ValueListenable.prototype = {
    _listenable$_notifyListeners$1(notify) {
      var i, listener, exception, stack, t2, t3, exception0, newLength, newListeners, newIndex, newIndex0, swapIndex, _this = this,
        t1 = _this.$ti;
      t1._eval$1("~(_Listener<1>)")._as(notify);
      t2 = _this._count;
      if (t2 === 0)
        return;
      ++_this._notificationCallStackDepth;
      i = 0;
      while (true) {
        t3 = i;
        if (typeof t3 !== "number")
          return t3.$lt();
        if (!(t3 < t2))
          break;
        try {
          listener = B.JSArray_methods.$index(_this._listenable$_listeners, i);
          if (listener != null)
            notify.call$1(listener);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          t1 = A.StateError$("An exception was thrown inside a _ChangeNotifier listener:\n" + A.S(exception) + "\n" + A.S(stack));
          throw A.wrapException(t1);
        }
        t3 = i;
        if (typeof t3 !== "number")
          return t3.$add();
        i = t3 + 1;
      }
      if (--_this._notificationCallStackDepth === 0 && _this._reentrantlyRemovedListeners > 0) {
        newLength = _this._count - _this._reentrantlyRemovedListeners;
        if (newLength * 2 <= _this._listenable$_listeners.length) {
          newListeners = A.List_List$filled(newLength, null, false, t1._eval$1("_Listener<1>?"));
          for (newIndex = 0, i = 0; i < _this._count; ++i) {
            t1 = _this._listenable$_listeners;
            if (!(i < t1.length))
              return A.ioore(t1, i);
            listener = t1[i];
            if (listener != null) {
              newIndex0 = newIndex + 1;
              B.JSArray_methods.$indexSet(newListeners, newIndex, listener);
              newIndex = newIndex0;
            }
          }
          _this.set$_listenable$_listeners(newListeners);
        } else
          for (i = 0; i < newLength; ++i) {
            t1 = _this._listenable$_listeners;
            t2 = t1.length;
            if (!(i < t2))
              return A.ioore(t1, i);
            if (t1[i] == null) {
              swapIndex = i + 1;
              while (true) {
                if (!(swapIndex < t2))
                  return A.ioore(t1, swapIndex);
                t3 = t1[swapIndex];
                if (!(t3 == null))
                  break;
                ++swapIndex;
              }
              t1[i] = t3;
              B.JSArray_methods.$indexSet(t1, swapIndex, null);
            }
          }
        _this._reentrantlyRemovedListeners = 0;
        _this._count = newLength;
      }
    },
    _notifyValue$2(prev, next) {
      var t1 = this.$ti;
      this._listenable$_notifyListeners$1(new A._ValueListenable__notifyValue_closure(this, t1._eval$1("1?")._as(prev), t1._precomputed1._as(next)));
    },
    _notifyError$2(err, stack) {
      this._listenable$_notifyListeners$1(new A._ValueListenable__notifyError_closure(this, err, stack));
    },
    set$_listenable$_listeners(_listeners) {
      this._listenable$_listeners = this.$ti._eval$1("List<_Listener<1>?>")._as(_listeners);
    }
  };
  A._ValueListenable__notifyValue_closure.prototype = {
    call$1(listener) {
      var t1 = this.$this.$ti;
      return t1._eval$1("~(1?,1)")._as(t1._eval$1("_Listener<1>")._as(listener).onValue).call$2(this.prev, this.next);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_Listener<1>)");
    }
  };
  A._ValueListenable__notifyError_closure.prototype = {
    call$1(listener) {
      var t1 = this.$this.$ti._eval$1("_Listener<1>")._as(listener).onError.call$2(this.err, this.stack);
      return t1;
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_Listener<1>)");
    }
  };
  A.InternalProvider.prototype = {};
  A.Provider.prototype = {
    createElement$0(_) {
      return new A.ProviderElement(this, A.HashMap_HashMap(type$.ProviderElementBase_nullable_Object, type$.Object), A._setArrayType([], type$.JSArray_ProviderElementBase_nullable_Object), this.$ti._eval$1("ProviderElement<1>"));
    },
    $isAlwaysAliveRefreshable: 1
  };
  A.ProviderElement.prototype = {
    create$1$didChangeDependency(didChangeDependency) {
      var _this = this,
        provider = _this.$ti._eval$1("InternalProvider<1>")._as(_this._provider);
      _this.setState$1(provider._provider$_createFn.call$1(provider.$ti._eval$1("ProviderElement<1>")._as(_this)));
    },
    updateShouldNotify$2(previous, next) {
      var t1 = this.$ti._precomputed1;
      return !J.$eq$(t1._as(previous), t1._as(next));
    },
    $isProviderRef: 1
  };
  A._InternalProvider_ProviderBase_OverrideWithValueMixin.prototype = {};
  A._Provider_InternalProvider_AlwaysAliveProviderBase.prototype = {};
  A.ResultData.prototype = {
    get$hasState() {
      return true;
    },
    get$stateOrNull() {
      return this.state;
    },
    get$requireState() {
      return this.state;
    },
    map$1$2$data$error(_, data, error, $R) {
      var t1 = this.$ti._bind$1($R);
      t1._eval$1("1(ResultData<2>)")._as(data);
      t1._eval$1("1(ResultError<2>)")._as(error);
      return data.call$1(this);
    },
    when$1$2$data$error(data, error, $R) {
      this.$ti._bind$1($R)._eval$1("1(2)")._as(data);
      $R._eval$1("0(Object,StackTrace)")._as(error);
      return data.call$1(this.state);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return this.$ti._is(other) && A.getRuntimeTypeOfDartObject(other) === A.getRuntimeTypeOfDartObject(this) && J.$eq$(other.state, this.state);
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.state, B.C_SentinelValue, B.C_SentinelValue);
    },
    $isResult: 1
  };
  A.ResultError.prototype = {
    get$hasState() {
      return false;
    },
    get$stateOrNull() {
      return null;
    },
    get$requireState() {
      return A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    map$1$2$data$error(_, data, error, $R) {
      var t1 = this.$ti._bind$1($R);
      t1._eval$1("1(ResultData<2>)")._as(data);
      return t1._eval$1("1(ResultError<2>)")._as(error).call$1(this);
    },
    when$1$2$data$error(data, error, $R) {
      this.$ti._bind$1($R)._eval$1("1(2)")._as(data);
      return $R._eval$1("0(Object,StackTrace)")._as(error).call$2(this.error, this.stackTrace);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return _this.$ti._is(other) && A.getRuntimeTypeOfDartObject(other) === A.getRuntimeTypeOfDartObject(_this) && other.stackTrace === _this.stackTrace && J.$eq$(other.error, _this.error);
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.error, this.stackTrace, B.C_SentinelValue);
    },
    $isResult: 1
  };
  A.throwErrorWithCombinedStackTrace_closure.prototype = {
    call$1(frame) {
      return frame.get$$package() === "riverpod";
    },
    $signature: 65
  };
  A.StateController.prototype = {};
  A._notifier_closure.prototype = {
    call$1(element) {
      var t1 = this.T;
      return t1._eval$1("StateProviderElement<0>")._as(t1._eval$1("ProviderElementBase<0>")._as(element))._controllerNotifier;
    },
    $signature() {
      return this.T._eval$1("ProxyElementValueNotifier<StateController<0>>(ProviderElementBase<0>)");
    }
  };
  A._StateProviderBase.prototype = {};
  A.StateProvider.prototype = {
    createElement$0(_) {
      var t1 = this.$ti,
        t2 = t1._eval$1("_Listener<StateController<1>>?"),
        t3 = t1._eval$1("ProxyElementValueNotifier<StateController<1>>");
      return new A.StateProviderElement(new A.ProxyElementValueNotifier(A.List_List$filled(0, null, false, t2), t3), new A.ProxyElementValueNotifier(A.List_List$filled(0, null, false, t2), t3), this, A.HashMap_HashMap(type$.ProviderElementBase_nullable_Object, type$.Object), A._setArrayType([], type$.JSArray_ProviderElementBase_nullable_Object), t1._eval$1("StateProviderElement<1>"));
    },
    get$notifier() {
      var result, _this = this,
        value = _this.__StateProvider_notifier_FI;
      if (value === $) {
        result = A._notifier(_this, _this.$ti._precomputed1);
        value !== $ && A.throwLateFieldADI("notifier");
        _this.set$__StateProvider_notifier_FI(result);
        value = result;
      }
      return value;
    },
    set$__StateProvider_notifier_FI(__StateProvider_notifier_FI) {
      this.__StateProvider_notifier_FI = this.$ti._eval$1("AlwaysAliveRefreshable<StateController<1>>")._as(__StateProvider_notifier_FI);
    },
    $isAlwaysAliveRefreshable: 1
  };
  A.StateProviderElement.prototype = {
    create$1$didChangeDependency(didChangeDependency) {
      var _this = this,
        t1 = _this.$ti,
        provider = t1._eval$1("_StateProviderBase<1>")._as(_this._provider),
        controller = new A.StateController(new A.LinkedList(t1._eval$1("LinkedList<_ListenerEntry<1>>")), provider._createFn.call$1(provider.$ti._eval$1("StateProviderElement<1>")._as(_this)), t1._eval$1("StateController<1>"));
      _this._controllerNotifier.set$result(0, new A.ResultData(controller, t1._eval$1("ResultData<StateController<1>>")));
      _this.set$_removeListener(controller.addListener$2$fireImmediately(new A.StateProviderElement_create_closure(_this), true));
    },
    updateShouldNotify$2(previous, next) {
      var t1 = this.$ti._precomputed1;
      t1._as(previous);
      t1._as(next);
      return previous == null ? next != null : previous !== next;
    },
    runOnDispose$0() {
      var t1, t2, _this = this;
      _this.super$ProviderElementBase$runOnDispose();
      t1 = _this._removeListener;
      if (t1 != null)
        t1.call$0();
      _this.set$_removeListener(null);
      t1 = _this._controllerNotifier;
      t2 = t1._result;
      if (t2 != null) {
        t2 = t2.state;
        if (t2 != null) {
          t2._listeners.clear$0(0);
          t2._state_notifier$_mounted = false;
        }
      }
      t1.set$result(0, null);
    },
    visitChildren$2$elementVisitor$notifierVisitor(elementVisitor, notifierVisitor) {
      type$.void_Function_ProviderElementBase_dynamic._as(elementVisitor);
      type$.void_Function_ProxyElementValueNotifier_dynamic._as(notifierVisitor);
      this.super$ProviderElementBase$visitChildren(elementVisitor, notifierVisitor);
      notifierVisitor.call$1(this._stateNotifier);
      notifierVisitor.call$1(this._controllerNotifier);
    },
    set$_removeListener(_removeListener) {
      this._removeListener = type$.nullable_void_Function._as(_removeListener);
    },
    $isStateProviderRef: 1
  };
  A.StateProviderElement_create_closure.prototype = {
    call$1(state) {
      var t1 = this.$this;
      t1.$ti._precomputed1._as(state);
      t1._stateNotifier.set$result(0, t1._controllerNotifier._result);
      t1.setState$1(state);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1)");
    }
  };
  A._StateProvider__StateProviderBase_AlwaysAliveProviderBase.prototype = {};
  A.SourceFile.prototype = {
    get$length(_) {
      return this._decodedChars.length;
    },
    get$lines() {
      return this._lineStarts.length;
    },
    SourceFile$decoded$2$url(decodedChars, url) {
      var t1, t2, t3, i, c, j, t4;
      for (t1 = this._decodedChars, t2 = t1.length, t3 = this._lineStarts, i = 0; i < t2; ++i) {
        c = t1[i];
        if (c === 13) {
          j = i + 1;
          if (j < t2) {
            if (!(j < t2))
              return A.ioore(t1, j);
            t4 = t1[j] !== 10;
          } else
            t4 = true;
          if (t4)
            c = 10;
        }
        if (c === 10)
          B.JSArray_methods.add$1(t3, i + 1);
      }
    },
    span$2(_, start, end) {
      return A._FileSpan$(this, start, end);
    },
    getLine$1(offset) {
      var t1, _this = this;
      if (offset < 0)
        throw A.wrapException(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw A.wrapException(A.RangeError$("Offset " + offset + string$.x20must_ + _this.get$length(0) + "."));
      t1 = _this._lineStarts;
      if (offset < B.JSArray_methods.get$first(t1))
        return -1;
      if (offset >= B.JSArray_methods.get$last(t1))
        return t1.length - 1;
      if (_this._isNearCachedLine$1(offset)) {
        t1 = _this._cachedLine;
        t1.toString;
        return t1;
      }
      return _this._cachedLine = _this._binarySearch$1(offset) - 1;
    },
    _isNearCachedLine$1(offset) {
      var t2, t3, t4,
        t1 = this._cachedLine;
      if (t1 == null)
        return false;
      t2 = this._lineStarts;
      t3 = t2.length;
      if (t1 >>> 0 !== t1 || t1 >= t3)
        return A.ioore(t2, t1);
      if (offset < t2[t1])
        return false;
      if (!(t1 >= t3 - 1)) {
        t4 = t1 + 1;
        if (!(t4 < t3))
          return A.ioore(t2, t4);
        t4 = offset < t2[t4];
      } else
        t4 = true;
      if (t4)
        return true;
      if (!(t1 >= t3 - 2)) {
        t4 = t1 + 2;
        if (!(t4 < t3))
          return A.ioore(t2, t4);
        t4 = offset < t2[t4];
        t2 = t4;
      } else
        t2 = true;
      if (t2) {
        this._cachedLine = t1 + 1;
        return true;
      }
      return false;
    },
    _binarySearch$1(offset) {
      var min, half,
        t1 = this._lineStarts,
        t2 = t1.length,
        max = t2 - 1;
      for (min = 0; min < max;) {
        half = min + B.JSInt_methods._tdivFast$1(max - min, 2);
        if (!(half >= 0 && half < t2))
          return A.ioore(t1, half);
        if (t1[half] > offset)
          max = half;
        else
          min = half + 1;
      }
      return max;
    },
    getColumn$1(offset) {
      var line, t1, lineStart, _this = this;
      if (offset < 0)
        throw A.wrapException(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw A.wrapException(A.RangeError$("Offset " + offset + " must be not be greater than the number of characters in the file, " + _this.get$length(0) + "."));
      line = _this.getLine$1(offset);
      t1 = _this._lineStarts;
      if (!(line >= 0 && line < t1.length))
        return A.ioore(t1, line);
      lineStart = t1[line];
      if (lineStart > offset)
        throw A.wrapException(A.RangeError$("Line " + line + " comes after offset " + offset + "."));
      return offset - lineStart;
    },
    getOffset$1(line) {
      var t1, t2, result, t3;
      if (line < 0)
        throw A.wrapException(A.RangeError$("Line may not be negative, was " + line + "."));
      else {
        t1 = this._lineStarts;
        t2 = t1.length;
        if (line >= t2)
          throw A.wrapException(A.RangeError$("Line " + line + " must be less than the number of lines in the file, " + this.get$lines() + "."));
      }
      result = t1[line];
      if (result <= this._decodedChars.length) {
        t3 = line + 1;
        t1 = t3 < t2 && result >= t1[t3];
      } else
        t1 = true;
      if (t1)
        throw A.wrapException(A.RangeError$("Line " + line + " doesn't have 0 columns."));
      return result;
    }
  };
  A.FileLocation.prototype = {
    get$sourceUrl() {
      return this.file.url;
    },
    get$line() {
      return this.file.getLine$1(this.offset);
    },
    get$column() {
      return this.file.getColumn$1(this.offset);
    },
    FileLocation$_$2(file, offset) {
      var t2,
        t1 = this.offset;
      if (t1 < 0)
        throw A.wrapException(A.RangeError$("Offset may not be negative, was " + t1 + "."));
      else {
        t2 = this.file;
        if (t1 > t2._decodedChars.length)
          throw A.wrapException(A.RangeError$("Offset " + t1 + string$.x20must_ + t2.get$length(0) + "."));
      }
    },
    get$offset(receiver) {
      return this.offset;
    }
  };
  A._FileSpan.prototype = {
    get$sourceUrl() {
      return this.file.url;
    },
    get$length(_) {
      return this._file$_end - this._file$_start;
    },
    get$start(_) {
      return A.FileLocation$_(this.file, this._file$_start);
    },
    get$end() {
      return A.FileLocation$_(this.file, this._file$_end);
    },
    get$text(_) {
      return A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(this.file._decodedChars, this._file$_start, this._file$_end), 0, null);
    },
    get$context() {
      var _this = this,
        t1 = _this.file,
        endOffset = _this._file$_end,
        endLine = t1.getLine$1(endOffset);
      if (t1.getColumn$1(endOffset) === 0 && endLine !== 0) {
        if (endOffset - _this._file$_start === 0)
          return endLine === t1._lineStarts.length - 1 ? "" : A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(endLine), t1.getOffset$1(endLine + 1)), 0, null);
      } else
        endOffset = endLine === t1._lineStarts.length - 1 ? t1._decodedChars.length : t1.getOffset$1(endLine + 1);
      return A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(t1.getLine$1(_this._file$_start)), endOffset), 0, null);
    },
    _FileSpan$3(file, _start, _end) {
      var t3,
        t1 = this._file$_end,
        t2 = this._file$_start;
      if (t1 < t2)
        throw A.wrapException(A.ArgumentError$("End " + t1 + " must come after start " + t2 + ".", null));
      else {
        t3 = this.file;
        if (t1 > t3._decodedChars.length)
          throw A.wrapException(A.RangeError$("End " + t1 + string$.x20must_ + t3.get$length(0) + "."));
        else if (t2 < 0)
          throw A.wrapException(A.RangeError$("Start may not be negative, was " + t2 + "."));
      }
    },
    compareTo$1(_, other) {
      var result;
      type$.SourceSpan._as(other);
      if (!(other instanceof A._FileSpan))
        return this.super$SourceSpanMixin$compareTo(0, other);
      result = B.JSInt_methods.compareTo$1(this._file$_start, other._file$_start);
      return result === 0 ? B.JSInt_methods.compareTo$1(this._file$_end, other._file$_end) : result;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!(other instanceof A._FileSpan))
        return _this.super$SourceSpanMixin$$eq(0, other);
      return _this._file$_start === other._file$_start && _this._file$_end === other._file$_end && J.$eq$(_this.file.url, other.file.url);
    },
    get$hashCode(_) {
      return A.Object_hash(this._file$_start, this._file$_end, this.file.url, B.C_SentinelValue);
    },
    $isFileSpan: 1,
    $isSourceSpanWithContext: 1
  };
  A.Highlighter.prototype = {
    highlight$0() {
      var t2, highlightsByColumn, t3, t4, i, line, lastLine, t5, t6, t7, t8, t9, t10, t11, index, primaryIdx, primary, _i, _this = this, _null = null,
        t1 = _this._lines;
      _this._writeFileStart$1(B.JSArray_methods.get$first(t1).url);
      t2 = _this._maxMultilineSpans;
      highlightsByColumn = A.List_List$filled(t2, _null, false, type$.nullable__Highlight);
      for (t3 = _this._highlighter$_buffer, t2 = t2 !== 0, t4 = _this._primaryColor, i = 0; i < t1.length; ++i) {
        line = t1[i];
        if (i > 0) {
          lastLine = t1[i - 1];
          t5 = lastLine.url;
          t6 = line.url;
          if (!J.$eq$(t5, t6)) {
            _this._writeSidebar$1$end("\u2575");
            t3._contents += "\n";
            _this._writeFileStart$1(t6);
          } else if (lastLine.number + 1 !== line.number) {
            _this._writeSidebar$1$text("...");
            t3._contents += "\n";
          }
        }
        for (t5 = line.highlights, t6 = A._arrayInstanceType(t5)._eval$1("ReversedListIterable<1>"), t7 = new A.ReversedListIterable(t5, t6), t7 = new A.ListIterator(t7, t7.get$length(0), t6._eval$1("ListIterator<ListIterable.E>")), t6 = t6._eval$1("ListIterable.E"), t8 = line.number, t9 = line.text; t7.moveNext$0();) {
          t10 = t7.__internal$_current;
          if (t10 == null)
            t10 = t6._as(t10);
          t11 = t10.span;
          if (t11.get$start(t11).get$line() !== t11.get$end().get$line() && t11.get$start(t11).get$line() === t8 && _this._isOnlyWhitespace$1(B.JSString_methods.substring$2(t9, 0, t11.get$start(t11).get$column()))) {
            index = B.JSArray_methods.indexOf$1(highlightsByColumn, _null);
            if (index < 0)
              A.throwExpression(A.ArgumentError$(A.S(highlightsByColumn) + " contains no null elements.", _null));
            B.JSArray_methods.$indexSet(highlightsByColumn, index, t10);
          }
        }
        _this._writeSidebar$1$line(t8);
        t3._contents += " ";
        _this._writeMultilineHighlights$2(line, highlightsByColumn);
        if (t2)
          t3._contents += " ";
        primaryIdx = B.JSArray_methods.indexWhere$1(t5, new A.Highlighter_highlight_closure());
        if (primaryIdx === -1)
          primary = _null;
        else {
          if (!(primaryIdx >= 0 && primaryIdx < t5.length))
            return A.ioore(t5, primaryIdx);
          primary = t5[primaryIdx];
        }
        t6 = primary != null;
        if (t6) {
          t7 = primary.span;
          t10 = t7.get$start(t7).get$line() === t8 ? t7.get$start(t7).get$column() : 0;
          _this._writeHighlightedText$4$color(t9, t10, t7.get$end().get$line() === t8 ? t7.get$end().get$column() : t9.length, t4);
        } else
          _this._writeText$1(t9);
        t3._contents += "\n";
        if (t6)
          _this._writeIndicator$3(line, primary, highlightsByColumn);
        for (t6 = t5.length, _i = 0; _i < t6; ++_i) {
          t5[_i].toString;
          continue;
        }
      }
      _this._writeSidebar$1$end("\u2575");
      t1 = t3._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _writeFileStart$1(url) {
      var _this = this;
      if (!_this._multipleFiles || !type$.Uri._is(url))
        _this._writeSidebar$1$end("\u2577");
      else {
        _this._writeSidebar$1$end("\u250c");
        _this._colorize$1$2$color(new A.Highlighter__writeFileStart_closure(_this), "\x1b[34m", type$.void);
        _this._highlighter$_buffer._contents += " " + $.$get$context().prettyUri$1(url);
      }
      _this._highlighter$_buffer._contents += "\n";
    },
    _writeMultilineHighlights$3$current(line, highlightsByColumn, current) {
      var t1, currentColor, t2, t3, t4, t5, t6, foundCurrent, _i, highlight, t7, startLine, t8, endLine, _this = this, _box_0 = {};
      type$.List_nullable__Highlight._as(highlightsByColumn);
      _box_0.openedOnThisLine = false;
      _box_0.openedOnThisLineColor = null;
      t1 = current == null;
      if (t1)
        currentColor = null;
      else
        currentColor = _this._primaryColor;
      for (t2 = highlightsByColumn.length, t3 = type$.Null, t4 = _this._primaryColor, t1 = !t1, t5 = _this._highlighter$_buffer, t6 = type$.void, foundCurrent = false, _i = 0; _i < t2; ++_i) {
        highlight = highlightsByColumn[_i];
        t7 = highlight == null;
        if (t7)
          startLine = null;
        else {
          t8 = highlight.span;
          startLine = t8.get$start(t8).get$line();
        }
        endLine = t7 ? null : highlight.span.get$end().get$line();
        if (t1 && highlight === current) {
          _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure(_this, startLine, line), currentColor, t3);
          foundCurrent = true;
        } else if (foundCurrent)
          _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure0(_this, highlight), currentColor, t3);
        else if (t7)
          if (_box_0.openedOnThisLine)
            _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure1(_this), _box_0.openedOnThisLineColor, t6);
          else
            t5._contents += " ";
        else
          _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure2(_box_0, _this, current, startLine, line, highlight, endLine), t4, t3);
      }
    },
    _writeMultilineHighlights$2(line, highlightsByColumn) {
      return this._writeMultilineHighlights$3$current(line, highlightsByColumn, null);
    },
    _writeHighlightedText$4$color(text, startColumn, endColumn, color) {
      var _this = this;
      _this._writeText$1(B.JSString_methods.substring$2(text, 0, startColumn));
      _this._colorize$1$2$color(new A.Highlighter__writeHighlightedText_closure(_this, text, startColumn, endColumn), color, type$.void);
      _this._writeText$1(B.JSString_methods.substring$2(text, endColumn, text.length));
    },
    _writeIndicator$3(line, highlight, highlightsByColumn) {
      var color, t1, t2, coversWholeLine, _this = this;
      type$.List_nullable__Highlight._as(highlightsByColumn);
      color = _this._primaryColor;
      t1 = highlight.span;
      if (t1.get$start(t1).get$line() === t1.get$end().get$line()) {
        _this._writeSidebar$0();
        t1 = _this._highlighter$_buffer;
        t1._contents += " ";
        _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
        if (highlightsByColumn.length !== 0)
          t1._contents += " ";
        _this._writeLabel$3(highlight, highlightsByColumn, _this._colorize$1$2$color(new A.Highlighter__writeIndicator_closure(_this, line, highlight), color, type$.int));
      } else {
        t2 = line.number;
        if (t1.get$start(t1).get$line() === t2) {
          if (B.JSArray_methods.contains$1(highlightsByColumn, highlight))
            return;
          A.replaceFirstNull(highlightsByColumn, highlight, type$._Highlight);
          _this._writeSidebar$0();
          t1 = _this._highlighter$_buffer;
          t1._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._colorize$1$2$color(new A.Highlighter__writeIndicator_closure0(_this, line, highlight), color, type$.void);
          t1._contents += "\n";
        } else if (t1.get$end().get$line() === t2) {
          coversWholeLine = t1.get$end().get$column() === line.text.length;
          if (coversWholeLine && true) {
            A.replaceWithNull(highlightsByColumn, highlight, type$._Highlight);
            return;
          }
          _this._writeSidebar$0();
          _this._highlighter$_buffer._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._writeLabel$3(highlight, highlightsByColumn, _this._colorize$1$2$color(new A.Highlighter__writeIndicator_closure1(_this, coversWholeLine, line, highlight), color, type$.int));
          A.replaceWithNull(highlightsByColumn, highlight, type$._Highlight);
        }
      }
    },
    _writeArrow$3$beginning(line, column, beginning) {
      var t1 = beginning ? 0 : 1,
        t2 = this._highlighter$_buffer;
      t1 = t2._contents += B.JSString_methods.$mul("\u2500", 1 + column + this._countTabs$1(B.JSString_methods.substring$2(line.text, 0, column + t1)) * 3);
      t2._contents = t1 + "^";
    },
    _writeArrow$2(line, column) {
      return this._writeArrow$3$beginning(line, column, true);
    },
    _writeLabel$3(highlight, highlightsByColumn, underlineLength) {
      type$.List_nullable__Highlight._as(highlightsByColumn);
      this._highlighter$_buffer._contents += "\n";
      return;
    },
    _writeText$1(text) {
      var t1, t2, t3, t4;
      for (t1 = new A.CodeUnits(text), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListBase.E>")), t3 = this._highlighter$_buffer, t2 = t2._eval$1("ListBase.E"); t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        if (t4 == null)
          t4 = t2._as(t4);
        if (t4 === 9)
          t3._contents += B.JSString_methods.$mul(" ", 4);
        else
          t3._contents += A.Primitives_stringFromCharCode(t4);
      }
    },
    _writeSidebar$3$end$line$text(end, line, text) {
      var t1 = {};
      t1.text = text;
      if (line != null)
        t1.text = B.JSInt_methods.toString$0(line + 1);
      this._colorize$1$2$color(new A.Highlighter__writeSidebar_closure(t1, this, end), "\x1b[34m", type$.Null);
    },
    _writeSidebar$1$end(end) {
      return this._writeSidebar$3$end$line$text(end, null, null);
    },
    _writeSidebar$1$text(text) {
      return this._writeSidebar$3$end$line$text(null, null, text);
    },
    _writeSidebar$1$line(line) {
      return this._writeSidebar$3$end$line$text(null, line, null);
    },
    _writeSidebar$0() {
      return this._writeSidebar$3$end$line$text(null, null, null);
    },
    _countTabs$1(text) {
      var t1, t2, count, t3;
      for (t1 = new A.CodeUnits(text), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListBase.E>")), t2 = t2._eval$1("ListBase.E"), count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === 9)
          ++count;
      }
      return count;
    },
    _isOnlyWhitespace$1(text) {
      var t1, t2, t3;
      for (t1 = new A.CodeUnits(text), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListBase.E>")), t2 = t2._eval$1("ListBase.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 !== 32 && t3 !== 9)
          return false;
      }
      return true;
    },
    _colorize$1$2$color(callback, color, $T) {
      var t1, result;
      $T._eval$1("0()")._as(callback);
      t1 = this._primaryColor != null;
      if (t1 && color != null)
        this._highlighter$_buffer._contents += color;
      result = callback.call$0();
      if (t1 && color != null)
        this._highlighter$_buffer._contents += "\x1b[0m";
      return result;
    }
  };
  A.Highlighter_closure.prototype = {
    call$0() {
      return this.color;
    },
    $signature: 66
  };
  A.Highlighter$__closure.prototype = {
    call$1(line) {
      var t1 = type$._Line._as(line).highlights,
        t2 = A._arrayInstanceType(t1);
      return new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Highlighter$___closure()), t2._eval$1("WhereIterable<1>")).get$length(0);
    },
    $signature: 67
  };
  A.Highlighter$___closure.prototype = {
    call$1(highlight) {
      var t1 = type$._Highlight._as(highlight).span;
      return t1.get$start(t1).get$line() !== t1.get$end().get$line();
    },
    $signature: 15
  };
  A.Highlighter$__closure0.prototype = {
    call$1(line) {
      return type$._Line._as(line).url;
    },
    $signature: 69
  };
  A.Highlighter__collateLines_closure.prototype = {
    call$1(highlight) {
      var t1 = type$._Highlight._as(highlight).span.get$sourceUrl();
      return t1 == null ? new A.Object() : t1;
    },
    $signature: 70
  };
  A.Highlighter__collateLines_closure0.prototype = {
    call$2(highlight1, highlight2) {
      var t1 = type$._Highlight;
      return t1._as(highlight1).span.compareTo$1(0, t1._as(highlight2).span);
    },
    $signature: 71
  };
  A.Highlighter__collateLines_closure1.prototype = {
    call$1(entry) {
      var url, highlightsForFile, lines, t1, t2, t3, t4, context, t5, linesBeforeSpan, lineNumber, _i, line, activeHighlights, highlightIndex, oldHighlightLength, t6, t7;
      type$.MapEntry_of_Object_and_List__Highlight._as(entry);
      url = entry.key;
      highlightsForFile = entry.value;
      lines = A._setArrayType([], type$.JSArray__Line);
      for (t1 = J.getInterceptor$ax(highlightsForFile), t2 = t1.get$iterator(highlightsForFile), t3 = type$.JSArray__Highlight; t2.moveNext$0();) {
        t4 = t2.get$current().span;
        context = t4.get$context();
        t5 = A.findLineStart(context, t4.get$text(t4), t4.get$start(t4).get$column());
        t5.toString;
        linesBeforeSpan = B.JSString_methods.allMatches$1("\n", B.JSString_methods.substring$2(context, 0, t5)).get$length(0);
        lineNumber = t4.get$start(t4).get$line() - linesBeforeSpan;
        for (t4 = context.split("\n"), t5 = t4.length, _i = 0; _i < t5; ++_i) {
          line = t4[_i];
          if (lines.length === 0 || lineNumber > B.JSArray_methods.get$last(lines).number)
            B.JSArray_methods.add$1(lines, new A._Line(line, lineNumber, url, A._setArrayType([], t3)));
          ++lineNumber;
        }
      }
      activeHighlights = A._setArrayType([], t3);
      for (t2 = lines.length, t3 = type$.bool_Function__Highlight, highlightIndex = 0, _i = 0; _i < lines.length; lines.length === t2 || (0, A.throwConcurrentModificationError)(lines), ++_i) {
        line = lines[_i];
        t4 = t3._as(new A.Highlighter__collateLines__closure(line));
        if (!!activeHighlights.fixed$length)
          A.throwExpression(A.UnsupportedError$("removeWhere"));
        B.JSArray_methods._removeWhere$2(activeHighlights, t4, true);
        oldHighlightLength = activeHighlights.length;
        for (t4 = t1.skip$1(highlightsForFile, highlightIndex), t5 = A._instanceType(t4), t4 = new A.ListIterator(t4, t4.get$length(t4), t5._eval$1("ListIterator<ListIterable.E>")), t5 = t5._eval$1("ListIterable.E"); t4.moveNext$0();) {
          t6 = t4.__internal$_current;
          if (t6 == null)
            t6 = t5._as(t6);
          t7 = t6.span;
          if (t7.get$start(t7).get$line() > line.number)
            break;
          B.JSArray_methods.add$1(activeHighlights, t6);
        }
        highlightIndex += activeHighlights.length - oldHighlightLength;
        B.JSArray_methods.addAll$1(line.highlights, activeHighlights);
      }
      return lines;
    },
    $signature: 72
  };
  A.Highlighter__collateLines__closure.prototype = {
    call$1(highlight) {
      return type$._Highlight._as(highlight).span.get$end().get$line() < this.line.number;
    },
    $signature: 15
  };
  A.Highlighter_highlight_closure.prototype = {
    call$1(highlight) {
      type$._Highlight._as(highlight);
      return true;
    },
    $signature: 15
  };
  A.Highlighter__writeFileStart_closure.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += B.JSString_methods.$mul("\u2500", 2) + ">";
      return null;
    },
    $signature: 1
  };
  A.Highlighter__writeMultilineHighlights_closure.prototype = {
    call$0() {
      var t1 = this.startLine === this.line.number ? "\u250c" : "\u2514";
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 2
  };
  A.Highlighter__writeMultilineHighlights_closure0.prototype = {
    call$0() {
      var t1 = this.highlight == null ? "\u2500" : "\u253c";
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 2
  };
  A.Highlighter__writeMultilineHighlights_closure1.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += "\u2500";
      return null;
    },
    $signature: 1
  };
  A.Highlighter__writeMultilineHighlights_closure2.prototype = {
    call$0() {
      var t2, t3, _this = this,
        t1 = _this._box_0,
        vertical = t1.openedOnThisLine ? "\u253c" : "\u2502";
      if (_this.current != null)
        _this.$this._highlighter$_buffer._contents += vertical;
      else {
        t2 = _this.line;
        t3 = t2.number;
        if (_this.startLine === t3) {
          t2 = _this.$this;
          t2._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights__closure(t1, t2), t1.openedOnThisLineColor, type$.Null);
          t1.openedOnThisLine = true;
          if (t1.openedOnThisLineColor == null)
            t1.openedOnThisLineColor = t2._primaryColor;
        } else {
          t2 = _this.endLine === t3 && _this.highlight.span.get$end().get$column() === t2.text.length;
          t3 = _this.$this;
          if (t2)
            t3._highlighter$_buffer._contents += "\u2514";
          else
            t3._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights__closure0(t3, vertical), t1.openedOnThisLineColor, type$.Null);
        }
      }
    },
    $signature: 2
  };
  A.Highlighter__writeMultilineHighlights__closure.prototype = {
    call$0() {
      var t1 = this._box_0.openedOnThisLine ? "\u252c" : "\u250c";
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 2
  };
  A.Highlighter__writeMultilineHighlights__closure0.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += this.vertical;
    },
    $signature: 2
  };
  A.Highlighter__writeHighlightedText_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this._writeText$1(B.JSString_methods.substring$2(_this.text, _this.startColumn, _this.endColumn));
    },
    $signature: 1
  };
  A.Highlighter__writeIndicator_closure.prototype = {
    call$0() {
      var tabsBefore, tabsInside,
        t1 = this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = t2._contents,
        t4 = this.highlight.span,
        startColumn = t4.get$start(t4).get$column(),
        endColumn = t4.get$end().get$column();
      t4 = this.line.text;
      tabsBefore = t1._countTabs$1(B.JSString_methods.substring$2(t4, 0, startColumn));
      tabsInside = t1._countTabs$1(B.JSString_methods.substring$2(t4, startColumn, endColumn));
      startColumn += tabsBefore * 3;
      t2._contents += B.JSString_methods.$mul(" ", startColumn);
      t2 = t2._contents += B.JSString_methods.$mul("^", Math.max(endColumn + (tabsBefore + tabsInside) * 3 - startColumn, 1));
      return t2.length - t3.length;
    },
    $signature: 28
  };
  A.Highlighter__writeIndicator_closure0.prototype = {
    call$0() {
      var t1 = this.highlight.span;
      return this.$this._writeArrow$2(this.line, t1.get$start(t1).get$column());
    },
    $signature: 1
  };
  A.Highlighter__writeIndicator_closure1.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = t2._contents;
      if (_this.coversWholeLine)
        t2._contents += B.JSString_methods.$mul("\u2500", 3);
      else
        t1._writeArrow$3$beginning(_this.line, Math.max(_this.highlight.span.get$end().get$column() - 1, 0), false);
      return t2._contents.length - t3.length;
    },
    $signature: 28
  };
  A.Highlighter__writeSidebar_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = this._box_0.text;
      if (t3 == null)
        t3 = "";
      t1 = t2._contents += B.JSString_methods.padRight$1(t3, t1._paddingBeforeSidebar);
      t3 = this.end;
      t2._contents = t1 + (t3 == null ? "\u2502" : t3);
    },
    $signature: 2
  };
  A._Highlight.prototype = {
    toString$0(_) {
      var t1 = this.span;
      t1 = "" + "primary " + ("" + t1.get$start(t1).get$line() + ":" + t1.get$start(t1).get$column() + "-" + t1.get$end().get$line() + ":" + t1.get$end().get$column());
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._Highlight_closure.prototype = {
    call$0() {
      var t2, t3, t4, t5,
        t1 = this.span;
      if (!(type$.SourceSpanWithContext._is(t1) && A.findLineStart(t1.get$context(), t1.get$text(t1), t1.get$start(t1).get$column()) != null)) {
        t2 = t1.get$start(t1);
        t2 = A.SourceLocation$(t2.get$offset(t2), 0, 0, t1.get$sourceUrl());
        t3 = t1.get$end();
        t3 = t3.get$offset(t3);
        t4 = t1.get$sourceUrl();
        t5 = A.countCodeUnits(t1.get$text(t1), 10);
        t1 = A.SourceSpanWithContext$(t2, A.SourceLocation$(t3, A._Highlight__lastLineLength(t1.get$text(t1)), t5, t4), t1.get$text(t1), t1.get$text(t1));
      }
      return A._Highlight__normalizeEndOfLine(A._Highlight__normalizeTrailingNewline(A._Highlight__normalizeNewlines(t1)));
    },
    $signature: 74
  };
  A._Line.prototype = {
    toString$0(_) {
      return "" + this.number + ': "' + this.text + '" (' + B.JSArray_methods.join$1(this.highlights, ", ") + ")";
    }
  };
  A.SourceLocation.prototype = {
    distance$1(other) {
      var t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t1) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset(other));
    },
    compareTo$1(_, other) {
      var t1;
      type$.SourceLocation._as(other);
      t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t1) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return this.offset - other.get$offset(other);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.sourceUrl, other.get$sourceUrl()) && this.offset === other.get$offset(other);
    },
    get$hashCode(_) {
      var t1 = this.sourceUrl;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var _this = this,
        t1 = A.getRuntimeTypeOfDartObject(_this).toString$0(0),
        source = _this.sourceUrl;
      return "<" + t1 + ": " + _this.offset + " " + (A.S(source == null ? "unknown source" : source) + ":" + (_this.line + 1) + ":" + (_this.column + 1)) + ">";
    },
    $isComparable: 1,
    get$sourceUrl() {
      return this.sourceUrl;
    },
    get$offset(receiver) {
      return this.offset;
    },
    get$line() {
      return this.line;
    },
    get$column() {
      return this.column;
    }
  };
  A.SourceLocationMixin.prototype = {
    distance$1(other) {
      if (!J.$eq$(this.file.url, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(this.get$sourceUrl()) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset(other));
    },
    compareTo$1(_, other) {
      type$.SourceLocation._as(other);
      if (!J.$eq$(this.file.url, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(this.get$sourceUrl()) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return this.offset - other.get$offset(other);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.file.url, other.get$sourceUrl()) && this.offset === other.get$offset(other);
    },
    get$hashCode(_) {
      var t1 = this.file.url;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var t1 = A.getRuntimeTypeOfDartObject(this).toString$0(0),
        t2 = this.offset,
        t3 = this.file,
        source = t3.url;
      return "<" + t1 + ": " + t2 + " " + (A.S(source == null ? "unknown source" : source) + ":" + (t3.getLine$1(t2) + 1) + ":" + (t3.getColumn$1(t2) + 1)) + ">";
    },
    $isComparable: 1,
    $isSourceLocation: 1
  };
  A.SourceSpanBase.prototype = {
    SourceSpanBase$3(start, end, text) {
      var t3,
        t1 = this.end,
        t2 = this.start;
      if (!J.$eq$(t1.get$sourceUrl(), t2.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t2.get$sourceUrl()) + '" and  "' + A.S(t1.get$sourceUrl()) + "\" don't match.", null));
      else if (t1.get$offset(t1) < t2.get$offset(t2))
        throw A.wrapException(A.ArgumentError$("End " + t1.toString$0(0) + " must come after start " + t2.toString$0(0) + ".", null));
      else {
        t3 = this.text;
        if (t3.length !== t2.distance$1(t1))
          throw A.wrapException(A.ArgumentError$('Text "' + t3 + '" must be ' + t2.distance$1(t1) + " characters long.", null));
      }
    },
    get$start(receiver) {
      return this.start;
    },
    get$end() {
      return this.end;
    },
    get$text(receiver) {
      return this.text;
    }
  };
  A.SourceSpanMixin.prototype = {
    get$sourceUrl() {
      return this.get$start(this).get$sourceUrl();
    },
    get$length(_) {
      var t2,
        t1 = this.get$end();
      t1 = t1.get$offset(t1);
      t2 = this.get$start(this);
      return t1 - t2.get$offset(t2);
    },
    compareTo$1(_, other) {
      var result;
      type$.SourceSpan._as(other);
      result = this.get$start(this).compareTo$1(0, other.get$start(other));
      return result === 0 ? this.get$end().compareTo$1(0, other.get$end()) : result;
    },
    highlight$1$color(color) {
      var _this = this;
      if (!type$.SourceSpanWithContext._is(_this) && _this.get$length(_this) === 0)
        return "";
      return A.Highlighter$(_this, color).highlight$0();
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.SourceSpanMixin && this.get$start(this).$eq(0, other.get$start(other)) && this.get$end().$eq(0, other.get$end());
    },
    get$hashCode(_) {
      return A.Object_hash(this.get$start(this), this.get$end(), B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "<" + A.getRuntimeTypeOfDartObject(_this).toString$0(0) + ": from " + _this.get$start(_this).toString$0(0) + " to " + _this.get$end().toString$0(0) + ' "' + _this.get$text(_this) + '">';
    },
    $isComparable: 1,
    $isSourceSpan: 1
  };
  A.SourceSpanWithContext.prototype = {
    get$context() {
      return this._context;
    }
  };
  A.Chain.prototype = {
    foldFrames$1(predicate) {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Trace>"),
        foldedTraces = new A.MappedListIterable(t1, t2._eval$1("Trace(1)")._as(new A.Chain_foldFrames_closure(type$.bool_Function_Frame._as(predicate), false)), t3),
        nonEmptyTraces = foldedTraces.super$Iterable$where(0, t3._eval$1("bool(ListIterable.E)")._as(new A.Chain_foldFrames_closure0(false)));
      if (!nonEmptyTraces.get$iterator(0).moveNext$0() && !foldedTraces.get$isEmpty(0))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([foldedTraces.get$last(0)], type$.JSArray_Trace), type$.Trace));
      return new A.Chain(A.List_List$unmodifiable(nonEmptyTraces, type$.Trace));
    },
    toTrace$0() {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1);
      return A.Trace$(new A.ExpandIterable(t1, t2._eval$1("Iterable<Frame>(1)")._as(new A.Chain_toTrace_closure()), t2._eval$1("ExpandIterable<1,Frame>")), null);
    },
    toString$0(_) {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Chain_toString_closure(new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Chain_toString_closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int))), t2._eval$1("MappedListIterable<1,String>")).join$1(0, string$.x3d_____);
    },
    $isStackTrace: 1,
    get$traces() {
      return this.traces;
    }
  };
  A.Chain_Chain$forTrace_closure.prototype = {
    call$0() {
      return A.Chain_Chain$parse(this.trace.toString$0(0));
    },
    $signature: 76
  };
  A.Chain_Chain$parse_closure.prototype = {
    call$1(line) {
      return A._asString(line).length !== 0;
    },
    $signature: 3
  };
  A.Chain_foldFrames_closure.prototype = {
    call$1(trace) {
      return type$.Trace._as(trace).foldFrames$2$terse(this.predicate, this.terse);
    },
    $signature: 77
  };
  A.Chain_foldFrames_closure0.prototype = {
    call$1(trace) {
      type$.Trace._as(trace);
      if (trace.get$frames().length > 1)
        return true;
      if (trace.get$frames().length === 0)
        return false;
      if (!this.terse)
        return false;
      return B.JSArray_methods.get$single(trace.get$frames()).get$line() != null;
    },
    $signature: 78
  };
  A.Chain_toTrace_closure.prototype = {
    call$1(trace) {
      return type$.Trace._as(trace).get$frames();
    },
    $signature: 79
  };
  A.Chain_toString_closure0.prototype = {
    call$1(trace) {
      var t1 = type$.Trace._as(trace).get$frames(),
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Chain_toString__closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int);
    },
    $signature: 80
  };
  A.Chain_toString__closure0.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return frame.get$location(frame).length;
    },
    $signature: 30
  };
  A.Chain_toString_closure.prototype = {
    call$1(trace) {
      var t1 = type$.Trace._as(trace).get$frames(),
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Chain_toString__closure(this.longest)), t2._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $signature: 82
  };
  A.Chain_toString__closure.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return B.JSString_methods.padRight$1(frame.get$location(frame), this.longest) + "  " + A.S(frame.get$member()) + "\n";
    },
    $signature: 16
  };
  A.Frame.prototype = {
    get$library() {
      var t1 = this.uri;
      if (t1.get$scheme() === "data")
        return "data:...";
      return $.$get$context().prettyUri$1(t1);
    },
    get$$package() {
      var t1 = this.uri;
      if (t1.get$scheme() !== "package")
        return null;
      return B.JSArray_methods.get$first(t1.get$path(t1).split("/"));
    },
    get$location(_) {
      var t2, _this = this,
        t1 = _this.line;
      if (t1 == null)
        return _this.get$library();
      t2 = _this.column;
      if (t2 == null)
        return _this.get$library() + " " + A.S(t1);
      return _this.get$library() + " " + A.S(t1) + ":" + A.S(t2);
    },
    toString$0(_) {
      return this.get$location(0) + " in " + A.S(this.member);
    },
    get$uri() {
      return this.uri;
    },
    get$line() {
      return this.line;
    },
    get$column() {
      return this.column;
    },
    get$member() {
      return this.member;
    }
  };
  A.Frame_Frame$parseVM_closure.prototype = {
    call$0() {
      var match, t2, t3, member, uri, lineAndColumn, line, _null = null,
        t1 = this.frame;
      if (t1 === "...")
        return new A.Frame(A._Uri__Uri(_null, _null, _null, _null), _null, _null, "...");
      match = $.$get$_vmFrame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      t3 = $.$get$_asyncBody();
      t2 = A.stringReplaceAllUnchecked(t2, t3, "<async>");
      member = A.stringReplaceAllUnchecked(t2, "<anonymous closure>", "<fn>");
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t3 = t2;
      t3.toString;
      if (B.JSString_methods.startsWith$1(t3, "<data:"))
        uri = A.Uri_Uri$dataFromString("");
      else {
        t2 = t2;
        t2.toString;
        uri = A.Uri_parse(t2);
      }
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      lineAndColumn = t1[3].split(":");
      t1 = lineAndColumn.length;
      line = t1 > 1 ? A.int_parse(lineAndColumn[1], _null) : _null;
      return new A.Frame(uri, line, t1 > 2 ? A.int_parse(lineAndColumn[2], _null) : _null, member);
    },
    $signature: 5
  };
  A.Frame_Frame$parseV8_closure.prototype = {
    call$0() {
      var t2, t3, t4, _s4_ = "<fn>",
        t1 = this.frame,
        match = $.$get$_v8Frame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(null, "unparsed", null, null), t1);
      t1 = new A.Frame_Frame$parseV8_closure_parseLocation(t1);
      t2 = match._match;
      t3 = t2.length;
      if (2 >= t3)
        return A.ioore(t2, 2);
      t4 = t2[2];
      if (t4 != null) {
        t3 = t4;
        t3.toString;
        t2 = t2[1];
        t2.toString;
        t2 = A.stringReplaceAllUnchecked(t2, "<anonymous>", _s4_);
        t2 = A.stringReplaceAllUnchecked(t2, "Anonymous function", _s4_);
        return t1.call$2(t3, A.stringReplaceAllUnchecked(t2, "(anonymous function)", _s4_));
      } else {
        if (3 >= t3)
          return A.ioore(t2, 3);
        t2 = t2[3];
        t2.toString;
        return t1.call$2(t2, _s4_);
      }
    },
    $signature: 5
  };
  A.Frame_Frame$parseV8_closure_parseLocation.prototype = {
    call$2($location, member) {
      var t2, urlMatch, uri, line, columnMatch, _null = null,
        t1 = $.$get$_v8EvalLocation(),
        evalMatch = t1.firstMatch$1($location);
      for (; evalMatch != null; $location = t2) {
        t2 = evalMatch._match;
        if (1 >= t2.length)
          return A.ioore(t2, 1);
        t2 = t2[1];
        t2.toString;
        evalMatch = t1.firstMatch$1(t2);
      }
      if ($location === "native")
        return new A.Frame(A.Uri_parse("native"), _null, _null, member);
      urlMatch = $.$get$_v8UrlLocation().firstMatch$1($location);
      if (urlMatch == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), this.frame);
      t1 = urlMatch._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      uri = A.Frame__uriOrPathToUri(t2);
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t2.toString;
      line = A.int_parse(t2, _null);
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      columnMatch = t1[3];
      return new A.Frame(uri, line, columnMatch != null ? A.int_parse(columnMatch, _null) : _null, member);
    },
    $signature: 85
  };
  A.Frame_Frame$_parseFirefoxEval_closure.prototype = {
    call$0() {
      var t2, member, uri, line, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxEvalLocation().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      member = A.stringReplaceAllUnchecked(t2, "/<", "");
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t2.toString;
      uri = A.Frame__uriOrPathToUri(t2);
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      t1 = t1[3];
      t1.toString;
      line = A.int_parse(t1, _null);
      return new A.Frame(uri, line, _null, member.length === 0 || member === "anonymous" ? "<fn>" : member);
    },
    $signature: 5
  };
  A.Frame_Frame$parseFirefox_closure.prototype = {
    call$0() {
      var t2, t3, t4, uri, member, line, column, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxSafariFrame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t2 = match._match;
      if (3 >= t2.length)
        return A.ioore(t2, 3);
      t3 = t2[3];
      t4 = t3;
      t4.toString;
      if (B.JSString_methods.contains$1(t4, " line "))
        return A.Frame_Frame$_parseFirefoxEval(t1);
      t1 = t3;
      t1.toString;
      uri = A.Frame__uriOrPathToUri(t1);
      t1 = t2.length;
      if (1 >= t1)
        return A.ioore(t2, 1);
      member = t2[1];
      if (member != null) {
        if (2 >= t1)
          return A.ioore(t2, 2);
        t1 = t2[2];
        t1.toString;
        member += B.JSArray_methods.join$0(A.List_List$filled(B.JSString_methods.allMatches$1("/", t1).get$length(0), ".<fn>", false, type$.String));
        if (member === "")
          member = "<fn>";
        member = B.JSString_methods.replaceFirst$2(member, $.$get$_initialDot(), "");
      } else
        member = "<fn>";
      if (4 >= t2.length)
        return A.ioore(t2, 4);
      t1 = t2[4];
      if (t1 === "")
        line = _null;
      else {
        t1 = t1;
        t1.toString;
        line = A.int_parse(t1, _null);
      }
      if (5 >= t2.length)
        return A.ioore(t2, 5);
      t1 = t2[5];
      if (t1 == null || t1 === "")
        column = _null;
      else {
        t1 = t1;
        t1.toString;
        column = A.int_parse(t1, _null);
      }
      return new A.Frame(uri, line, column, member);
    },
    $signature: 5
  };
  A.Frame_Frame$parseFriendly_closure.prototype = {
    call$0() {
      var t2, uri, line, column, _null = null,
        t1 = this.frame,
        match = $.$get$_friendlyFrame().firstMatch$1(t1);
      if (match == null)
        throw A.wrapException(A.FormatException$("Couldn't parse package:stack_trace stack trace line '" + t1 + "'.", _null, _null));
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      if (t2 === "data:...")
        uri = A.Uri_Uri$dataFromString("");
      else {
        t2 = t2;
        t2.toString;
        uri = A.Uri_parse(t2);
      }
      if (uri.get$scheme() === "") {
        t2 = $.$get$context();
        uri = t2.toUri$1(t2.absolute$15(0, t2.style.pathFromUri$1(A._parseUri(uri)), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      }
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      if (t2 == null)
        line = _null;
      else {
        t2 = t2;
        t2.toString;
        line = A.int_parse(t2, _null);
      }
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      t2 = t1[3];
      if (t2 == null)
        column = _null;
      else {
        t2 = t2;
        t2.toString;
        column = A.int_parse(t2, _null);
      }
      if (4 >= t1.length)
        return A.ioore(t1, 4);
      return new A.Frame(uri, line, column, t1[4]);
    },
    $signature: 5
  };
  A.LazyChain.prototype = {
    get$_chain() {
      var result, _this = this,
        value = _this.__LazyChain__chain_FI;
      if (value === $) {
        result = _this._thunk.call$0();
        _this.__LazyChain__chain_FI !== $ && A.throwLateFieldADI("_chain");
        _this.__LazyChain__chain_FI = result;
        value = result;
      }
      return value;
    },
    get$traces() {
      return this.get$_chain().get$traces();
    },
    toTrace$0() {
      return new A.LazyTrace(this.get$_chain().get$toTrace());
    },
    toString$0(_) {
      return this.get$_chain().toString$0(0);
    },
    $isStackTrace: 1,
    $isChain: 1
  };
  A.LazyTrace.prototype = {
    get$_lazy_trace$_trace() {
      var result, _this = this,
        value = _this.__LazyTrace__trace_FI;
      if (value === $) {
        result = _this._lazy_trace$_thunk.call$0();
        _this.__LazyTrace__trace_FI !== $ && A.throwLateFieldADI("_trace");
        _this.__LazyTrace__trace_FI = result;
        value = result;
      }
      return value;
    },
    get$frames() {
      return this.get$_lazy_trace$_trace().get$frames();
    },
    get$original() {
      return this.get$_lazy_trace$_trace().get$original();
    },
    foldFrames$2$terse(predicate, terse) {
      return new A.LazyTrace(new A.LazyTrace_foldFrames_closure(this, type$.bool_Function_Frame._as(predicate), false));
    },
    toString$0(_) {
      return this.get$_lazy_trace$_trace().toString$0(0);
    },
    $isStackTrace: 1,
    $isTrace: 1
  };
  A.LazyTrace_foldFrames_closure.prototype = {
    call$0() {
      return this.$this.get$_lazy_trace$_trace().foldFrames$2$terse(this.predicate, this.terse);
    },
    $signature: 4
  };
  A.Trace.prototype = {
    foldFrames$2$terse(predicate, terse) {
      var newFrames, t1, t2, t3, _box_0 = {};
      _box_0.predicate = predicate;
      _box_0.predicate = type$.bool_Function_Frame._as(predicate);
      newFrames = A._setArrayType([], type$.JSArray_Frame);
      for (t1 = this.frames, t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"), t1 = new A.ReversedListIterable(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 instanceof A.UnparsedFrame || !A.boolConversionCheck(_box_0.predicate.call$1(t3)))
          B.JSArray_methods.add$1(newFrames, t3);
        else if (newFrames.length === 0 || !A.boolConversionCheck(_box_0.predicate.call$1(B.JSArray_methods.get$last(newFrames))))
          B.JSArray_methods.add$1(newFrames, new A.Frame(t3.get$uri(), t3.get$line(), t3.get$column(), t3.get$member()));
      }
      return A.Trace$(new A.ReversedListIterable(newFrames, type$.ReversedListIterable_Frame), this.original._stackTrace);
    },
    toString$0(_) {
      var t1 = this.frames,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Trace_toString_closure(new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Trace_toString_closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int))), t2._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $isStackTrace: 1,
    get$frames() {
      return this.frames;
    },
    get$original() {
      return this.original;
    }
  };
  A.Trace_Trace$current_closure.prototype = {
    call$0() {
      var t1 = this.trace,
        t2 = t1.get$frames();
      return A.Trace$(A.SubListIterable$(t2, this.level + 2, null, A._arrayInstanceType(t2)._precomputed1), t1.get$original()._stackTrace);
    },
    $signature: 4
  };
  A.Trace_Trace$from_closure.prototype = {
    call$0() {
      return A.Trace_Trace$parse(this.trace.toString$0(0));
    },
    $signature: 4
  };
  A.Trace__parseVM_closure.prototype = {
    call$1(line) {
      return A._asString(line).length !== 0;
    },
    $signature: 3
  };
  A.Trace$parseV8_closure.prototype = {
    call$1(line) {
      return !B.JSString_methods.startsWith$1(A._asString(line), $.$get$_v8TraceLine());
    },
    $signature: 3
  };
  A.Trace$parseJSCore_closure.prototype = {
    call$1(line) {
      return A._asString(line) !== "\tat ";
    },
    $signature: 3
  };
  A.Trace$parseFirefox_closure.prototype = {
    call$1(line) {
      A._asString(line);
      return line.length !== 0 && line !== "[native code]";
    },
    $signature: 3
  };
  A.Trace$parseFriendly_closure.prototype = {
    call$1(line) {
      return !B.JSString_methods.startsWith$1(A._asString(line), "=====");
    },
    $signature: 3
  };
  A.Trace_toString_closure0.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return frame.get$location(frame).length;
    },
    $signature: 30
  };
  A.Trace_toString_closure.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      if (frame instanceof A.UnparsedFrame)
        return frame.toString$0(0) + "\n";
      return B.JSString_methods.padRight$1(frame.get$location(frame), this.longest) + "  " + A.S(frame.get$member()) + "\n";
    },
    $signature: 16
  };
  A.UnparsedFrame.prototype = {
    toString$0(_) {
      return this.member;
    },
    $isFrame: 1,
    get$uri() {
      return this.uri;
    },
    get$line() {
      return null;
    },
    get$column() {
      return null;
    },
    get$$package() {
      return null;
    },
    get$location() {
      return "unparsed";
    },
    get$member() {
      return this.member;
    }
  };
  A.VMTrace.prototype = {
    toString$0(_) {
      var t2, t3, t1 = {};
      t1.i = 1;
      t2 = this.frames;
      t3 = A._arrayInstanceType(t2);
      return new A.MappedListIterable(t2, t3._eval$1("String(1)")._as(new A.VMTrace_toString_closure(t1)), t3._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $isStackTrace: 1
  };
  A.VMTrace_toString_closure.prototype = {
    call$1(frame) {
      var number, t1, member, line, column;
      type$.Frame._as(frame);
      number = B.JSString_methods.padRight$1("#" + this._box_0.i++, 8);
      t1 = frame.get$member();
      t1.toString;
      t1 = A.stringReplaceAllFuncUnchecked(t1, A.RegExp_RegExp("[^.]+\\.<async>", false), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(new A.VMTrace_toString__closure())), null);
      member = A.stringReplaceAllUnchecked(t1, "<fn>", "<anonymous closure>");
      line = frame.get$line();
      if (line == null)
        line = 0;
      column = frame.get$column();
      if (column == null)
        column = 0;
      return number + member + " (" + frame.get$uri().toString$0(0) + ":" + line + ":" + column + ")\n";
    },
    $signature: 16
  };
  A.VMTrace_toString__closure.prototype = {
    call$1(match) {
      return A.S(match.$index(0, 1)) + ".<" + A.S(match.$index(0, 1)) + "_async_body>";
    },
    $signature: 86
  };
  A.StateNotifierListenerError.prototype = {
    toString$0(_) {
      var t1, t2, i, error, stackTrace,
        buffer = new A.StringBuffer("");
      for (t1 = this.errors, t2 = this.stackTraces, i = 0; i < t1.length; ++i) {
        error = t1[i];
        if (!(i < t2.length))
          return A.ioore(t2, i);
        stackTrace = t2[i];
        buffer._contents += A.S(error) + "\n";
        buffer._contents += A.S(stackTrace) + "\n";
      }
      return "At least listener of the StateNotifier " + this.stateNotifier.toString$0(0) + " threw an exception\nwhen the notifier tried to update its state.\n\nThe exceptions thrown are:\n\n" + buffer.toString$0(0) + "\n";
    }
  };
  A.StateNotifier.prototype = {
    get$state(_) {
      return this._state_notifier$_state;
    },
    set$state(_, value) {
      var errors, stackTraces, listenerEntry, error, stackTrace, previousState, t3, t4, t5, listenerEntry0, exception, _this = this,
        t1 = _this.$ti,
        t2 = t1._precomputed1;
      t2._as(value);
      previousState = _this._state_notifier$_state;
      _this.set$_state_notifier$_state(value);
      t2._as(previousState);
      if (previousState == null ? value == null : previousState === value)
        return;
      errors = A._setArrayType([], type$.JSArray_Object);
      stackTraces = A._setArrayType([], type$.JSArray_nullable_StackTrace);
      for (t2 = _this._listeners, t2 = A._LinkedListIterator$(t2, t2.$ti._precomputed1), t3 = type$.Object, t4 = type$.StackTrace, t1 = t1._eval$1("~(1)"), t5 = t2.$ti._precomputed1; t2.moveNext$0();) {
        listenerEntry0 = t2._collection$_current;
        listenerEntry = listenerEntry0 == null ? t5._as(listenerEntry0) : listenerEntry0;
        try {
          t1._as(listenerEntry.listener).call$1(value);
        } catch (exception) {
          error = A.unwrapException(exception);
          stackTrace = A.getTraceFromException(exception);
          J.add$1$ax(errors, error);
          J.add$1$ax(stackTraces, stackTrace);
          A._rootHandleError(t3._as(error), t4._as(stackTrace));
        }
      }
      if (J.get$length$asx(errors) !== 0)
        throw A.wrapException(new A.StateNotifierListenerError(errors, stackTraces, _this));
    },
    addListener$2$fireImmediately(listener, fireImmediately) {
      var listenerEntry, err, stack, t2, exception,
        t1 = this.$ti;
      t1._eval$1("~(1)")._as(listener);
      listenerEntry = new A._ListenerEntry(listener, t1._eval$1("_ListenerEntry<1>"));
      t1 = this._listeners;
      t2 = t1.$ti._precomputed1._as(listenerEntry);
      t1._insertBefore$3$updateFirst(t1._collection$_first, t2, false);
      try {
        listener.call$1(A.StateNotifier.prototype.get$state.call(this, 0));
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        t1 = listenerEntry;
        t2 = t1._list;
        t2.toString;
        t2._unlink$1(A.instanceType(t1)._eval$1("LinkedListEntry.E")._as(t1));
        throw exception;
      } finally {
      }
      return new A.StateNotifier_addListener_closure(listenerEntry);
    },
    set$_state_notifier$_state(_state) {
      this._state_notifier$_state = this.$ti._precomputed1._as(_state);
    }
  };
  A.StateNotifier_addListener_closure.prototype = {
    call$0() {
      var t1 = this.listenerEntry,
        t2 = t1._list;
      if (t2 != null)
        t2._unlink$1(t1.$ti._eval$1("LinkedListEntry.E")._as(t1));
    },
    $signature: 1
  };
  A._ListenerEntry.prototype = {};
  (function aliases() {
    var _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A.ListBase.prototype;
    _.super$ListBase$clear = _.clear$0;
    _ = A.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _.super$Iterable$skipWhile = _.skipWhile$1;
    _ = A.Phase.prototype;
    _.super$Phase$processCharacters = _.processCharacters$1;
    _ = A.ListProxy.prototype;
    _.super$ListProxy$$indexSet = _.$indexSet;
    _.super$ListProxy$add = _.add$1;
    _.super$ListProxy$insert = _.insert$2;
    _.super$ListProxy$addAll = _.addAll$1;
    _ = A.ComponentsBinding.prototype;
    _.super$ComponentsBinding$attachRootComponent = _.attachRootComponent$1;
    _ = A.NoChildElement.prototype;
    _.super$NoChildElement$_firstBuild = _._firstBuild$1;
    _ = A.Element.prototype;
    _.super$Element$mount = _.mount$2;
    _.super$Element$_firstBuild = _._firstBuild$1;
    _.super$Element$update = _.update$1;
    _.super$Element$deactivate = _.deactivate$0;
    _.super$Element$unmount = _.unmount$0;
    _.super$Element$_updateInheritance = _._updateInheritance$0;
    _.super$Element$didChangeDependencies = _.didChangeDependencies$0;
    _.super$Element$_didUpdateSlot = _._didUpdateSlot$0;
    _ = A.InheritedElement.prototype;
    _.super$InheritedElement$getDependencies = _.getDependencies$1;
    _.super$InheritedElement$setDependencies = _.setDependencies$2;
    _.super$InheritedElement$didRebuildDependent = _.didRebuildDependent$1;
    _.super$InheritedElement$deactivateDependent = _.deactivateDependent$1;
    _.super$InheritedElement$build = _.build$0;
    _ = A.MultiChildElement.prototype;
    _.super$MultiChildElement$_firstBuild = _._firstBuild$1;
    _.super$MultiChildElement$performRebuild = _.performRebuild$0;
    _ = A.SingleChildElement.prototype;
    _.super$SingleChildElement$mount = _.mount$2;
    _.super$SingleChildElement$_firstBuild = _._firstBuild$1;
    _ = A.State.prototype;
    _.super$State$initState = _.initState$0;
    _.super$State$didUpdateComponent = _.didUpdateComponent$1;
    _.super$State$dispose = _.dispose$0;
    _ = A._DomElement_MultiChildElement_RenderObjectElement.prototype;
    _.super$_DomElement_MultiChildElement_RenderObjectElement$update = _.update$1;
    _ = A._ProviderScopeState_State_SyncStateMixin.prototype;
    _.super$_ProviderScopeState_State_SyncStateMixin$initState = _.initState$0;
    _.super$_ProviderScopeState_State_SyncStateMixin$dispose = _.dispose$0;
    _ = A.ProviderElementBase.prototype;
    _.super$ProviderElementBase$update = _.update$1;
    _.super$ProviderElementBase$visitChildren = _.visitChildren$2$elementVisitor$notifierVisitor;
    _.super$ProviderElementBase$runOnDispose = _.runOnDispose$0;
    _ = A.ProviderSubscription.prototype;
    _.super$ProviderSubscription$close = _.close$0;
    _ = A.SourceSpanMixin.prototype;
    _.super$SourceSpanMixin$compareTo = _.compareTo$1;
    _.super$SourceSpanMixin$$eq = _.$eq;
    _ = A.StateNotifier.prototype;
    _.super$StateNotifier$state = _.set$state;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _instance = hunkHelpers.installInstanceTearOff,
      _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_0_u = hunkHelpers._instance_0u,
      _static = hunkHelpers.installStaticTearOff,
      _instance_1_u = hunkHelpers._instance_1u;
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 33);
    _instance(J.JSString.prototype, "get$startsWith", 1, 1, null, ["call$2", "call$1"], ["startsWith$2", "startsWith$1"], 83, 0, 0);
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 10);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 10);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 10);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 1);
    _instance_2_u(A._RootZone.prototype, "get$handleUncaughtError", "handleUncaughtError$2", 29);
    _static_2(A, "collection_ListBase__compareAny$closure", "ListBase__compareAny", 33);
    _static_1(A, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 8);
    _static_1(A, "constants__isWhitespace$closure", "isWhitespace", 17);
    _static_1(A, "constants__isDigit$closure", "isDigit", 17);
    _static_1(A, "constants__isHexDigit$closure", "isHexDigit", 17);
    _static_1(A, "constants__AsciiUpperToLower__asciiToLower$closure", "AsciiUpperToLower__asciiToLower", 89);
    var _;
    _instance_0_u(_ = A.HtmlTokenizer.prototype, "get$dataState", "dataState$0", 0);
    _instance_0_u(_, "get$entityDataState", "entityDataState$0", 0);
    _instance_0_u(_, "get$rcdataState", "rcdataState$0", 0);
    _instance_0_u(_, "get$characterReferenceInRcdata", "characterReferenceInRcdata$0", 0);
    _instance_0_u(_, "get$rawtextState", "rawtextState$0", 0);
    _instance_0_u(_, "get$scriptDataState", "scriptDataState$0", 0);
    _instance_0_u(_, "get$plaintextState", "plaintextState$0", 0);
    _instance_0_u(_, "get$tagOpenState", "tagOpenState$0", 0);
    _instance_0_u(_, "get$closeTagOpenState", "closeTagOpenState$0", 0);
    _instance_0_u(_, "get$tagNameState", "tagNameState$0", 0);
    _instance_0_u(_, "get$rcdataLessThanSignState", "rcdataLessThanSignState$0", 0);
    _instance_0_u(_, "get$rcdataEndTagOpenState", "rcdataEndTagOpenState$0", 0);
    _instance_0_u(_, "get$rcdataEndTagNameState", "rcdataEndTagNameState$0", 0);
    _instance_0_u(_, "get$rawtextLessThanSignState", "rawtextLessThanSignState$0", 0);
    _instance_0_u(_, "get$rawtextEndTagOpenState", "rawtextEndTagOpenState$0", 0);
    _instance_0_u(_, "get$rawtextEndTagNameState", "rawtextEndTagNameState$0", 0);
    _instance_0_u(_, "get$scriptDataLessThanSignState", "scriptDataLessThanSignState$0", 0);
    _instance_0_u(_, "get$scriptDataEndTagOpenState", "scriptDataEndTagOpenState$0", 0);
    _instance_0_u(_, "get$scriptDataEndTagNameState", "scriptDataEndTagNameState$0", 0);
    _instance_0_u(_, "get$scriptDataEscapeStartState", "scriptDataEscapeStartState$0", 0);
    _instance_0_u(_, "get$scriptDataEscapeStartDashState", "scriptDataEscapeStartDashState$0", 0);
    _instance_0_u(_, "get$scriptDataEscapedState", "scriptDataEscapedState$0", 0);
    _instance_0_u(_, "get$scriptDataEscapedDashState", "scriptDataEscapedDashState$0", 0);
    _instance_0_u(_, "get$scriptDataEscapedDashDashState", "scriptDataEscapedDashDashState$0", 0);
    _instance_0_u(_, "get$scriptDataEscapedLessThanSignState", "scriptDataEscapedLessThanSignState$0", 0);
    _instance_0_u(_, "get$scriptDataEscapedEndTagOpenState", "scriptDataEscapedEndTagOpenState$0", 0);
    _instance_0_u(_, "get$scriptDataEscapedEndTagNameState", "scriptDataEscapedEndTagNameState$0", 0);
    _instance_0_u(_, "get$scriptDataDoubleEscapeStartState", "scriptDataDoubleEscapeStartState$0", 0);
    _instance_0_u(_, "get$scriptDataDoubleEscapedState", "scriptDataDoubleEscapedState$0", 0);
    _instance_0_u(_, "get$scriptDataDoubleEscapedDashState", "scriptDataDoubleEscapedDashState$0", 0);
    _instance_0_u(_, "get$scriptDataDoubleEscapedDashDashState", "scriptDataDoubleEscapedDashDashState$0", 0);
    _instance_0_u(_, "get$scriptDataDoubleEscapedLessThanSignState", "scriptDataDoubleEscapedLessThanSignState$0", 0);
    _instance_0_u(_, "get$scriptDataDoubleEscapeEndState", "scriptDataDoubleEscapeEndState$0", 0);
    _instance_0_u(_, "get$beforeAttributeNameState", "beforeAttributeNameState$0", 0);
    _instance_0_u(_, "get$attributeNameState", "attributeNameState$0", 0);
    _instance_0_u(_, "get$afterAttributeNameState", "afterAttributeNameState$0", 0);
    _instance_0_u(_, "get$beforeAttributeValueState", "beforeAttributeValueState$0", 0);
    _instance_0_u(_, "get$attributeValueDoubleQuotedState", "attributeValueDoubleQuotedState$0", 0);
    _instance_0_u(_, "get$attributeValueSingleQuotedState", "attributeValueSingleQuotedState$0", 0);
    _instance_0_u(_, "get$attributeValueUnQuotedState", "attributeValueUnQuotedState$0", 0);
    _instance_0_u(_, "get$afterAttributeValueState", "afterAttributeValueState$0", 0);
    _instance_0_u(_, "get$selfClosingStartTagState", "selfClosingStartTagState$0", 0);
    _instance_0_u(_, "get$bogusCommentState", "bogusCommentState$0", 0);
    _instance_0_u(_, "get$markupDeclarationOpenState", "markupDeclarationOpenState$0", 0);
    _instance_0_u(_, "get$commentStartState", "commentStartState$0", 0);
    _instance_0_u(_, "get$commentStartDashState", "commentStartDashState$0", 0);
    _instance_0_u(_, "get$commentState", "commentState$0", 0);
    _instance_0_u(_, "get$commentEndDashState", "commentEndDashState$0", 0);
    _instance_0_u(_, "get$commentEndState", "commentEndState$0", 0);
    _instance_0_u(_, "get$commentEndBangState", "commentEndBangState$0", 0);
    _instance_0_u(_, "get$doctypeState", "doctypeState$0", 0);
    _instance_0_u(_, "get$beforeDoctypeNameState", "beforeDoctypeNameState$0", 0);
    _instance_0_u(_, "get$doctypeNameState", "doctypeNameState$0", 0);
    _instance_0_u(_, "get$afterDoctypeNameState", "afterDoctypeNameState$0", 0);
    _instance_0_u(_, "get$afterDoctypePublicKeywordState", "afterDoctypePublicKeywordState$0", 0);
    _instance_0_u(_, "get$beforeDoctypePublicIdentifierState", "beforeDoctypePublicIdentifierState$0", 0);
    _instance_0_u(_, "get$doctypePublicIdentifierDoubleQuotedState", "doctypePublicIdentifierDoubleQuotedState$0", 0);
    _instance_0_u(_, "get$doctypePublicIdentifierSingleQuotedState", "doctypePublicIdentifierSingleQuotedState$0", 0);
    _instance_0_u(_, "get$afterDoctypePublicIdentifierState", "afterDoctypePublicIdentifierState$0", 0);
    _instance_0_u(_, "get$betweenDoctypePublicAndSystemIdentifiersState", "betweenDoctypePublicAndSystemIdentifiersState$0", 0);
    _instance_0_u(_, "get$afterDoctypeSystemKeywordState", "afterDoctypeSystemKeywordState$0", 0);
    _instance_0_u(_, "get$beforeDoctypeSystemIdentifierState", "beforeDoctypeSystemIdentifierState$0", 0);
    _instance_0_u(_, "get$doctypeSystemIdentifierDoubleQuotedState", "doctypeSystemIdentifierDoubleQuotedState$0", 0);
    _instance_0_u(_, "get$doctypeSystemIdentifierSingleQuotedState", "doctypeSystemIdentifierSingleQuotedState$0", 0);
    _instance_0_u(_, "get$afterDoctypeSystemIdentifierState", "afterDoctypeSystemIdentifierState$0", 0);
    _instance_0_u(_, "get$bogusDoctypeState", "bogusDoctypeState$0", 0);
    _instance_0_u(_, "get$cdataSectionState", "cdataSectionState$0", 0);
    _static(A, "events__events$closure", 0, null, ["call$2$3$onChange$onClick$onInput", "call$0", "call$2$0", "call$2$1$onClick", "call$2$2$onChange$onInput"], ["events", function() {
      var t1 = type$.dynamic;
      return A.events(null, null, null, t1, t1);
    }, function(V1, V2) {
      return A.events(null, null, null, V1, V2);
    }, function(onClick, V1, V2) {
      return A.events(null, onClick, null, V1, V2);
    }, function(onChange, onInput, V1, V2) {
      return A.events(onChange, null, onInput, V1, V2);
    }], 90, 0);
    _static_2(A, "framework_Element__sort$closure", "Element__sort", 91);
    _static_1(A, "framework__InactiveElements__deactivateRecursively$closure", "_InactiveElements__deactivateRecursively", 12);
    _instance_0_u(A.BuildOwner.prototype, "get$performBuild", "performBuild$0", 1);
    _instance_0_u(A._InactiveElements.prototype, "get$_unmountAll", "_unmountAll$0", 1);
    _instance_0_u(A.AppState.prototype, "get$convert", "convert$0", 1);
    _instance_0_u(A.JasprRenderAreaState.prototype, "get$copyToClipboard", "copyToClipboard$0", 1);
    _instance_1_u(A._UncontrolledProviderScopeElement.prototype, "get$_jasprVsync", "_jasprVsync$1", 10);
    _instance_1_u(A.ProviderElementBase.prototype, "get$update", "update$1", 26);
    _instance_1_u(A.ValueProviderElement.prototype, "get$update", "update$1", 26);
    _instance_2_u(A._ValueListenable.prototype, "get$_notifyError", "_notifyError$2", 29);
    _static_2(A, "stack_trace__throwErrorWithCombinedStackTrace$closure", "throwErrorWithCombinedStackTrace", 92);
    _instance_0_u(A.Chain.prototype, "get$toTrace", "toTrace$0", 4);
    _static_1(A, "frame_Frame___parseVM_tearOff$closure", "Frame___parseVM_tearOff", 6);
    _static_1(A, "frame_Frame___parseV8_tearOff$closure", "Frame___parseV8_tearOff", 6);
    _static_1(A, "frame_Frame___parseFirefox_tearOff$closure", "Frame___parseFirefox_tearOff", 6);
    _static_1(A, "frame_Frame___parseFriendly_tearOff$closure", "Frame___parseFriendly_tearOff", 6);
    _instance_0_u(A.LazyChain.prototype, "get$toTrace", "toTrace$0", 4);
    _static_1(A, "trace_Trace___parseVM_tearOff$closure", "Trace___parseVM_tearOff", 27);
    _static_1(A, "trace_Trace___parseFriendly_tearOff$closure", "Trace___parseFriendly_tearOff", 27);
    _static(A, "math__max$closure", 2, null, ["call$1$2", "call$2"], ["max", function(a, b) {
      return A.max(a, b, type$.num);
    }], 63, 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Object, null);
    _inheritMany(A.Object, [A.JS_CONST, J.Interceptor, J.ArrayIterator, A.Converter, A.Iterable, A.CastIterator, A.Closure, A.MapBase, A.Error, A.ListBase, A.SentinelValue, A.ListIterator, A.MappedIterator, A.WhereIterator, A.ExpandIterator, A.TakeIterator, A.SkipIterator, A.SkipWhileIterator, A.EmptyIterator, A.WhereTypeIterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A._Record, A.ConstantMap, A._KeysOrValuesOrElementsIterator, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.JSSyntaxRegExp, A._MatchImplementation, A._AllMatchesIterator, A.StringMatch, A._StringAllMatchesIterator, A._Cell, A.Rti, A._FunctionParameters, A._Type, A._TimerImpl, A._AsyncAwaitCompleter, A._SyncStarIterator, A.AsyncError, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A.Stream, A._StreamIterator, A._Zone, A._HashMapKeyIterator, A.SetBase, A._HashSetIterator, A._LinkedHashSetCell, A._LinkedHashSetIterator, A._LinkedListIterator, A.LinkedListEntry, A._DoubleLinkedQueueEntry, A._DoubleLinkedQueueIterator, A._ListQueueIterator, A.Codec, A._Base64Decoder, A._Utf8Encoder, A._Utf8Decoder, A.DateTime, A.Duration, A._Enum, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.MapEntry, A.Null, A._StringStackTrace, A.StringBuffer, A._Uri, A.UriData, A._SimpleUri, A.Events, A._EventStreamSubscription, A.ImmutableListMixin, A.FixedSizeListIterator, A._DOMWindowCrossFrame, A.NullRejectionException, A.ByteReader, A.AttributeName, A._ParentNode, A._NonElementParentNode, A._ElementAndDocument, A.Node, A.TreeVisitor, A.HtmlParser, A.Phase, A.ParseError, A.ReparseException, A.EncodingBytes, A.ContentAttrParser, A._EncodingRangeException, A.HtmlInputStream, A.Token, A.TagAttribute, A.HtmlTokenizer, A.TreeBuilder, A.Pair, A._AppBinding_Object_SchedulerBinding, A.RenderObject, A.EventBinding, A.SchedulerBinding, A._NamedColor, A.SyncBinding, A.SyncStateMixin, A.BuildOwner, A.ComponentsBinding, A.Component, A.Element, A._InactiveElements, A.Key, A.RenderObjectElement, A.State, A.JasprConverter, A.ProviderDependencies, A.SyncScopeMixin, A.ButtonStyle, A.TailwindThemeData, A.Context, A.Style, A.ParsedPath, A.PathException, A.ReCase, A.AlwaysAliveProviderListenable, A.AlwaysAliveProviderBase, A._StateReader, A.ProviderContainer, A.ProviderOverride, A.ProviderElementBase, A.ProviderOrFamily, A.ProviderListenable, A.ProviderSubscription, A.OverrideWithValueMixin, A._ProviderElementProxy_Object_ProviderListenable, A.ProviderScheduler, A._ValueListenable, A.ResultData, A.ResultError, A.StateNotifier, A.SourceFile, A.SourceLocationMixin, A.SourceSpanMixin, A.Highlighter, A._Highlight, A._Line, A.SourceLocation, A.Chain, A.Frame, A.LazyChain, A.LazyTrace, A.Trace, A.UnparsedFrame, A.VMTrace]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JavaScriptBigInt, J.JavaScriptSymbol, J.JSNumber, J.JSString]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, J.JSArray, A.NativeByteBuffer, A.NativeTypedData, A.EventTarget, A.Blob, A.DomException, A.Event, A._FileList_JavaScriptObject_ListMixin, A._HtmlCollection_JavaScriptObject_ListMixin, A.Location, A._NodeList_JavaScriptObject_ListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction, A._JasprConfig, A._ComponentConfig]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A.Converter, [A.CastConverter, A._UnicodeSubsetEncoder, A._UnicodeSubsetDecoder, A.Base64Encoder, A.Base64Decoder, A.JsonDecoder, A.Utf8Encoder, A.Utf8Decoder, A.Decoder, A.StateDecoder, A.StateEncoder]);
    _inheritMany(A.Iterable, [A._CastIterableBase, A.EfficientLengthIterable, A.MappedIterable, A.WhereIterable, A.ExpandIterable, A.TakeIterable, A.SkipIterable, A.SkipWhileIterable, A.WhereTypeIterable, A._KeysOrValues, A._AllMatchesIterable, A._StringAllMatchesIterable, A._SyncStarIterable, A.LinkedList, A.DoubleLinkedQueue, A._FilteredElementList_IterableBase_ListMixin]);
    _inheritMany(A._CastIterableBase, [A.CastIterable, A.__CastListBase__CastIterableBase_ListMixin]);
    _inherit(A._EfficientLengthCastIterable, A.CastIterable);
    _inherit(A._CastListBase, A.__CastListBase__CastIterableBase_ListMixin);
    _inheritMany(A.Closure, [A.Closure2Args, A.CastMap_entries_closure, A.Closure0Args, A.Instantiation, A.TearOffClosure, A.JsLinkedHashMap_values_closure, A.initHooks_closure, A.initHooks_closure1, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A._RootZone_bindUnaryCallbackGuarded_closure, A.MapBase_entries_closure, A._Uri__makePath_closure, A._createTables_setChars, A._createTables_setRange, A.SelectElement_selectedOptions_closure, A._EventStreamSubscription_closure, A.promiseToFuture_closure, A.promiseToFuture_closure0, A.FilteredElementList_removeRange_closure, A.InTableTextPhase_flushCharacters_closure, A.HtmlTokenizer_consumeEntity_closure, A.BrowserAppBinding_scheduleFrame_closure, A.DomRenderObject_updateElement_closure, A.DomRenderObject_updateElement_closure1, A.EventBinding_closure, A.events_closure, A._callWithValue_closure, A._callWithValue___closure, A._callWithValue__closure0, A.ComponentsBinding_attachRootComponent__closure, A.Element__updateAncestorSiblingRecursively_closure, A._InactiveElements__unmount_closure, A.MultiChildElement_updateChildren_replaceWithNullIfForgotten, A.JasprConverter__convertElement_closure, A.AppState_build_closure0, A.BoolConvertorOptionState_build_closure, A.inputProvider_closure, A.outputProvider_closure, A.classAsListProvider_closure, A._bindingProvider_closure, A._syncStateProvider_closure, A.SyncScopeMixin_updateState_closure, A.Context_joinAll_closure, A.Context_split_closure, A._validateArgList_closure, A.WindowsStyle_absolutePathToUri_closure, A.ReCase__getSnakeCase_closure, A._StateReader__create_closure, A._StateReader__create_closure0, A.ProviderContainer__putIfAbsent_getReader_closure, A.ProviderContainer__putIfAbsent_getReader_closure0, A.ProviderContainer_getAllProviderElementsInOrder_closure, A.ProviderContainer_getAllProviderElementsInOrder_closure0, A.ProviderContainer_getAllProviderElementsInOrder_closure1, A.ProviderElementBase_requireState_closure, A.ProviderElementBase_mount_closure, A.ProviderElementBase_mount_closure0, A.ProviderElementBase__maybeRebuildDependencies_closure, A.ProviderElementBase__notifyListeners_closure, A.ProviderElementBase__notifyListeners_closure0, A.ProviderElementBase__notifyListeners_closure1, A.ProviderElementBase__notifyListeners_closure2, A.ProviderElementBase__notifyListeners_closure3, A.ProviderElementBase__notifyListeners_closure4, A.ProxyElementValueNotifier_result_closure, A._ValueListenable__notifyValue_closure, A._ValueListenable__notifyError_closure, A.throwErrorWithCombinedStackTrace_closure, A._notifier_closure, A.StateProviderElement_create_closure, A.Highlighter$__closure, A.Highlighter$___closure, A.Highlighter$__closure0, A.Highlighter__collateLines_closure, A.Highlighter__collateLines_closure1, A.Highlighter__collateLines__closure, A.Highlighter_highlight_closure, A.Chain_Chain$parse_closure, A.Chain_foldFrames_closure, A.Chain_foldFrames_closure0, A.Chain_toTrace_closure, A.Chain_toString_closure0, A.Chain_toString__closure0, A.Chain_toString_closure, A.Chain_toString__closure, A.Trace__parseVM_closure, A.Trace$parseV8_closure, A.Trace$parseJSCore_closure, A.Trace$parseFirefox_closure, A.Trace$parseFriendly_closure, A.Trace_toString_closure0, A.Trace_toString_closure, A.VMTrace_toString_closure, A.VMTrace_toString__closure]);
    _inheritMany(A.Closure2Args, [A._CastListBase_sort_closure, A.CastMap_forEach_closure, A.JsLinkedHashMap_addAll_closure, A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A._Future__chainForeignFuture_closure0, A._HashMap_addAll_closure, A.HashMap_HashMap$from_closure, A.LinkedHashMap_LinkedHashMap$from_closure, A.MapBase_mapToString_closure, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A._createTables_build, A.Phase_startTagHtml_closure, A.InBodyPhase_startTagBody_closure, A.formatStr_closure, A.DomRenderObject_clearEvents_closure, A.DomRenderObject_updateElement_closure0, A.DomElement_updateRenderObject_closure, A.DomElement_updateRenderObject_closure0, A.DomElement_updateRenderObject_closure1, A.DomElement_updateRenderObject_closure2, A.ProviderDependencies_watch_closure, A.ProviderContainer__putIfAbsent_getReader_closure1, A.ProviderBase_addListener_closure, A.Highlighter__collateLines_closure0, A.Frame_Frame$parseV8_closure_parseLocation]);
    _inherit(A.CastList, A._CastListBase);
    _inheritMany(A.MapBase, [A.CastMap, A.JsLinkedHashMap, A._HashMap, A._JsonMap, A._AttributeMap]);
    _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A._CyclicInitializationError, A.RuntimeError, A.AssertionError, A._Error, A.ArgumentError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError, A.CircularDependencyError, A.StateNotifierListenerError]);
    _inheritMany(A.ListBase, [A.UnmodifiableListBase, A._FrozenElementList, A._ChildNodeListLazy, A.ListProxy]);
    _inheritMany(A.UnmodifiableListBase, [A.CodeUnits, A.UnmodifiableListView]);
    _inheritMany(A.Closure0Args, [A.nullFuture_closure, A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A.Future_Future$microtask_closure, A.Future_Future$delayed_closure, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__chainCoreFutureAsync_closure, A._Future__asyncCompleteWithValue_closure, A._Future__asyncCompleteError_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure, A._Utf8Decoder__decoder_closure, A._Utf8Decoder__decoderNonfatal_closure, A.Phase_startTagHtml__closure, A.InBodyPhase_startTagBody__closure, A.entitiesByFirstChar_closure, A.entitiesByFirstChar__closure, A.HtmlTokenizer_emitCurrentToken_closure, A._callWithValue__closure, A.SchedulerBinding_scheduleBuild_closure, A.ComponentsBinding_attachRootComponent_closure, A.ComponentsBinding_attachRootComponent_closure_end, A.Element_rebuild_closure, A._DomElement_MultiChildElement_RenderObjectElement__firstBuild_closure, A._TextElement_NoChildElement_RenderObjectElement__firstBuild_closure, A.__RootElement_SingleChildElement_RenderObjectElement__firstBuild_closure, A.AppState_convert_closure, A.AppState_build_closure, A.AppState_build__closure, A.DartInputAreaState_build_closure, A.DartInputAreaState_build_closure0, A.DartInputAreaState_build_closure1, A.DartInputAreaState_build_closure2, A.JasprRenderAreaState_copyToClipboard_closure, A.JasprRenderAreaState_copyToClipboard_closure0, A.JasprRenderAreaState_copyToClipboard__closure, A.JasprRenderAreaState_build_closure, A._UncontrolledProviderScopeElement__jasprVsync_closure, A._UncontrolledProviderScopeElement__jasprVsync__closure, A.ProviderContainer__putIfAbsent_getReader, A.ProviderContainer__putIfAbsent_getReader_closure2, A.Highlighter_closure, A.Highlighter__writeFileStart_closure, A.Highlighter__writeMultilineHighlights_closure, A.Highlighter__writeMultilineHighlights_closure0, A.Highlighter__writeMultilineHighlights_closure1, A.Highlighter__writeMultilineHighlights_closure2, A.Highlighter__writeMultilineHighlights__closure, A.Highlighter__writeMultilineHighlights__closure0, A.Highlighter__writeHighlightedText_closure, A.Highlighter__writeIndicator_closure, A.Highlighter__writeIndicator_closure0, A.Highlighter__writeIndicator_closure1, A.Highlighter__writeSidebar_closure, A._Highlight_closure, A.Chain_Chain$forTrace_closure, A.Frame_Frame$parseVM_closure, A.Frame_Frame$parseV8_closure, A.Frame_Frame$_parseFirefoxEval_closure, A.Frame_Frame$parseFirefox_closure, A.Frame_Frame$parseFriendly_closure, A.LazyTrace_foldFrames_closure, A.Trace_Trace$current_closure, A.Trace_Trace$from_closure, A.StateNotifier_addListener_closure]);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.EmptyIterable, A.LinkedHashMapKeyIterable, A._HashMapKeyIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A.MappedListIterable, A.ReversedListIterable, A.ListQueue, A._JsonMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inherit(A.EfficientLengthTakeIterable, A.TakeIterable);
    _inherit(A.EfficientLengthSkipIterable, A.SkipIterable);
    _inherit(A._Record2, A._Record);
    _inherit(A._Record_2, A._Record2);
    _inheritMany(A.ConstantMap, [A.ConstantStringMap, A.GeneralConstantMap]);
    _inherit(A.Instantiation1, A.Instantiation);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inherit(A._AssertionError, A.AssertionError);
    _inherit(A.JsConstantLinkedHashMap, A.JsLinkedHashMap);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.NativeTypedArray);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt8List, A.NativeUint32List, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inherit(A._AsyncCompleter, A._Completer);
    _inherit(A._RootZone, A._Zone);
    _inherit(A._SetBase, A.SetBase);
    _inheritMany(A._SetBase, [A._HashSet, A._LinkedHashSet]);
    _inheritMany(A._DoubleLinkedQueueEntry, [A._DoubleLinkedQueueElement, A._DoubleLinkedQueueSentinel]);
    _inheritMany(A.Codec, [A.Encoding, A.Base64Codec, A._FusedCodec, A.JsonCodec, A.BinaryCodec, A.StateCodec]);
    _inheritMany(A.Encoding, [A.AsciiCodec, A.Utf8Codec]);
    _inherit(A.AsciiEncoder, A._UnicodeSubsetEncoder);
    _inherit(A.AsciiDecoder, A._UnicodeSubsetDecoder);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inherit(A._DataUri, A._Uri);
    _inheritMany(A.EventTarget, [A.Node0, A.Window]);
    _inheritMany(A.Node0, [A.Element1, A.CharacterData, A._Attr]);
    _inherit(A.HtmlElement, A.Element1);
    _inheritMany(A.HtmlElement, [A.AnchorElement, A.AreaElement, A.FormElement, A.InputElement, A.OptionElement, A.SelectElement, A.TextAreaElement]);
    _inherit(A.ElementEvents, A.Events);
    _inherit(A.File, A.Blob);
    _inherit(A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin, A._FileList_JavaScriptObject_ListMixin);
    _inherit(A.FileList, A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A._HtmlCollection_JavaScriptObject_ListMixin);
    _inherit(A.HtmlCollection, A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NodeList_JavaScriptObject_ListMixin);
    _inherit(A.NodeList0, A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.Text1, A.CharacterData);
    _inherit(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin);
    _inherit(A._NamedNodeMap, A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._ElementAttributeMap, A._AttributeMap);
    _inherit(A._EventStream, A.Stream);
    _inherit(A._ElementEventStreamImpl, A._EventStream);
    _inherit(A.VersionChangeEvent, A.Event);
    _inheritMany(A.Node, [A._Document_Node__ParentNode, A.DocumentType, A.Text0, A._Element_Node__ParentNode, A.Comment]);
    _inherit(A._Document_Node__ParentNode__NonElementParentNode, A._Document_Node__ParentNode);
    _inherit(A._Document_Node__ParentNode__NonElementParentNode__ElementAndDocument, A._Document_Node__ParentNode__NonElementParentNode);
    _inherit(A.Document, A._Document_Node__ParentNode__NonElementParentNode__ElementAndDocument);
    _inherit(A._Element_Node__ParentNode__ElementAndDocument, A._Element_Node__ParentNode);
    _inherit(A.Element0, A._Element_Node__ParentNode__ElementAndDocument);
    _inheritMany(A.ListProxy, [A.NodeList, A.ActiveFormattingElements]);
    _inherit(A.FilteredElementList, A._FilteredElementList_IterableBase_ListMixin);
    _inherit(A._ConcatTextVisitor, A.TreeVisitor);
    _inheritMany(A.Phase, [A.InitialPhase, A.BeforeHtmlPhase, A.BeforeHeadPhase, A.InHeadPhase, A.AfterHeadPhase, A.InBodyPhase, A.TextPhase, A.InTablePhase, A.InTableTextPhase, A.InCaptionPhase, A.InColumnGroupPhase, A.InTableBodyPhase, A.InRowPhase, A.InCellPhase, A.InSelectPhase, A.InSelectInTablePhase, A.InForeignContentPhase, A.AfterBodyPhase, A.InFramesetPhase, A.AfterFramesetPhase, A.AfterAfterBodyPhase, A.AfterAfterFramesetPhase]);
    _inheritMany(A.Token, [A.TagToken, A.StringToken, A.DoctypeToken]);
    _inheritMany(A.TagToken, [A.StartTagToken, A.EndTagToken]);
    _inheritMany(A.StringToken, [A.ParseErrorToken, A.CharactersToken, A.SpaceCharactersToken, A.CommentToken]);
    _inherit(A._AppBinding_Object_SchedulerBinding_SyncBinding, A._AppBinding_Object_SchedulerBinding);
    _inherit(A.AppBinding, A._AppBinding_Object_SchedulerBinding_SyncBinding);
    _inherit(A._BrowserAppBinding_AppBinding_ComponentsBinding, A.AppBinding);
    _inherit(A.BrowserAppBinding, A._BrowserAppBinding_AppBinding_ComponentsBinding);
    _inherit(A.DomRenderObject, A.RenderObject);
    _inherit(A.RootDomRenderObject, A.DomRenderObject);
    _inheritMany(A._Enum, [A.ButtonType, A.InputType, A.SchedulerPhase, A._ElementLifecycle, A._StateLifecycle, A.ButtonSize]);
    _inheritMany(A.Component, [A._Root, A.DomComponent, A.Text, A.InheritedComponent, A.StatefulComponent]);
    _inheritMany(A.Element, [A.SingleChildElement, A.MultiChildElement, A.NoChildElement]);
    _inheritMany(A.SingleChildElement, [A.__RootElement_SingleChildElement_RenderObjectElement, A.InheritedElement]);
    _inherit(A._RootElement, A.__RootElement_SingleChildElement_RenderObjectElement);
    _inheritMany(A.MultiChildElement, [A._DomElement_MultiChildElement_RenderObjectElement, A.StatefulElement]);
    _inherit(A.DomElement, A._DomElement_MultiChildElement_RenderObjectElement);
    _inherit(A._TextElement_NoChildElement_RenderObjectElement, A.NoChildElement);
    _inherit(A.TextElement, A._TextElement_NoChildElement_RenderObjectElement);
    _inherit(A.LocalKey, A.Key);
    _inherit(A.UniqueKey, A.LocalKey);
    _inheritMany(A.StatefulComponent, [A.App, A.DartInputArea, A.ConverterOptions, A.BoolConvertorOption, A.JasprRenderArea, A.ProviderScope, A.PrimaryButton, A.SecondaryButton]);
    _inheritMany(A.State, [A.AppState, A.DartInputAreaState, A.ConverterOptionsState, A.BoolConvertorOptionState, A.JasprRenderAreaState, A._ProviderScopeState_State_SyncStateMixin, A.PrimaryButtonState, A.SecondaryButtonState]);
    _inherit(A._ProviderScopeState_State_SyncStateMixin_SyncScopeMixin, A._ProviderScopeState_State_SyncStateMixin);
    _inherit(A.ProviderScopeState, A._ProviderScopeState_State_SyncStateMixin_SyncScopeMixin);
    _inherit(A.UncontrolledProviderScope, A.InheritedComponent);
    _inherit(A._UncontrolledProviderScopeElement, A.InheritedElement);
    _inherit(A.InternalStyle, A.Style);
    _inheritMany(A.InternalStyle, [A.PosixStyle, A.UrlStyle, A.WindowsStyle]);
    _inherit(A._ProviderBase_ProviderOrFamily_ProviderListenable, A.ProviderOrFamily);
    _inherit(A.ProviderBase, A._ProviderBase_ProviderOrFamily_ProviderListenable);
    _inherit(A._ProviderStateSubscription, A.ProviderSubscription);
    _inherit(A._ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable, A._ProviderElementProxy_Object_ProviderListenable);
    _inherit(A.ProviderElementProxy, A._ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable);
    _inheritMany(A.ProviderBase, [A._ValueProvider_ProviderBase_AlwaysAliveProviderBase, A._InternalProvider_ProviderBase_OverrideWithValueMixin, A._StateProviderBase]);
    _inherit(A.ValueProvider, A._ValueProvider_ProviderBase_AlwaysAliveProviderBase);
    _inheritMany(A.ProviderElementBase, [A.ValueProviderElement, A.ProviderElement, A.StateProviderElement]);
    _inherit(A.ProxyElementValueNotifier, A._ValueListenable);
    _inherit(A.InternalProvider, A._InternalProvider_ProviderBase_OverrideWithValueMixin);
    _inherit(A._Provider_InternalProvider_AlwaysAliveProviderBase, A.InternalProvider);
    _inherit(A.Provider, A._Provider_InternalProvider_AlwaysAliveProviderBase);
    _inherit(A.StateController, A.StateNotifier);
    _inherit(A._StateProvider__StateProviderBase_AlwaysAliveProviderBase, A._StateProviderBase);
    _inherit(A.StateProvider, A._StateProvider__StateProviderBase_AlwaysAliveProviderBase);
    _inherit(A.FileLocation, A.SourceLocationMixin);
    _inheritMany(A.SourceSpanMixin, [A._FileSpan, A.SourceSpanBase]);
    _inherit(A.SourceSpanWithContext, A.SourceSpanBase);
    _inherit(A._ListenerEntry, A.LinkedListEntry);
    _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
    _mixin(A.__CastListBase__CastIterableBase_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._FileList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._Document_Node__ParentNode, A._ParentNode);
    _mixin(A._Document_Node__ParentNode__NonElementParentNode, A._NonElementParentNode);
    _mixin(A._Document_Node__ParentNode__NonElementParentNode__ElementAndDocument, A._ElementAndDocument);
    _mixin(A._Element_Node__ParentNode, A._ParentNode);
    _mixin(A._Element_Node__ParentNode__ElementAndDocument, A._ElementAndDocument);
    _mixin(A._FilteredElementList_IterableBase_ListMixin, A.ListBase);
    _mixin(A._BrowserAppBinding_AppBinding_ComponentsBinding, A.ComponentsBinding);
    _mixin(A._AppBinding_Object_SchedulerBinding, A.SchedulerBinding);
    _mixin(A._AppBinding_Object_SchedulerBinding_SyncBinding, A.SyncBinding);
    _mixinHard(A._DomElement_MultiChildElement_RenderObjectElement, A.RenderObjectElement);
    _mixinHard(A._TextElement_NoChildElement_RenderObjectElement, A.RenderObjectElement);
    _mixinHard(A.__RootElement_SingleChildElement_RenderObjectElement, A.RenderObjectElement);
    _mixinHard(A._ProviderScopeState_State_SyncStateMixin, A.SyncStateMixin);
    _mixin(A._ProviderScopeState_State_SyncStateMixin_SyncScopeMixin, A.SyncScopeMixin);
    _mixin(A._ProviderBase_ProviderOrFamily_ProviderListenable, A.ProviderListenable);
    _mixin(A._ProviderElementProxy_Object_ProviderListenable, A.ProviderListenable);
    _mixin(A._ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable, A.AlwaysAliveProviderListenable);
    _mixin(A._ValueProvider_ProviderBase_AlwaysAliveProviderBase, A.AlwaysAliveProviderBase);
    _mixin(A._InternalProvider_ProviderBase_OverrideWithValueMixin, A.OverrideWithValueMixin);
    _mixin(A._Provider_InternalProvider_AlwaysAliveProviderBase, A.AlwaysAliveProviderBase);
    _mixin(A._StateProvider__StateProviderBase_AlwaysAliveProviderBase, A.AlwaysAliveProviderBase);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List", Object: "Object", Map: "Map"},
    mangledNames: {},
    types: ["bool()", "~()", "Null()", "bool(String)", "Trace()", "Frame()", "Frame(String)", "~(@)", "String(String)", "~(Event)", "~(~())", "Null(@)", "~(Element)", "String()", "~(ProviderElementBase<@>)", "bool(_Highlight)", "String(Frame)", "bool(String?)", "~(Object?,Object?)", "@()", "~(Uint8List,String,int)", "~(Object,String)", "~(String)", "Map<String,String>(Map<String,String>,Map<String,String>)", "String(StateProviderRef<String>)", "_StateReader()", "~(Object?)", "Trace(String)", "int()", "~(Object,StackTrace)", "int(Frame)", "~(@,@)", "Future<Null>()", "int(@,@)", "String(String,String)", "~(num)", "~(String,EventBinding)", "String(MapEntry<String,String>)", "~(String,~(Event))", "Uint8List(@,@)", "Object?()", "bool(InputType)", "String(OptionElement)", "Future<Null>?()", "~(String,int?)", "int(int,int)", "Map<String,~(Event)>(Map<String,~(Event)>,Map<String,~(Event)>)", "List<String>()", "Element?(Element)", "bool(OptionElement)", "bool(StateProviderRef<bool>)", "~(int,@)", "0&(ProviderRef<AppBinding>)", "Map<String,@>(StateProviderRef<Map<String,@>>)", "Map<String,@>(Map<String,@>)", "String(String?)", "~(ResultData<Object?>)", "~(ResultError<Object?>)", "@(@)", "ProviderContainer?(ProviderOrFamily)", "bool(ProviderContainer?)", "ProviderContainer(ProviderContainer,ProviderContainer?)", "Null(Object,StackTrace)", "0^(0^,0^)<num>", "~(Element0)", "bool(Frame)", "String?()", "int(_Line)", "Null(~())", "Object(_Line)", "Object(_Highlight)", "int(_Highlight,_Highlight)", "List<_Line>(MapEntry<Object,List<_Highlight>>)", "@(@,String)", "SourceSpanWithContext()", "String(StringToken)", "Chain()", "Trace(Trace)", "bool(Trace)", "List<Frame>(Trace)", "int(Trace)", "Map<String,List<String>>()", "String(Trace)", "bool(Pattern[int])", "@(String)", "Frame(String,String)", "String(Match)", "Null(@,StackTrace)", "~(String,Object?)", "int(int)", "Map<String,~(Event)>({onChange:~(1^)?,onClick:~()?,onInput:~(0^)?})<Object?,Object?>", "int(Element,Element)", "0&(Object,StackTrace)", "~(String,int)", "_Future<@>(@)", "~(ProxyElementValueNotifier<@>)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti"),
    rttc: {
      "2;": (t1, t2) => o => o instanceof A._Record_2 && t1._is(o._0) && t2._is(o._1)
    }
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","_JasprConfig":"LegacyJavaScriptObject","_ComponentConfig":"LegacyJavaScriptObject","AbortPaymentEvent":"Event","ExtendableEvent":"Event","MathMLElement":"Element1","_Clipboard":"EventTarget","AudioElement":"HtmlElement","MediaElement":"HtmlElement","HtmlDocument":"Node0","Document0":"Node0","Comment0":"CharacterData","HtmlFormControlsCollection":"HtmlCollection","CDataSection":"Text1","JSBool":{"bool":[],"TrustedGetRuntimeType":[]},"JSNull":{"Null":[],"TrustedGetRuntimeType":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"num":[],"Comparable":["num"]},"JSInt":{"int":[],"num":[],"Comparable":["num"],"TrustedGetRuntimeType":[]},"JSNumNotInt":{"num":[],"Comparable":["num"],"TrustedGetRuntimeType":[]},"JSString":{"String":[],"Comparable":["String"],"Pattern":[],"TrustedGetRuntimeType":[]},"CastConverter":{"Converter":["3","4"],"Converter.S":"3","Converter.T":"4"},"_CastIterableBase":{"Iterable":["2"]},"CastIterator":{"Iterator":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListBase.E":"2","Iterable.E":"2"},"CastMap":{"MapBase":["3","4"],"Map":["3","4"],"MapBase.K":"3","MapBase.V":"4"},"LateError":{"Error":[]},"CodeUnits":{"ListBase":["int"],"UnmodifiableListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int","UnmodifiableListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"ListIterator":{"Iterator":["1"]},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedIterator":{"Iterator":["2"]},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListIterable.E":"2","Iterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereIterator":{"Iterator":["1"]},"ExpandIterable":{"Iterable":["2"],"Iterable.E":"2"},"ExpandIterator":{"Iterator":["2"]},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"TakeIterator":{"Iterator":["1"]},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterator":{"Iterator":["1"]},"SkipWhileIterable":{"Iterable":["1"],"Iterable.E":"1"},"SkipWhileIterator":{"Iterator":["1"]},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"EmptyIterator":{"Iterator":["1"]},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterator":{"Iterator":["1"]},"UnmodifiableListBase":{"ListBase":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"_Record_2":{"_Record2":[],"_Record":[]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_KeysOrValues":{"Iterable":["1"],"Iterable.E":"1"},"_KeysOrValuesOrElementsIterator":{"Iterator":["1"]},"GeneralConstantMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"Instantiation":{"Closure":[],"Function":[]},"Instantiation1":{"Closure":[],"Function":[]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Closure":[],"Function":[]},"Closure2Args":{"Closure":[],"Function":[]},"TearOffClosure":{"Closure":[],"Function":[]},"StaticClosure":{"Closure":[],"Function":[]},"BoundClosure":{"Closure":[],"Function":[]},"_CyclicInitializationError":{"Error":[]},"RuntimeError":{"Error":[]},"_AssertionError":{"Error":[]},"JsLinkedHashMap":{"MapBase":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"JsConstantLinkedHashMap":{"JsLinkedHashMap":["1","2"],"MapBase":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_Record2":{"_Record":[]},"JSSyntaxRegExp":{"RegExp":[],"Pattern":[]},"_MatchImplementation":{"RegExpMatch":[],"Match":[]},"_AllMatchesIterable":{"Iterable":["RegExpMatch"],"Iterable.E":"RegExpMatch"},"_AllMatchesIterator":{"Iterator":["RegExpMatch"]},"StringMatch":{"Match":[]},"_StringAllMatchesIterable":{"Iterable":["Match"],"Iterable.E":"Match"},"_StringAllMatchesIterator":{"Iterator":["Match"]},"NativeByteBuffer":{"TrustedGetRuntimeType":[]},"NativeByteData":{"TrustedGetRuntimeType":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"]},"NativeTypedArrayOfInt":{"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"]},"NativeInt8List":{"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","FixedLengthListMixin.E":"int"},"NativeUint32List":{"ListBase":["int"],"Uint32List":[],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8List":{"ListBase":["int"],"Uint8List":[],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","FixedLengthListMixin.E":"int"},"_Type":{"Type":[]},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_Future":{"Future":["1"]},"_AsyncAwaitCompleter":{"Completer":["1"]},"_SyncStarIterator":{"Iterator":["1"]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"AsyncError":{"Error":[]},"_Completer":{"Completer":["1"]},"_AsyncCompleter":{"_Completer":["1"],"Completer":["1"]},"_Zone":{"Zone":[]},"_RootZone":{"_Zone":[],"Zone":[]},"_HashMap":{"MapBase":["1","2"],"HashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_HashMapKeyIterator":{"Iterator":["1"]},"_HashSet":{"_SetBase":["1"],"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_HashSetIterator":{"Iterator":["1"]},"_LinkedHashSet":{"_SetBase":["1"],"SetBase":["1"],"LinkedHashSet":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_LinkedHashSetIterator":{"Iterator":["1"]},"UnmodifiableListView":{"ListBase":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListBase.E":"1","UnmodifiableListMixin.E":"1"},"LinkedList":{"Iterable":["1"],"Iterable.E":"1"},"_LinkedListIterator":{"Iterator":["1"]},"ListBase":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"Map":["1","2"]},"_DoubleLinkedQueueElement":{"_DoubleLinkedQueueEntry":["1"]},"_DoubleLinkedQueueSentinel":{"_DoubleLinkedQueueEntry":["1"]},"DoubleLinkedQueue":{"Queue":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_DoubleLinkedQueueIterator":{"Iterator":["1"]},"ListQueue":{"Queue":["1"],"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"_ListQueueIterator":{"Iterator":["1"]},"SetBase":{"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SetBase":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_JsonMap":{"MapBase":["String","@"],"Map":["String","@"],"MapBase.K":"String","MapBase.V":"@"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListIterable.E":"String","Iterable.E":"String"},"AsciiCodec":{"Codec":["String","List<int>"],"Codec.T":"List<int>"},"_UnicodeSubsetEncoder":{"Converter":["String","List<int>"]},"AsciiEncoder":{"Converter":["String","List<int>"],"Converter.S":"String","Converter.T":"List<int>"},"_UnicodeSubsetDecoder":{"Converter":["List<int>","String"]},"AsciiDecoder":{"Converter":["List<int>","String"],"Converter.S":"List<int>","Converter.T":"String"},"Base64Codec":{"Codec":["List<int>","String"],"Codec.T":"String"},"Base64Encoder":{"Converter":["List<int>","String"],"Converter.S":"List<int>","Converter.T":"String"},"Base64Decoder":{"Converter":["String","List<int>"],"Converter.S":"String","Converter.T":"List<int>"},"_FusedCodec":{"Codec":["1","3"],"Codec.T":"3"},"Encoding":{"Codec":["String","List<int>"]},"JsonCodec":{"Codec":["Object?","String"],"Codec.T":"String"},"JsonDecoder":{"Converter":["String","Object?"],"Converter.S":"String","Converter.T":"Object?"},"Utf8Codec":{"Codec":["String","List<int>"],"Codec.T":"List<int>"},"Utf8Encoder":{"Converter":["String","List<int>"],"Converter.S":"String","Converter.T":"List<int>"},"Utf8Decoder":{"Converter":["List<int>","String"],"Converter.S":"List<int>","Converter.T":"String"},"DateTime":{"Comparable":["DateTime"]},"Duration":{"Comparable":["Duration"]},"int":{"num":[],"Comparable":["num"]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"num":{"Comparable":["num"]},"RegExpMatch":{"Match":[]},"String":{"Comparable":["String"],"Pattern":[]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"_StringStackTrace":{"StackTrace":[]},"StringBuffer":{"StringSink":[]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"Node0":{"EventTarget":[]},"OptionElement":{"Element1":[],"Node0":[],"EventTarget":[]},"HtmlElement":{"Element1":[],"Node0":[],"EventTarget":[]},"AnchorElement":{"Element1":[],"Node0":[],"EventTarget":[]},"AreaElement":{"Element1":[],"Node0":[],"EventTarget":[]},"CharacterData":{"Node0":[],"EventTarget":[]},"_FrozenElementList":{"ListBase":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListBase.E":"1"},"Element1":{"Node0":[],"EventTarget":[]},"FileList":{"ListBase":["File"],"ImmutableListMixin":["File"],"List":["File"],"JavaScriptIndexingBehavior":["File"],"EfficientLengthIterable":["File"],"Iterable":["File"],"ImmutableListMixin.E":"File","ListBase.E":"File"},"FormElement":{"Element1":[],"Node0":[],"EventTarget":[]},"HtmlCollection":{"ListBase":["Node0"],"ImmutableListMixin":["Node0"],"List":["Node0"],"JavaScriptIndexingBehavior":["Node0"],"EfficientLengthIterable":["Node0"],"Iterable":["Node0"],"ImmutableListMixin.E":"Node0","ListBase.E":"Node0"},"InputElement":{"Element1":[],"Node0":[],"EventTarget":[]},"_ChildNodeListLazy":{"ListBase":["Node0"],"List":["Node0"],"EfficientLengthIterable":["Node0"],"Iterable":["Node0"],"ListBase.E":"Node0"},"NodeList0":{"ListBase":["Node0"],"ImmutableListMixin":["Node0"],"List":["Node0"],"JavaScriptIndexingBehavior":["Node0"],"EfficientLengthIterable":["Node0"],"Iterable":["Node0"],"ImmutableListMixin.E":"Node0","ListBase.E":"Node0"},"SelectElement":{"Element1":[],"Node0":[],"EventTarget":[]},"Text1":{"Node0":[],"EventTarget":[]},"TextAreaElement":{"Element1":[],"Node0":[],"EventTarget":[]},"Window":{"WindowBase":[],"EventTarget":[]},"_Attr":{"Node0":[],"EventTarget":[]},"_NamedNodeMap":{"ListBase":["Node0"],"ImmutableListMixin":["Node0"],"List":["Node0"],"JavaScriptIndexingBehavior":["Node0"],"EfficientLengthIterable":["Node0"],"Iterable":["Node0"],"ImmutableListMixin.E":"Node0","ListBase.E":"Node0"},"_AttributeMap":{"MapBase":["String","String"],"Map":["String","String"]},"_ElementAttributeMap":{"MapBase":["String","String"],"Map":["String","String"],"MapBase.K":"String","MapBase.V":"String"},"_EventStream":{"Stream":["1"]},"_ElementEventStreamImpl":{"_EventStream":["1"],"Stream":["1"]},"_EventStreamSubscription":{"StreamSubscription":["1"]},"FixedSizeListIterator":{"Iterator":["1"]},"_DOMWindowCrossFrame":{"WindowBase":[],"EventTarget":[]},"VersionChangeEvent":{"Event":[]},"NullRejectionException":{"Exception":[]},"BinaryCodec":{"Codec":["@","Uint8List"],"Codec.T":"Uint8List"},"Decoder":{"Converter":["Uint8List","@"],"Converter.S":"Uint8List","Converter.T":"@"},"AttributeName":{"Comparable":["Object"]},"Document":{"Node":[]},"Element0":{"Node":[]},"DocumentType":{"Node":[]},"Text0":{"Node":[]},"Comment":{"Node":[]},"NodeList":{"ListProxy":["Node"],"ListBase":["Node"],"List":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListBase.E":"Node","ListProxy.E":"Node"},"FilteredElementList":{"ListBase":["Element0"],"List":["Element0"],"EfficientLengthIterable":["Element0"],"Iterable":["Element0"],"ListBase.E":"Element0","Iterable.E":"Element0"},"ParseError":{"Exception":[]},"InitialPhase":{"Phase":[]},"BeforeHtmlPhase":{"Phase":[]},"BeforeHeadPhase":{"Phase":[]},"InHeadPhase":{"Phase":[]},"AfterHeadPhase":{"Phase":[]},"InBodyPhase":{"Phase":[]},"TextPhase":{"Phase":[]},"InTablePhase":{"Phase":[]},"InTableTextPhase":{"Phase":[]},"InCaptionPhase":{"Phase":[]},"InColumnGroupPhase":{"Phase":[]},"InTableBodyPhase":{"Phase":[]},"InRowPhase":{"Phase":[]},"InCellPhase":{"Phase":[]},"InSelectPhase":{"Phase":[]},"InSelectInTablePhase":{"Phase":[]},"InForeignContentPhase":{"Phase":[]},"AfterBodyPhase":{"Phase":[]},"InFramesetPhase":{"Phase":[]},"AfterFramesetPhase":{"Phase":[]},"AfterAfterBodyPhase":{"Phase":[]},"AfterAfterFramesetPhase":{"Phase":[]},"_EncodingRangeException":{"Exception":[]},"ListProxy":{"ListBase":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"StringToken":{"Token":[]},"TagToken":{"Token":[]},"StartTagToken":{"TagToken":[],"Token":[]},"EndTagToken":{"TagToken":[],"Token":[]},"ParseErrorToken":{"StringToken":[],"Token":[]},"CharactersToken":{"StringToken":[],"Token":[]},"SpaceCharactersToken":{"StringToken":[],"Token":[]},"CommentToken":{"StringToken":[],"Token":[]},"DoctypeToken":{"Token":[]},"HtmlTokenizer":{"Iterator":["Token"]},"ActiveFormattingElements":{"ListProxy":["Element0?"],"ListBase":["Element0?"],"List":["Element0?"],"EfficientLengthIterable":["Element0?"],"Iterable":["Element0?"],"ListBase.E":"Element0?","ListProxy.E":"Element0?"},"BrowserAppBinding":{"AppBinding":[]},"DomRenderObject":{"RenderObject":[]},"RootDomRenderObject":{"DomRenderObject":[],"RenderObject":[]},"StateCodec":{"Codec":["@","String"],"Codec.T":"String"},"StateDecoder":{"Converter":["String","@"],"Converter.S":"String","Converter.T":"@"},"StateEncoder":{"Converter":["@","String"],"Converter.S":"@","Converter.T":"String"},"_WrappingDomComponent":{"InheritedComponent":[],"DomComponent":[],"Component":[]},"Element":{"BuildContext":[]},"InheritedComponent":{"Component":[]},"InheritedElement":{"Element":[],"BuildContext":[]},"ObserverElement":{"Element":[],"BuildContext":[]},"StatefulComponent":{"Component":[]},"_Root":{"Component":[]},"_RootElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"DomComponent":{"Component":[]},"DomElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"Text":{"Component":[]},"NoChildElement":{"Element":[],"BuildContext":[]},"TextElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"LocalKey":{"Key":[]},"UniqueKey":{"Key":[]},"MultiChildElement":{"Element":[],"BuildContext":[]},"SingleChildElement":{"Element":[],"BuildContext":[]},"StatefulElement":{"Element":[],"BuildContext":[]},"App":{"StatefulComponent":[],"Component":[]},"AppState":{"State":["App"],"State.T":"App"},"DartInputArea":{"StatefulComponent":[],"Component":[]},"DartInputAreaState":{"State":["DartInputArea"],"State.T":"DartInputArea"},"ConverterOptions":{"StatefulComponent":[],"Component":[]},"BoolConvertorOption":{"StatefulComponent":[],"Component":[]},"ConverterOptionsState":{"State":["ConverterOptions"],"State.T":"ConverterOptions"},"BoolConvertorOptionState":{"State":["BoolConvertorOption"],"State.T":"BoolConvertorOption"},"JasprRenderArea":{"StatefulComponent":[],"Component":[]},"JasprRenderAreaState":{"State":["JasprRenderArea"],"State.T":"JasprRenderArea"},"ProviderScope":{"StatefulComponent":[],"Component":[]},"UncontrolledProviderScope":{"InheritedComponent":[],"Component":[]},"ProviderScopeState":{"State":["ProviderScope"],"SyncState":["Map<String,@>"],"State.T":"ProviderScope"},"_UncontrolledProviderScopeElement":{"InheritedElement":[],"Element":[],"BuildContext":[]},"PrimaryButton":{"StatefulComponent":[],"Component":[]},"PrimaryButtonState":{"State":["PrimaryButton"],"State.T":"PrimaryButton"},"SecondaryButton":{"StatefulComponent":[],"Component":[]},"SecondaryButtonState":{"State":["SecondaryButton"],"State.T":"SecondaryButton"},"TailwindTheme":{"InheritedComponent":[],"Component":[]},"PathException":{"Exception":[]},"PosixStyle":{"InternalStyle":[]},"UrlStyle":{"InternalStyle":[]},"WindowsStyle":{"InternalStyle":[]},"AutoDisposeProviderElementMixin":{"ProviderElementBase":["1"],"Node1":[]},"ProviderContainer":{"Node1":[]},"ProviderElementBase":{"Node1":[]},"Family":{"ProviderOrFamily":[],"Override":[]},"ProviderBase":{"ProviderOrFamily":[],"ProviderListenable":["1"],"ProviderOverride":[],"Override":[]},"ProviderOverride":{"Override":[]},"CircularDependencyError":{"Error":[]},"_ProviderStateSubscription":{"ProviderSubscription":["1"]},"ProviderElementProxy":{"AlwaysAliveRefreshable":["2"],"ProviderListenable":["2"]},"ValueProvider":{"ProviderBase":["1"],"AlwaysAliveRefreshable":["1"],"ProviderOrFamily":[],"ProviderListenable":["1"],"ProviderOverride":[],"Override":[]},"ValueProviderElement":{"ProviderElementBase":["1"],"Node1":[]},"ProxyElementValueNotifier":{"_ValueListenable":["1"]},"InternalProvider":{"OverrideWithValueMixin":["1"],"ProviderBase":["1"],"ProviderOrFamily":[],"ProviderListenable":["1"],"ProviderOverride":[],"Override":[]},"Provider":{"InternalProvider":["1"],"OverrideWithValueMixin":["1"],"ProviderBase":["1"],"AlwaysAliveRefreshable":["1"],"ProviderOrFamily":[],"ProviderListenable":["1"],"ProviderOverride":[],"Override":[]},"ProviderElement":{"ProviderElementBase":["1"],"ProviderRef":["1"],"Node1":[]},"ResultData":{"Result":["1"]},"ResultError":{"Result":["1"]},"StateController":{"StateNotifier":["1"]},"_StateProviderBase":{"ProviderBase":["1"],"ProviderOrFamily":[],"ProviderListenable":["1"],"ProviderOverride":[],"Override":[]},"StateProvider":{"_StateProviderBase":["1"],"ProviderBase":["1"],"AlwaysAliveRefreshable":["1"],"ProviderOrFamily":[],"ProviderListenable":["1"],"ProviderOverride":[],"Override":[]},"StateProviderElement":{"ProviderElementBase":["1"],"StateProviderRef":["1"],"Node1":[]},"FileSpan":{"SourceSpanWithContext":[],"SourceSpan":[],"Comparable":["SourceSpan"]},"FileLocation":{"SourceLocation":[],"Comparable":["SourceLocation"]},"_FileSpan":{"FileSpan":[],"SourceSpanWithContext":[],"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceLocation":{"Comparable":["SourceLocation"]},"SourceLocationMixin":{"SourceLocation":[],"Comparable":["SourceLocation"]},"SourceSpan":{"Comparable":["SourceSpan"]},"SourceSpanBase":{"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceSpanMixin":{"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceSpanWithContext":{"SourceSpan":[],"Comparable":["SourceSpan"]},"Chain":{"StackTrace":[]},"LazyChain":{"Chain":[],"StackTrace":[]},"LazyTrace":{"Trace":[],"StackTrace":[]},"Trace":{"StackTrace":[]},"UnparsedFrame":{"Frame":[]},"VMTrace":{"StackTrace":[]},"_ListenerEntry":{"LinkedListEntry":["_ListenerEntry<1>"],"LinkedListEntry.E":"_ListenerEntry<1>"},"StateNotifierListenerError":{"Error":[]},"Int8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"NativeTypedArray":1,"SyncStateMixin":2,"AutoDisposeProviderElementMixin":1,"Family":1,"ProviderSubscription":1,"AlwaysAliveProviderListenable":1,"AlwaysAliveProviderBase":1,"_ProviderBase_ProviderOrFamily_ProviderListenable":1,"_ProviderElementProxy_Object_ProviderListenable":2,"_ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable":2,"_ValueProvider_ProviderBase_AlwaysAliveProviderBase":1,"_InternalProvider_ProviderBase_OverrideWithValueMixin":1,"_Provider_InternalProvider_AlwaysAliveProviderBase":1,"_StateProvider__StateProviderBase_AlwaysAliveProviderBase":1}'));
  var string$ = {
    x20___fo: "    focus-visible:outline \n    focus-visible:outline-2 \n    focus-visible:outline-offset-2 \n    focus-visible:outline-slate-900 \n    dark:focus-visible:outline-slate-200\n    ",
    x20must_: " must not be greater than the number of characters in the file, ",
    x3d_____: "===== asynchronous gap ===========================\n",
    Cannotff: "Cannot extract a file path from a URI with a fragment component",
    Cannotfq: "Cannot extract a file path from a URI with a query component",
    Cannotn: "Cannot extract a non-Windows file path from a file URI with an authority",
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    expecta: "expected-attribute-value-but-got-right-bracket",
    expectc: "expected-closing-tag-but-got-right-bracket",
    expectd: "expected-doctype-name-but-got-right-bracket",
    expects: "expected-space-or-right-bracket-in-doctype",
    unexpeb: "unexpected-bang-after-double-dash-in-comment",
    unexpecaa: "unexpected-character-after-attribute-value",
    unexpecas: "unexpected-character-after-soldius-in-tag",
    unexpeci: "unexpected-character-in-unquoted-attribute-value",
    unexped: "unexpected-dash-after-double-dash-in-comment",
    unexpef: "unexpected-frameset-in-frameset-innerhtml",
    unexpeh: "unexpected-html-element-in-foreign-content",
    unexpes: "unexpected-start-tag-implies-table-voodoo",
    unexpete: "unexpected-table-element-end-tag-in-select-in-table",
    unexpets: "unexpected-table-element-start-tag-in-select-in-table"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      AsyncError: findType("AsyncError"),
      BinaryCodec: findType("BinaryCodec"),
      Chain: findType("Chain"),
      CharactersToken: findType("CharactersToken"),
      CodeUnits: findType("CodeUnits"),
      Comment: findType("Comment"),
      CommentToken: findType("CommentToken"),
      Comparable_dynamic: findType("Comparable<@>"),
      ConstantStringMap_String_String: findType("ConstantStringMap<String,String>"),
      DateTime: findType("DateTime"),
      DoctypeToken: findType("DoctypeToken"),
      Document: findType("Document"),
      DocumentFragment: findType("DocumentFragment0"),
      DocumentType: findType("DocumentType"),
      DomComponent: findType("DomComponent"),
      DoubleLinkedQueue_ProviderElementBase_dynamic: findType("DoubleLinkedQueue<ProviderElementBase<@>>"),
      Duration: findType("Duration"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element1"),
      Element_2: findType("Element0"),
      Element_3: findType("Element"),
      EndTagToken: findType("EndTagToken"),
      Error: findType("Error"),
      Event: findType("Event"),
      EventBinding: findType("EventBinding"),
      Exception: findType("Exception"),
      Family_nullable_Object: findType("Family<Object?>"),
      File: findType("File"),
      Frame: findType("Frame"),
      Frame_Function_String: findType("Frame(String)"),
      Function: findType("Function"),
      Future_dynamic: findType("Future<@>"),
      GeneralConstantMap_ButtonSize_String: findType("GeneralConstantMap<ButtonSize,String>"),
      HashMap_of_ProviderElementBase_nullable_Object_and_Object: findType("HashMap<ProviderElementBase<Object?>,Object>"),
      InTableTextPhase: findType("InTableTextPhase"),
      InheritedComponent: findType("InheritedComponent"),
      InheritedElement: findType("InheritedElement"),
      InputElement: findType("InputElement"),
      InputType: findType("InputType"),
      Iterable_Node: findType("Iterable<Node>"),
      Iterable_String: findType("Iterable<String>"),
      Iterable_dynamic: findType("Iterable<@>"),
      JSArray_AutoDisposeProviderElementMixin_nullable_Object: findType("JSArray<AutoDisposeProviderElementMixin<Object?>>"),
      JSArray_Component: findType("JSArray<Component>"),
      JSArray_Element: findType("JSArray<Element>"),
      JSArray_Element_2: findType("JSArray<Element0>"),
      JSArray_Frame: findType("JSArray<Frame>"),
      JSArray_Future_dynamic: findType("JSArray<Future<@>>"),
      JSArray_Node: findType("JSArray<Node>"),
      JSArray_Node_2: findType("JSArray<Node0>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_OptionElement: findType("JSArray<OptionElement>"),
      JSArray_Override: findType("JSArray<Override>"),
      JSArray_Pair_String_String: findType("JSArray<Pair<String,String>>"),
      JSArray_ParseError: findType("JSArray<ParseError>"),
      JSArray_Phase: findType("JSArray<Phase>"),
      JSArray_ProviderContainer: findType("JSArray<ProviderContainer>"),
      JSArray_ProviderElementBase_dynamic: findType("JSArray<ProviderElementBase<@>>"),
      JSArray_ProviderElementBase_nullable_Object: findType("JSArray<ProviderElementBase<Object?>>"),
      JSArray_ProviderObserver: findType("JSArray<ProviderObserver>"),
      JSArray_ProviderSubscription_dynamic: findType("JSArray<ProviderSubscription<@>>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_StringToken: findType("JSArray<StringToken>"),
      JSArray_TagAttribute: findType("JSArray<TagAttribute>"),
      JSArray_Trace: findType("JSArray<Trace>"),
      JSArray__Highlight: findType("JSArray<_Highlight>"),
      JSArray__Line: findType("JSArray<_Line>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_Element: findType("JSArray<Element0?>"),
      JSArray_nullable_Node: findType("JSArray<Node?>"),
      JSArray_nullable_StackTrace: findType("JSArray<StackTrace?>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSNull: findType("JSNull"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JsLinkedHashMap_dynamic_dynamic: findType("JsLinkedHashMap<@,@>"),
      Key: findType("Key"),
      LinkedHashMap_Object_String: findType("LinkedHashMap<Object,String>"),
      List_Component: findType("List<Component>"),
      List_Element: findType("List<Element0>"),
      List_Element_2: findType("List<Element>"),
      List_Node: findType("List<Node0>"),
      List_Override: findType("List<Override>"),
      List_String: findType("List<String>"),
      List_StringToken: findType("List<StringToken>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      List_nullable__Highlight: findType("List<_Highlight?>"),
      MapEntry_String_String: findType("MapEntry<String,String>"),
      MapEntry_of_Object_and_List__Highlight: findType("MapEntry<Object,List<_Highlight>>"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_of_ProviderListenable_dynamic_and_ProviderSubscription_dynamic: findType("Map<ProviderListenable<@>,ProviderSubscription<@>>"),
      Map_of_String_and_void_Function_Event: findType("Map<String,~(Event)>"),
      MappedIterable_String_Frame: findType("MappedIterable<String,Frame>"),
      MappedListIterable_String_String: findType("MappedListIterable<String,String>"),
      MappedListIterable_String_Trace: findType("MappedListIterable<String,Trace>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      NativeUint8List: findType("NativeUint8List"),
      Node: findType("Node0"),
      Node_2: findType("Node"),
      Null: findType("Null"),
      Object: findType("Object"),
      OptionElement: findType("OptionElement"),
      Pair_String_String: findType("Pair<String,String>"),
      Pair_of_String_and_nullable_String: findType("Pair<String,String?>"),
      Pair_of_nullable_String_and_nullable_String: findType("Pair<String?,String?>"),
      ParseErrorToken: findType("ParseErrorToken"),
      Pattern: findType("Pattern"),
      ProviderBase_nullable_Object: findType("ProviderBase<Object?>"),
      ProviderContainer: findType("ProviderContainer"),
      ProviderDependencies: findType("ProviderDependencies"),
      ProviderElementBase_dynamic: findType("ProviderElementBase<@>"),
      ProviderElementBase_nullable_Object: findType("ProviderElementBase<Object?>"),
      ProviderListenable_StateController_Map_String_dynamic: findType("ProviderListenable<StateController<Map<String,@>>>"),
      ProviderListenable_StateController_String: findType("ProviderListenable<StateController<String>>"),
      ProviderListenable_StateController_bool: findType("ProviderListenable<StateController<bool>>"),
      ProviderListenable_String: findType("ProviderListenable<String>"),
      ProviderListenable_bool: findType("ProviderListenable<bool>"),
      ProviderListenable_dynamic: findType("ProviderListenable<@>"),
      ProviderOrFamily: findType("ProviderOrFamily"),
      ProviderOverride: findType("ProviderOverride"),
      ProviderRef_AppBinding: findType("ProviderRef<AppBinding>"),
      ProviderScope: findType("ProviderScope"),
      ProviderSubscription_dynamic: findType("ProviderSubscription<@>"),
      Queue_String: findType("Queue<String>"),
      Record: findType("Record"),
      Record_0: findType("+()"),
      RegExpMatch: findType("RegExpMatch"),
      RenderObjectElement: findType("RenderObjectElement"),
      ReversedListIterable_Frame: findType("ReversedListIterable<Frame>"),
      RootDomRenderObject: findType("RootDomRenderObject"),
      SelectElement: findType("SelectElement"),
      SourceLocation: findType("SourceLocation"),
      SourceSpan: findType("SourceSpan"),
      SourceSpanWithContext: findType("SourceSpanWithContext"),
      SpaceCharactersToken: findType("SpaceCharactersToken"),
      StackTrace: findType("StackTrace"),
      StartTagToken: findType("StartTagToken"),
      StateCodec: findType("StateCodec"),
      StateProviderRef_Map_String_dynamic: findType("StateProviderRef<Map<String,@>>"),
      StateProviderRef_String: findType("StateProviderRef<String>"),
      StateProviderRef_bool: findType("StateProviderRef<bool>"),
      StatefulComponent: findType("StatefulComponent"),
      String: findType("String"),
      StringToken: findType("StringToken"),
      String_Function_Match: findType("String(Match)"),
      String_Function_String: findType("String(String)"),
      SyncState_dynamic: findType("SyncState<@>"),
      TagToken: findType("TagToken"),
      TailwindTheme: findType("TailwindTheme"),
      Text: findType("Text0"),
      TextAreaElement: findType("TextAreaElement"),
      Text_2: findType("Text1"),
      Text_3: findType("Text"),
      Trace: findType("Trace"),
      Trace_Function_String: findType("Trace(String)"),
      TrustedGetRuntimeType: findType("TrustedGetRuntimeType"),
      Type: findType("Type"),
      TypeError: findType("TypeError"),
      Uint8List: findType("Uint8List"),
      UncontrolledProviderScope: findType("UncontrolledProviderScope"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      UnmodifiableListView_OptionElement: findType("UnmodifiableListView<OptionElement>"),
      Uri: findType("Uri"),
      WhereIterable_InputType: findType("WhereIterable<InputType>"),
      WhereIterable_String: findType("WhereIterable<String>"),
      WhereTypeIterable_Element: findType("WhereTypeIterable<Element0>"),
      WhereTypeIterable_String: findType("WhereTypeIterable<String>"),
      WindowBase: findType("WindowBase"),
      _Attr: findType("_Attr"),
      _ChildNodeListLazy: findType("_ChildNodeListLazy"),
      _DoubleLinkedQueueSentinel_ProviderElementBase_dynamic: findType("_DoubleLinkedQueueSentinel<ProviderElementBase<@>>"),
      _ElementEventStreamImpl_Event: findType("_ElementEventStreamImpl<Event>"),
      _FamilyOverrideRef: findType("_FamilyOverrideRef"),
      _FrozenElementList_OptionElement: findType("_FrozenElementList<OptionElement>"),
      _Future_Null: findType("_Future<Null>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Highlight: findType("_Highlight"),
      _Line: findType("_Line"),
      _Root: findType("_Root"),
      _StateReader: findType("_StateReader"),
      _SyncStarIterable_Component: findType("_SyncStarIterable<Component>"),
      _SyncStarIterable_ProviderElementBase_dynamic: findType("_SyncStarIterable<ProviderElementBase<@>>"),
      _WrappingDomComponent: findType("_WrappingDomComponent"),
      bool: findType("bool"),
      bool_Function: findType("bool()"),
      bool_Function_Element: findType("bool(Element0)"),
      bool_Function_Frame: findType("bool(Frame)"),
      bool_Function_InputType: findType("bool(InputType)"),
      bool_Function_Object: findType("bool(Object)"),
      bool_Function_String: findType("bool(String)"),
      bool_Function__Highlight: findType("bool(_Highlight)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      dynamic_Function_String: findType("@(String)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_Element: findType("Element0?"),
      nullable_Element_2: findType("Element?"),
      nullable_EventTarget: findType("EventTarget?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_HashMap_of_ProviderElementBase_nullable_Object_and_Object: findType("HashMap<ProviderElementBase<Object?>,Object>?"),
      nullable_InheritedElement: findType("InheritedElement?"),
      nullable_List_Element: findType("List<Element>?"),
      nullable_List_ObserverElement: findType("List<ObserverElement>?"),
      nullable_List_ProviderSubscription_dynamic: findType("List<ProviderSubscription<@>>?"),
      nullable_List_TagAttribute: findType("List<TagAttribute>?"),
      nullable_List_dynamic: findType("List<@>?"),
      nullable_List_int: findType("List<int>?"),
      nullable_List_of_void_Function: findType("List<~()>?"),
      nullable_List_of_void_Function_Object_StackTrace: findType("List<~(Object,StackTrace)>?"),
      nullable_Map_String_EventBinding: findType("Map<String,EventBinding>?"),
      nullable_Map_String_String: findType("Map<String,String>?"),
      nullable_Map_String_dynamic: findType("Map<String,@>?"),
      nullable_Map_Type_InheritedElement: findType("Map<Type,InheritedElement>?"),
      nullable_Map_dynamic_dynamic: findType("Map<@,@>?"),
      nullable_Map_of_String_and_nullable_Object: findType("Map<String,Object?>?"),
      nullable_Map_of_String_and_void_Function_Event: findType("Map<String,~(Event)>?"),
      nullable_Node: findType("Node?"),
      nullable_Node_2: findType("Node0?"),
      nullable_Object: findType("Object?"),
      nullable_ProviderContainer: findType("ProviderContainer?"),
      nullable_ProviderDependencies: findType("ProviderDependencies?"),
      nullable_Set_Element: findType("Set<Element>?"),
      nullable_Set_InheritedElement: findType("Set<InheritedElement>?"),
      nullable_Set_String: findType("Set<String>?"),
      nullable_State_StatefulComponent: findType("State<StatefulComponent>?"),
      nullable_String: findType("String?"),
      nullable_String_Function_Match: findType("String(Match)?"),
      nullable_Token: findType("Token?"),
      nullable__FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>?"),
      nullable__Highlight: findType("_Highlight?"),
      nullable__LinkedHashSetCell: findType("_LinkedHashSetCell?"),
      nullable__UncontrolledProviderScopeElement: findType("_UncontrolledProviderScopeElement?"),
      nullable_bool_Function_String: findType("bool(String)?"),
      nullable_dynamic_Function_Event: findType("@(Event)?"),
      nullable_int_Function_Element_Element: findType("int(Element0,Element0)?"),
      nullable_int_Function_Node_Node: findType("int(Node0,Node0)?"),
      nullable_void_Function: findType("~()?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_Element: findType("~(Element)"),
      void_Function_Event: findType("~(Event)"),
      void_Function_ProviderBase_dynamic: findType("~(ProviderBase<@>)"),
      void_Function_ProviderElementBase_dynamic: findType("~(ProviderElementBase<@>)"),
      void_Function_ProxyElementValueNotifier_dynamic: findType("~(ProxyElementValueNotifier<@>)"),
      void_Function_String_String: findType("~(String,String)"),
      void_Function_String_dynamic: findType("~(String,@)"),
      void_Function_num: findType("~(num)"),
      void_Function_void_Function: findType("~(~())")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.NativeByteData_methods = A.NativeByteData.prototype;
    B.NativeUint32List_methods = A.NativeUint32List.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.NodeList_methods = A.NodeList0.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.SelectElement_methods = A.SelectElement.prototype;
    B.TextAreaElement_methods = A.TextAreaElement.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.Window_methods = A.Window.prototype;
    B.AsciiDecoder_false_127 = new A.AsciiDecoder(false, 127);
    B.AsciiEncoder_127 = new A.AsciiEncoder(127);
    B.Base64Encoder_false = new A.Base64Encoder(false);
    B.Base64Codec_Base64Encoder_false = new A.Base64Codec(B.Base64Encoder_false);
    B.ButtonSize_1 = new A.ButtonSize("sm");
    B.ButtonSize_2 = new A.ButtonSize("md");
    B.ButtonSize_3 = new A.ButtonSize("lg");
    B.ButtonType_button = new A.ButtonType("button");
    B.CONSTANT = new A.Instantiation1(A.math__max$closure(), A.findType("Instantiation1<int>"));
    B.C_AsciiCodec = new A.AsciiCodec();
    B.C_Base64Decoder = new A.Base64Decoder();
    B.C_BinaryCodec = new A.BinaryCodec();
    B.ButtonSize_0 = new A.ButtonSize("xs");
    B.ButtonSize_4 = new A.ButtonSize("xl");
    B.Map_NY2nU = new A.GeneralConstantMap([B.ButtonSize_0, "px-2 py-1", B.ButtonSize_1, "px-2 py-1", B.ButtonSize_2, "px-2.5 py-1.5", B.ButtonSize_3, "px-3 py-2", B.ButtonSize_4, "px-3.5 py-2.5"], type$.GeneralConstantMap_ButtonSize_String);
    B.Map_NYGOj = new A.GeneralConstantMap([B.ButtonSize_0, "text-xs", B.ButtonSize_1, "text-sm", B.ButtonSize_2, "text-sm", B.ButtonSize_3, "text-sm", B.ButtonSize_4, "text-sm"], type$.GeneralConstantMap_ButtonSize_String);
    B.Map_NY8co = new A.GeneralConstantMap([B.ButtonSize_0, "rounded", B.ButtonSize_1, "rounded", B.ButtonSize_2, "rounded-md", B.ButtonSize_3, "rounded-md", B.ButtonSize_4, "rounded-md"], type$.GeneralConstantMap_ButtonSize_String);
    B.C_ButtonStyle = new A.ButtonStyle();
    B.C_EmptyIterator = new A.EmptyIterator(A.findType("EmptyIterator<0&>"));
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof HTMLElement == "function";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var userAgent = navigator.userAgent;
    if (typeof userAgent != "string") return hooks;
    if (userAgent.indexOf("DumpRenderTree") >= 0) return hooks;
    if (userAgent.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST5 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_JsonCodec = new A.JsonCodec();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C_SentinelValue = new A.SentinelValue();
    B.C_StateDecoder = new A.StateDecoder();
    B.C_StateEncoder = new A.StateEncoder();
    B.C_Utf8Codec = new A.Utf8Codec();
    B.C_Utf8Encoder = new A.Utf8Encoder();
    B.C__NamedColor = new A._NamedColor();
    B.C__RootZone = new A._RootZone();
    B.Duration_0 = new A.Duration(0);
    B.Duration_1000000 = new A.Duration(1000000);
    B.InputType_checkbox_checkbox = new A.InputType("checkbox", "checkbox");
    B.InputType_date_date = new A.InputType("date", "date");
    B.InputType_file_file = new A.InputType("file", "file");
    B.InputType_number_number = new A.InputType("number", "number");
    B.InputType_radio_radio = new A.InputType("radio", "radio");
    B.InputType_vdN = new A.InputType("datetime-local", "dateTimeLocal");
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.List_2jH = A._setArrayType(makeConstList(["-//w3c//dtd html 4.01 frameset//", "-//w3c//dtd html 4.01 transitional//"]), type$.JSArray_String);
    B.Pair_8Gl = new A.Pair("http://www.w3.org/1999/xhtml", "applet", type$.Pair_String_String);
    B.Pair_EOZ = new A.Pair("http://www.w3.org/1999/xhtml", "caption", type$.Pair_String_String);
    B.Pair_oWp = new A.Pair("http://www.w3.org/1999/xhtml", "html", type$.Pair_String_String);
    B.Pair_QcL = new A.Pair("http://www.w3.org/1999/xhtml", "marquee", type$.Pair_String_String);
    B.Pair_oyn = new A.Pair("http://www.w3.org/1999/xhtml", "object", type$.Pair_String_String);
    B.Pair_2jN = new A.Pair("http://www.w3.org/1999/xhtml", "table", type$.Pair_String_String);
    B.Pair_QE6 = new A.Pair("http://www.w3.org/1999/xhtml", "td", type$.Pair_String_String);
    B.Pair_4Cz = new A.Pair("http://www.w3.org/1999/xhtml", "th", type$.Pair_String_String);
    B.Pair_dSk = new A.Pair("http://www.w3.org/1998/Math/MathML", "mi", type$.Pair_String_String);
    B.Pair_CCQ = new A.Pair("http://www.w3.org/1998/Math/MathML", "mo", type$.Pair_String_String);
    B.Pair_jvJ = new A.Pair("http://www.w3.org/1998/Math/MathML", "mn", type$.Pair_String_String);
    B.Pair_MDg = new A.Pair("http://www.w3.org/1998/Math/MathML", "ms", type$.Pair_String_String);
    B.Pair_6iW = new A.Pair("http://www.w3.org/1998/Math/MathML", "mtext", type$.Pair_String_String);
    B.Pair_gWk = new A.Pair("http://www.w3.org/1998/Math/MathML", "annotation-xml", type$.Pair_String_String);
    B.Pair_SDM = new A.Pair("http://www.w3.org/2000/svg", "foreignObject", type$.Pair_String_String);
    B.Pair_ijl = new A.Pair("http://www.w3.org/2000/svg", "desc", type$.Pair_String_String);
    B.Pair_27z = new A.Pair("http://www.w3.org/2000/svg", "title", type$.Pair_String_String);
    B.List_4e2 = A._setArrayType(makeConstList([B.Pair_8Gl, B.Pair_EOZ, B.Pair_oWp, B.Pair_QcL, B.Pair_oyn, B.Pair_2jN, B.Pair_QE6, B.Pair_4Cz, B.Pair_dSk, B.Pair_CCQ, B.Pair_jvJ, B.Pair_MDg, B.Pair_6iW, B.Pair_gWk, B.Pair_SDM, B.Pair_ijl, B.Pair_27z]), type$.JSArray_Pair_String_String);
    B.Pair_mhU = new A.Pair("http://www.w3.org/1999/xhtml", "button", type$.Pair_String_String);
    B.List_6d3 = A._setArrayType(makeConstList([B.Pair_mhU]), type$.JSArray_Pair_String_String);
    B.List_6pl = A._setArrayType(makeConstList([B.Pair_dSk, B.Pair_CCQ, B.Pair_jvJ, B.Pair_MDg, B.Pair_6iW]), type$.JSArray_Pair_String_String);
    B.Pair_oS9 = new A.Pair("http://www.w3.org/1999/xhtml", "address", type$.Pair_String_String);
    B.Pair_2Vk = new A.Pair("http://www.w3.org/1999/xhtml", "area", type$.Pair_String_String);
    B.Pair_zgw = new A.Pair("http://www.w3.org/1999/xhtml", "article", type$.Pair_String_String);
    B.Pair_VSP = new A.Pair("http://www.w3.org/1999/xhtml", "aside", type$.Pair_String_String);
    B.Pair_dAW = new A.Pair("http://www.w3.org/1999/xhtml", "base", type$.Pair_String_String);
    B.Pair_MYA = new A.Pair("http://www.w3.org/1999/xhtml", "basefont", type$.Pair_String_String);
    B.Pair_NEK = new A.Pair("http://www.w3.org/1999/xhtml", "bgsound", type$.Pair_String_String);
    B.Pair_lLQ = new A.Pair("http://www.w3.org/1999/xhtml", "blockquote", type$.Pair_String_String);
    B.Pair_KPK = new A.Pair("http://www.w3.org/1999/xhtml", "body", type$.Pair_String_String);
    B.Pair_UgT = new A.Pair("http://www.w3.org/1999/xhtml", "br", type$.Pair_String_String);
    B.Pair_nfu = new A.Pair("http://www.w3.org/1999/xhtml", "center", type$.Pair_String_String);
    B.Pair_43h = new A.Pair("http://www.w3.org/1999/xhtml", "col", type$.Pair_String_String);
    B.Pair_qh0 = new A.Pair("http://www.w3.org/1999/xhtml", "colgroup", type$.Pair_String_String);
    B.Pair_XLZ = new A.Pair("http://www.w3.org/1999/xhtml", "command", type$.Pair_String_String);
    B.Pair_ujV = new A.Pair("http://www.w3.org/1999/xhtml", "dd", type$.Pair_String_String);
    B.Pair_gc6 = new A.Pair("http://www.w3.org/1999/xhtml", "details", type$.Pair_String_String);
    B.Pair_HFk = new A.Pair("http://www.w3.org/1999/xhtml", "dir", type$.Pair_String_String);
    B.Pair_AqW = new A.Pair("http://www.w3.org/1999/xhtml", "div", type$.Pair_String_String);
    B.Pair_t9A = new A.Pair("http://www.w3.org/1999/xhtml", "dl", type$.Pair_String_String);
    B.Pair_bLJ = new A.Pair("http://www.w3.org/1999/xhtml", "dt", type$.Pair_String_String);
    B.Pair_3s4 = new A.Pair("http://www.w3.org/1999/xhtml", "embed", type$.Pair_String_String);
    B.Pair_06X = new A.Pair("http://www.w3.org/1999/xhtml", "fieldset", type$.Pair_String_String);
    B.Pair_ki2 = new A.Pair("http://www.w3.org/1999/xhtml", "figure", type$.Pair_String_String);
    B.Pair_u7k = new A.Pair("http://www.w3.org/1999/xhtml", "footer", type$.Pair_String_String);
    B.Pair_IIf = new A.Pair("http://www.w3.org/1999/xhtml", "form", type$.Pair_String_String);
    B.Pair_cDU = new A.Pair("http://www.w3.org/1999/xhtml", "frame", type$.Pair_String_String);
    B.Pair_2No = new A.Pair("http://www.w3.org/1999/xhtml", "frameset", type$.Pair_String_String);
    B.Pair_4pG = new A.Pair("http://www.w3.org/1999/xhtml", "h1", type$.Pair_String_String);
    B.Pair_zT2 = new A.Pair("http://www.w3.org/1999/xhtml", "h2", type$.Pair_String_String);
    B.Pair_2Vk0 = new A.Pair("http://www.w3.org/1999/xhtml", "h3", type$.Pair_String_String);
    B.Pair_gkc = new A.Pair("http://www.w3.org/1999/xhtml", "h4", type$.Pair_String_String);
    B.Pair_vop = new A.Pair("http://www.w3.org/1999/xhtml", "h5", type$.Pair_String_String);
    B.Pair_keG = new A.Pair("http://www.w3.org/1999/xhtml", "h6", type$.Pair_String_String);
    B.Pair_Nw8 = new A.Pair("http://www.w3.org/1999/xhtml", "head", type$.Pair_String_String);
    B.Pair_yTF = new A.Pair("http://www.w3.org/1999/xhtml", "header", type$.Pair_String_String);
    B.Pair_VWp = new A.Pair("http://www.w3.org/1999/xhtml", "hr", type$.Pair_String_String);
    B.Pair_olH = new A.Pair("http://www.w3.org/1999/xhtml", "iframe", type$.Pair_String_String);
    B.Pair_lCi = new A.Pair("http://www.w3.org/1999/xhtml", "image", type$.Pair_String_String);
    B.Pair_cGl = new A.Pair("http://www.w3.org/1999/xhtml", "img", type$.Pair_String_String);
    B.Pair_hWH = new A.Pair("http://www.w3.org/1999/xhtml", "input", type$.Pair_String_String);
    B.Pair_oCX = new A.Pair("http://www.w3.org/1999/xhtml", "isindex", type$.Pair_String_String);
    B.Pair_Q05 = new A.Pair("http://www.w3.org/1999/xhtml", "li", type$.Pair_String_String);
    B.Pair_OGa = new A.Pair("http://www.w3.org/1999/xhtml", "link", type$.Pair_String_String);
    B.Pair_nYT = new A.Pair("http://www.w3.org/1999/xhtml", "listing", type$.Pair_String_String);
    B.Pair_69P = new A.Pair("http://www.w3.org/1999/xhtml", "men", type$.Pair_String_String);
    B.Pair_mCA = new A.Pair("http://www.w3.org/1999/xhtml", "meta", type$.Pair_String_String);
    B.Pair_Nw80 = new A.Pair("http://www.w3.org/1999/xhtml", "nav", type$.Pair_String_String);
    B.Pair_uyr = new A.Pair("http://www.w3.org/1999/xhtml", "noembed", type$.Pair_String_String);
    B.Pair_eD3 = new A.Pair("http://www.w3.org/1999/xhtml", "noframes", type$.Pair_String_String);
    B.Pair_cb9 = new A.Pair("http://www.w3.org/1999/xhtml", "noscript", type$.Pair_String_String);
    B.Pair_0 = new A.Pair("http://www.w3.org/1999/xhtml", "ol", type$.Pair_String_String);
    B.Pair_qVK = new A.Pair("http://www.w3.org/1999/xhtml", "p", type$.Pair_String_String);
    B.Pair_46y = new A.Pair("http://www.w3.org/1999/xhtml", "param", type$.Pair_String_String);
    B.Pair_iOU = new A.Pair("http://www.w3.org/1999/xhtml", "plaintext", type$.Pair_String_String);
    B.Pair_00 = new A.Pair("http://www.w3.org/1999/xhtml", "pre", type$.Pair_String_String);
    B.Pair_gsm = new A.Pair("http://www.w3.org/1999/xhtml", "script", type$.Pair_String_String);
    B.Pair_MYA0 = new A.Pair("http://www.w3.org/1999/xhtml", "section", type$.Pair_String_String);
    B.Pair_Hhw = new A.Pair("http://www.w3.org/1999/xhtml", "select", type$.Pair_String_String);
    B.Pair_7BT = new A.Pair("http://www.w3.org/1999/xhtml", "style", type$.Pair_String_String);
    B.Pair_ql5 = new A.Pair("http://www.w3.org/1999/xhtml", "tbody", type$.Pair_String_String);
    B.Pair_AiQ = new A.Pair("http://www.w3.org/1999/xhtml", "textarea", type$.Pair_String_String);
    B.Pair_mdZ = new A.Pair("http://www.w3.org/1999/xhtml", "tfoot", type$.Pair_String_String);
    B.Pair_ImU = new A.Pair("http://www.w3.org/1999/xhtml", "thead", type$.Pair_String_String);
    B.Pair_ivJ = new A.Pair("http://www.w3.org/1999/xhtml", "title", type$.Pair_String_String);
    B.Pair_4AN = new A.Pair("http://www.w3.org/1999/xhtml", "tr", type$.Pair_String_String);
    B.Pair_RXb = new A.Pair("http://www.w3.org/1999/xhtml", "ul", type$.Pair_String_String);
    B.Pair_vEV = new A.Pair("http://www.w3.org/1999/xhtml", "wbr", type$.Pair_String_String);
    B.Pair_qp8 = new A.Pair("http://www.w3.org/1999/xhtml", "xmp", type$.Pair_String_String);
    B.List_AeS = A._setArrayType(makeConstList([B.Pair_oS9, B.Pair_8Gl, B.Pair_2Vk, B.Pair_zgw, B.Pair_VSP, B.Pair_dAW, B.Pair_MYA, B.Pair_NEK, B.Pair_lLQ, B.Pair_KPK, B.Pair_UgT, B.Pair_mhU, B.Pair_EOZ, B.Pair_nfu, B.Pair_43h, B.Pair_qh0, B.Pair_XLZ, B.Pair_ujV, B.Pair_gc6, B.Pair_HFk, B.Pair_AqW, B.Pair_t9A, B.Pair_bLJ, B.Pair_3s4, B.Pair_06X, B.Pair_ki2, B.Pair_u7k, B.Pair_IIf, B.Pair_cDU, B.Pair_2No, B.Pair_4pG, B.Pair_zT2, B.Pair_2Vk0, B.Pair_gkc, B.Pair_vop, B.Pair_keG, B.Pair_Nw8, B.Pair_yTF, B.Pair_VWp, B.Pair_oWp, B.Pair_olH, B.Pair_lCi, B.Pair_cGl, B.Pair_hWH, B.Pair_oCX, B.Pair_Q05, B.Pair_OGa, B.Pair_nYT, B.Pair_QcL, B.Pair_69P, B.Pair_mCA, B.Pair_Nw80, B.Pair_uyr, B.Pair_eD3, B.Pair_cb9, B.Pair_oyn, B.Pair_0, B.Pair_qVK, B.Pair_46y, B.Pair_iOU, B.Pair_00, B.Pair_gsm, B.Pair_MYA0, B.Pair_Hhw, B.Pair_7BT, B.Pair_2jN, B.Pair_ql5, B.Pair_QE6, B.Pair_AiQ, B.Pair_mdZ, B.Pair_4Cz, B.Pair_ImU, B.Pair_ivJ, B.Pair_4AN, B.Pair_RXb, B.Pair_vEV, B.Pair_qp8, B.Pair_SDM]), type$.JSArray_Pair_String_String);
    B.List_GJC = A._setArrayType(makeConstList(["+//silmaril//dtd html pro v0r11 19970101//", "-//advasoft ltd//dtd html 3.0 aswedit + extensions//", "-//as//dtd html 3.0 aswedit + extensions//", "-//ietf//dtd html 2.0 level 1//", "-//ietf//dtd html 2.0 level 2//", "-//ietf//dtd html 2.0 strict level 1//", "-//ietf//dtd html 2.0 strict level 2//", "-//ietf//dtd html 2.0 strict//", "-//ietf//dtd html 2.0//", "-//ietf//dtd html 2.1e//", "-//ietf//dtd html 3.0//", "-//ietf//dtd html 3.2 final//", "-//ietf//dtd html 3.2//", "-//ietf//dtd html 3//", "-//ietf//dtd html level 0//", "-//ietf//dtd html level 1//", "-//ietf//dtd html level 2//", "-//ietf//dtd html level 3//", "-//ietf//dtd html strict level 0//", "-//ietf//dtd html strict level 1//", "-//ietf//dtd html strict level 2//", "-//ietf//dtd html strict level 3//", "-//ietf//dtd html strict//", "-//ietf//dtd html//", "-//metrius//dtd metrius presentational//", "-//microsoft//dtd internet explorer 2.0 html strict//", "-//microsoft//dtd internet explorer 2.0 html//", "-//microsoft//dtd internet explorer 2.0 tables//", "-//microsoft//dtd internet explorer 3.0 html strict//", "-//microsoft//dtd internet explorer 3.0 html//", "-//microsoft//dtd internet explorer 3.0 tables//", "-//netscape comm. corp.//dtd html//", "-//netscape comm. corp.//dtd strict html//", "-//o'reilly and associates//dtd html 2.0//", "-//o'reilly and associates//dtd html extended 1.0//", "-//o'reilly and associates//dtd html extended relaxed 1.0//", "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//", "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//", "-//spyglass//dtd html 2.0 extended//", "-//sq//dtd html 2.0 hotmetal + extensions//", "-//sun microsystems corp.//dtd hotjava html//", "-//sun microsystems corp.//dtd hotjava strict html//", "-//w3c//dtd html 3 1995-03-24//", "-//w3c//dtd html 3.2 draft//", "-//w3c//dtd html 3.2 final//", "-//w3c//dtd html 3.2//", "-//w3c//dtd html 3.2s draft//", "-//w3c//dtd html 4.0 frameset//", "-//w3c//dtd html 4.0 transitional//", "-//w3c//dtd html experimental 19960712//", "-//w3c//dtd html experimental 970421//", "-//w3c//dtd w3 html//", "-//w3o//dtd w3 html 3.0//", "-//webtechs//dtd mozilla html 2.0//", "-//webtechs//dtd mozilla html//"]), type$.JSArray_String);
    B.List_IJC = A._setArrayType(makeConstList(["uU", "bB", "lL", "iI", "cC"]), type$.JSArray_String);
    B.List_M1A = A._setArrayType(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_MMm = A._setArrayType(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_int);
    B.List_OL3 = A._setArrayType(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.Pair_06w = new A.Pair("http://www.w3.org/1999/xhtml", "optgroup", type$.Pair_String_String);
    B.Pair_wsa = new A.Pair("http://www.w3.org/1999/xhtml", "option", type$.Pair_String_String);
    B.List_SxB = A._setArrayType(makeConstList([B.Pair_06w, B.Pair_wsa]), type$.JSArray_Pair_String_String);
    B.Pair_DVt = new A.Pair("http://www.w3.org/1998/Math/MathML", "annotaion-xml", type$.Pair_String_String);
    B.List_VRr = A._setArrayType(makeConstList([B.Pair_DVt, B.Pair_SDM, B.Pair_ijl, B.Pair_27z]), type$.JSArray_Pair_String_String);
    B.List_XRg0 = A._setArrayType(makeConstList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_XRg = A._setArrayType(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_YmH = A._setArrayType(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_int);
    B.List_adS = A._setArrayType(makeConstList(["h1", "h2", "h3", "h4", "h5", "h6"]), type$.JSArray_String);
    B.List_address_div_p = A._setArrayType(makeConstList(["address", "div", "p"]), type$.JSArray_String);
    B.List_chs = A._setArrayType(makeConstList(["-//w3o//dtd w3 html strict 3.0//en//", "-/w3c/dtd html 4.0 transitional/en", "html"]), type$.JSArray_String);
    B.List_ejq = A._setArrayType(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_empty = A._setArrayType(makeConstList([]), type$.JSArray_Override);
    B.List_empty0 = A._setArrayType(makeConstList([]), type$.JSArray_Pair_String_String);
    B.List_empty1 = A._setArrayType(makeConstList([]), type$.JSArray_String);
    B.InputType_button_button = new A.InputType("button", "button");
    B.InputType_color_color = new A.InputType("color", "color");
    B.InputType_email_email = new A.InputType("email", "email");
    B.InputType_hidden_hidden = new A.InputType("hidden", "hidden");
    B.InputType_image_image = new A.InputType("image", "image");
    B.InputType_month_month = new A.InputType("month", "month");
    B.InputType_password_password = new A.InputType("password", "password");
    B.InputType_range_range = new A.InputType("range", "range");
    B.InputType_reset_reset = new A.InputType("reset", "reset");
    B.InputType_search_search = new A.InputType("search", "search");
    B.InputType_submit_submit = new A.InputType("submit", "submit");
    B.InputType_tel_tel = new A.InputType("tel", "tel");
    B.InputType_text_text = new A.InputType("text", "text");
    B.InputType_time_time = new A.InputType("time", "time");
    B.InputType_url_url = new A.InputType("url", "url");
    B.InputType_week_week = new A.InputType("week", "week");
    B.List_iHD = A._setArrayType(makeConstList([B.InputType_button_button, B.InputType_checkbox_checkbox, B.InputType_color_color, B.InputType_date_date, B.InputType_vdN, B.InputType_email_email, B.InputType_file_file, B.InputType_hidden_hidden, B.InputType_image_image, B.InputType_month_month, B.InputType_number_number, B.InputType_password_password, B.InputType_radio_radio, B.InputType_range_range, B.InputType_reset_reset, B.InputType_search_search, B.InputType_submit_submit, B.InputType_tel_tel, B.InputType_text_text, B.InputType_time_time, B.InputType_url_url, B.InputType_week_week]), A.findType("JSArray<InputType>"));
    B.List_jtQ = A._setArrayType(makeConstList([B.Pair_0, B.Pair_RXb]), type$.JSArray_Pair_String_String);
    B.List_k6K = A._setArrayType(makeConstList(["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"]), type$.JSArray_String);
    B.List_kMT = A._setArrayType(makeConstList(["b", "big", "blockquote", "body", "br", "center", "code", "dd", "div", "dl", "dt", "em", "embed", "h1", "h2", "h3", "h4", "h5", "h6", "head", "hr", "i", "img", "li", "listing", "menu", "meta", "nobr", "ol", "p", "pre", "ruby", "s", "small", "span", "strike", "strong", "sub", "sup", "table", "tt", "u", "ul", "var"]), type$.JSArray_String);
    B.List_kYS = A._setArrayType(makeConstList(["table", "tbody", "tfoot", "thead", "tr"]), type$.JSArray_String);
    B.List_knt = A._setArrayType(makeConstList(["oO", "cC", "tT", "yY", "pP", "eE"]), type$.JSArray_String);
    B.List_lKo = A._setArrayType(makeConstList(["C", "D", "A", "T", "A", "["]), type$.JSArray_String);
    B.List_mT8 = A._setArrayType(makeConstList([11, 65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111]), type$.JSArray_int);
    B.List_oFp = A._setArrayType(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_pre_listing_textarea = A._setArrayType(makeConstList(["pre", "listing", "textarea"]), type$.JSArray_String);
    B.List_qBb = A._setArrayType(makeConstList(["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"]), type$.JSArray_String);
    B.List_tbody_tfoot_thead_html = A._setArrayType(makeConstList(["tbody", "tfoot", "thead", "html"]), type$.JSArray_String);
    B.List_uvG = A._setArrayType(makeConstList([B.Pair_oWp, B.Pair_2jN]), type$.JSArray_Pair_String_String);
    B.List_yCx = A._setArrayType(makeConstList(["yY", "sS", "tT", "eE", "mM"]), type$.JSArray_String);
    B.List_yzX = A._setArrayType(makeConstList([0, 0, 27858, 1023, 65534, 51199, 65535, 32767]), type$.JSArray_int);
    B.Object_uxj = {li: 0, dt: 1, dd: 2};
    B.List_li = A._setArrayType(makeConstList(["li"]), type$.JSArray_String);
    B.List_dt_dd = A._setArrayType(makeConstList(["dt", "dd"]), type$.JSArray_String);
    B.Map_G38Gl = new A.ConstantStringMap(B.Object_uxj, [B.List_li, B.List_dt_dd, B.List_dt_dd], A.findType("ConstantStringMap<String,List<String>>"));
    B.Object_svg_0 = {svg: 0};
    B.Map_ahyjx = new A.ConstantStringMap(B.Object_svg_0, ["http://www.w3.org/2000/svg"], type$.ConstantStringMap_String_String);
    B.Object_ku2 = {attributename: 0, attributetype: 1, basefrequency: 2, baseprofile: 3, calcmode: 4, clippathunits: 5, contentscripttype: 6, contentstyletype: 7, diffuseconstant: 8, edgemode: 9, externalresourcesrequired: 10, filterres: 11, filterunits: 12, glyphref: 13, gradienttransform: 14, gradientunits: 15, kernelmatrix: 16, kernelunitlength: 17, keypoints: 18, keysplines: 19, keytimes: 20, lengthadjust: 21, limitingconeangle: 22, markerheight: 23, markerunits: 24, markerwidth: 25, maskcontentunits: 26, maskunits: 27, numoctaves: 28, pathlength: 29, patterncontentunits: 30, patterntransform: 31, patternunits: 32, pointsatx: 33, pointsaty: 34, pointsatz: 35, preservealpha: 36, preserveaspectratio: 37, primitiveunits: 38, refx: 39, refy: 40, repeatcount: 41, repeatdur: 42, requiredextensions: 43, requiredfeatures: 44, specularconstant: 45, specularexponent: 46, spreadmethod: 47, startoffset: 48, stddeviation: 49, stitchtiles: 50, surfacescale: 51, systemlanguage: 52, tablevalues: 53, targetx: 54, targety: 55, textlength: 56, viewbox: 57, viewtarget: 58, xchannelselector: 59, ychannelselector: 60, zoomandpan: 61};
    B.Map_bp8kq = new A.ConstantStringMap(B.Object_ku2, ["attributeName", "attributeType", "baseFrequency", "baseProfile", "calcMode", "clipPathUnits", "contentScriptType", "contentStyleType", "diffuseConstant", "edgeMode", "externalResourcesRequired", "filterRes", "filterUnits", "glyphRef", "gradientTransform", "gradientUnits", "kernelMatrix", "kernelUnitLength", "keyPoints", "keySplines", "keyTimes", "lengthAdjust", "limitingConeAngle", "markerHeight", "markerUnits", "markerWidth", "maskContentUnits", "maskUnits", "numOctaves", "pathLength", "patternContentUnits", "patternTransform", "patternUnits", "pointsAtX", "pointsAtY", "pointsAtZ", "preserveAlpha", "preserveAspectRatio", "primitiveUnits", "refX", "refY", "repeatCount", "repeatDur", "requiredExtensions", "requiredFeatures", "specularConstant", "specularExponent", "spreadMethod", "startOffset", "stdDeviation", "stitchTiles", "surfaceScale", "systemLanguage", "tableValues", "targetX", "targetY", "textLength", "viewBox", "viewTarget", "xChannelSelector", "yChannelSelector", "zoomAndPan"], type$.ConstantStringMap_String_String);
    B.Object_empty = {};
    B.Map_empty = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<String,Object?>"));
    B.Object_L37 = {"437": 0, "850": 1, "852": 2, "855": 3, "857": 4, "860": 5, "861": 6, "862": 7, "863": 8, "865": 9, "866": 10, "869": 11, ansix341968: 12, ansix341986: 13, arabic: 14, ascii: 15, asmo708: 16, big5: 17, big5hkscs: 18, chinese: 19, cp037: 20, cp1026: 21, cp154: 22, cp367: 23, cp424: 24, cp437: 25, cp500: 26, cp775: 27, cp819: 28, cp850: 29, cp852: 30, cp855: 31, cp857: 32, cp860: 33, cp861: 34, cp862: 35, cp863: 36, cp864: 37, cp865: 38, cp866: 39, cp869: 40, cp936: 41, cpgr: 42, cpis: 43, csascii: 44, csbig5: 45, cseuckr: 46, cseucpkdfmtjapanese: 47, csgb2312: 48, cshproman8: 49, csibm037: 50, csibm1026: 51, csibm424: 52, csibm500: 53, csibm855: 54, csibm857: 55, csibm860: 56, csibm861: 57, csibm863: 58, csibm864: 59, csibm865: 60, csibm866: 61, csibm869: 62, csiso2022jp: 63, csiso2022jp2: 64, csiso2022kr: 65, csiso58gb231280: 66, csisolatin1: 67, csisolatin2: 68, csisolatin3: 69, csisolatin4: 70, csisolatin5: 71, csisolatin6: 72, csisolatinarabic: 73, csisolatincyrillic: 74, csisolatingreek: 75, csisolatinhebrew: 76, cskoi8r: 77, csksc56011987: 78, cspc775baltic: 79, cspc850multilingual: 80, cspc862latinhebrew: 81, cspc8codepage437: 82, cspcp852: 83, csptcp154: 84, csshiftjis: 85, csunicode11utf7: 86, cyrillic: 87, cyrillicasian: 88, ebcdiccpbe: 89, ebcdiccpca: 90, ebcdiccpch: 91, ebcdiccphe: 92, ebcdiccpnl: 93, ebcdiccpus: 94, ebcdiccpwt: 95, ecma114: 96, ecma118: 97, elot928: 98, eucjp: 99, euckr: 100, extendedunixcodepackedformatforjapanese: 101, gb18030: 102, gb2312: 103, gb231280: 104, gbk: 105, greek: 106, greek8: 107, hebrew: 108, hproman8: 109, hzgb2312: 110, ibm037: 111, ibm1026: 112, ibm367: 113, ibm424: 114, ibm437: 115, ibm500: 116, ibm775: 117, ibm819: 118, ibm850: 119, ibm852: 120, ibm855: 121, ibm857: 122, ibm860: 123, ibm861: 124, ibm862: 125, ibm863: 126, ibm864: 127, ibm865: 128, ibm866: 129, ibm869: 130, iso2022jp: 131, iso2022jp2: 132, iso2022kr: 133, iso646irv1991: 134, iso646us: 135, iso88591: 136, iso885910: 137, iso8859101992: 138, iso885911987: 139, iso885913: 140, iso885914: 141, iso8859141998: 142, iso885915: 143, iso885916: 144, iso8859162001: 145, iso88592: 146, iso885921987: 147, iso88593: 148, iso885931988: 149, iso88594: 150, iso885941988: 151, iso88595: 152, iso885951988: 153, iso88596: 154, iso885961987: 155, iso88597: 156, iso885971987: 157, iso88598: 158, iso885981988: 159, iso88599: 160, iso885991989: 161, isoceltic: 162, isoir100: 163, isoir101: 164, isoir109: 165, isoir110: 166, isoir126: 167, isoir127: 168, isoir138: 169, isoir144: 170, isoir148: 171, isoir149: 172, isoir157: 173, isoir199: 174, isoir226: 175, isoir58: 176, isoir6: 177, koi8r: 178, koi8u: 179, korean: 180, ksc5601: 181, ksc56011987: 182, ksc56011989: 183, l1: 184, l10: 185, l2: 186, l3: 187, l4: 188, l5: 189, l6: 190, l8: 191, latin1: 192, latin10: 193, latin2: 194, latin3: 195, latin4: 196, latin5: 197, latin6: 198, latin8: 199, latin9: 200, ms936: 201, mskanji: 202, pt154: 203, ptcp154: 204, r8: 205, roman8: 206, shiftjis: 207, tis620: 208, unicode11utf7: 209, us: 210, usascii: 211, utf16: 212, utf16be: 213, utf16le: 214, utf8: 215, windows1250: 216, windows1251: 217, windows1252: 218, windows1253: 219, windows1254: 220, windows1255: 221, windows1256: 222, windows1257: 223, windows1258: 224, windows936: 225, "x-x-big5": 226};
    B.Map_fXYvf = new A.ConstantStringMap(B.Object_L37, ["cp437", "cp850", "cp852", "cp855", "cp857", "cp860", "cp861", "cp862", "cp863", "cp865", "cp866", "cp869", "ascii", "ascii", "iso8859-6", "ascii", "iso8859-6", "big5", "big5hkscs", "gbk", "cp037", "cp1026", "ptcp154", "ascii", "cp424", "cp437", "cp500", "cp775", "windows-1252", "cp850", "cp852", "cp855", "cp857", "cp860", "cp861", "cp862", "cp863", "cp864", "cp865", "cp866", "cp869", "gbk", "cp869", "cp861", "ascii", "big5", "cp949", "euc_jp", "gbk", "hp-roman8", "cp037", "cp1026", "cp424", "cp500", "cp855", "cp857", "cp860", "cp861", "cp863", "cp864", "cp865", "cp866", "cp869", "iso2022_jp", "iso2022_jp_2", "iso2022_kr", "gbk", "windows-1252", "iso8859-2", "iso8859-3", "iso8859-4", "windows-1254", "iso8859-10", "iso8859-6", "iso8859-5", "iso8859-7", "iso8859-8", "koi8-r", "cp949", "cp775", "cp850", "cp862", "cp437", "cp852", "ptcp154", "shift_jis", "utf-7", "iso8859-5", "ptcp154", "cp500", "cp037", "cp500", "cp424", "cp037", "cp037", "cp037", "iso8859-6", "iso8859-7", "iso8859-7", "euc_jp", "cp949", "euc_jp", "gb18030", "gbk", "gbk", "gbk", "iso8859-7", "iso8859-7", "iso8859-8", "hp-roman8", "hz", "cp037", "cp1026", "ascii", "cp424", "cp437", "cp500", "cp775", "windows-1252", "cp850", "cp852", "cp855", "cp857", "cp860", "cp861", "cp862", "cp863", "cp864", "cp865", "cp866", "cp869", "iso2022_jp", "iso2022_jp_2", "iso2022_kr", "ascii", "ascii", "windows-1252", "iso8859-10", "iso8859-10", "windows-1252", "iso8859-13", "iso8859-14", "iso8859-14", "iso8859-15", "iso8859-16", "iso8859-16", "iso8859-2", "iso8859-2", "iso8859-3", "iso8859-3", "iso8859-4", "iso8859-4", "iso8859-5", "iso8859-5", "iso8859-6", "iso8859-6", "iso8859-7", "iso8859-7", "iso8859-8", "iso8859-8", "windows-1254", "windows-1254", "iso8859-14", "windows-1252", "iso8859-2", "iso8859-3", "iso8859-4", "iso8859-7", "iso8859-6", "iso8859-8", "iso8859-5", "windows-1254", "cp949", "iso8859-10", "iso8859-14", "iso8859-16", "gbk", "ascii", "koi8-r", "koi8-u", "cp949", "cp949", "cp949", "cp949", "windows-1252", "iso8859-16", "iso8859-2", "iso8859-3", "iso8859-4", "windows-1254", "iso8859-10", "iso8859-14", "windows-1252", "iso8859-16", "iso8859-2", "iso8859-3", "iso8859-4", "windows-1254", "iso8859-10", "iso8859-14", "iso8859-15", "gbk", "shift_jis", "ptcp154", "ptcp154", "hp-roman8", "hp-roman8", "shift_jis", "cp874", "utf-7", "ascii", "ascii", "utf-16", "utf-16-be", "utf-16-le", "utf-8", "cp1250", "cp1251", "cp1252", "cp1253", "cp1254", "cp1255", "cp1256", "cp1257", "cp1258", "gbk", "big5"], type$.ConstantStringMap_String_String);
    B.Map_gvLTM = new A.GeneralConstantMap([0, "\ufffd", 13, "\r", 128, "\u20ac", 129, "\x81", 130, "\u201a", 131, "\u0192", 132, "\u201e", 133, "\u2026", 134, "\u2020", 135, "\u2021", 136, "\u02c6", 137, "\u2030", 138, "\u0160", 139, "\u2039", 140, "\u0152", 141, "\x8d", 142, "\u017d", 143, "\x8f", 144, "\x90", 145, "\u2018", 146, "\u2019", 147, "\u201c", 148, "\u201d", 149, "\u2022", 150, "\u2013", 151, "\u2014", 152, "\u02dc", 153, "\u2122", 154, "\u0161", 155, "\u203a", 156, "\u0153", 157, "\x9d", 158, "\u017e", 159, "\u0178"], A.findType("GeneralConstantMap<int,String>"));
    B.Object_TcL = {"xlink:actuate": 0, "xlink:arcrole": 1, "xlink:href": 2, "xlink:role": 3, "xlink:show": 4, "xlink:title": 5, "xlink:type": 6, "xml:base": 7, "xml:lang": 8, "xml:space": 9, xmlns: 10, "xmlns:xlink": 11};
    B.AttributeName_QUH = new A.AttributeName("xlink", "actuate", "http://www.w3.org/1999/xlink");
    B.AttributeName_adc = new A.AttributeName("xlink", "arcrole", "http://www.w3.org/1999/xlink");
    B.AttributeName_cHZ = new A.AttributeName("xlink", "href", "http://www.w3.org/1999/xlink");
    B.AttributeName_aZ8 = new A.AttributeName("xlink", "role", "http://www.w3.org/1999/xlink");
    B.AttributeName_Xda = new A.AttributeName("xlink", "show", "http://www.w3.org/1999/xlink");
    B.AttributeName_wIv = new A.AttributeName("xlink", "title", "http://www.w3.org/1999/xlink");
    B.AttributeName_rP3 = new A.AttributeName("xlink", "type", "http://www.w3.org/1999/xlink");
    B.AttributeName_kyU = new A.AttributeName("xml", "base", "http://www.w3.org/XML/1998/namespace");
    B.AttributeName_dik = new A.AttributeName("xml", "lang", "http://www.w3.org/XML/1998/namespace");
    B.AttributeName_3bx = new A.AttributeName("xml", "space", "http://www.w3.org/XML/1998/namespace");
    B.AttributeName_gQW = new A.AttributeName(null, "xmlns", "http://www.w3.org/2000/xmlns/");
    B.AttributeName_CTA = new A.AttributeName("xmlns", "xlink", "http://www.w3.org/2000/xmlns/");
    B.Map_kfbiD = new A.ConstantStringMap(B.Object_TcL, [B.AttributeName_QUH, B.AttributeName_adc, B.AttributeName_cHZ, B.AttributeName_aZ8, B.AttributeName_Xda, B.AttributeName_wIv, B.AttributeName_rP3, B.AttributeName_kyU, B.AttributeName_dik, B.AttributeName_3bx, B.AttributeName_gQW, B.AttributeName_CTA], A.findType("ConstantStringMap<String,AttributeName>"));
    B.Object_xO7 = {AElig: 0, "AElig;": 1, AMP: 2, "AMP;": 3, Aacute: 4, "Aacute;": 5, "Abreve;": 6, Acirc: 7, "Acirc;": 8, "Acy;": 9, "Afr;": 10, Agrave: 11, "Agrave;": 12, "Alpha;": 13, "Amacr;": 14, "And;": 15, "Aogon;": 16, "Aopf;": 17, "ApplyFunction;": 18, Aring: 19, "Aring;": 20, "Ascr;": 21, "Assign;": 22, Atilde: 23, "Atilde;": 24, Auml: 25, "Auml;": 26, "Backslash;": 27, "Barv;": 28, "Barwed;": 29, "Bcy;": 30, "Because;": 31, "Bernoullis;": 32, "Beta;": 33, "Bfr;": 34, "Bopf;": 35, "Breve;": 36, "Bscr;": 37, "Bumpeq;": 38, "CHcy;": 39, COPY: 40, "COPY;": 41, "Cacute;": 42, "Cap;": 43, "CapitalDifferentialD;": 44, "Cayleys;": 45, "Ccaron;": 46, Ccedil: 47, "Ccedil;": 48, "Ccirc;": 49, "Cconint;": 50, "Cdot;": 51, "Cedilla;": 52, "CenterDot;": 53, "Cfr;": 54, "Chi;": 55, "CircleDot;": 56, "CircleMinus;": 57, "CirclePlus;": 58, "CircleTimes;": 59, "ClockwiseContourIntegral;": 60, "CloseCurlyDoubleQuote;": 61, "CloseCurlyQuote;": 62, "Colon;": 63, "Colone;": 64, "Congruent;": 65, "Conint;": 66, "ContourIntegral;": 67, "Copf;": 68, "Coproduct;": 69, "CounterClockwiseContourIntegral;": 70, "Cross;": 71, "Cscr;": 72, "Cup;": 73, "CupCap;": 74, "DD;": 75, "DDotrahd;": 76, "DJcy;": 77, "DScy;": 78, "DZcy;": 79, "Dagger;": 80, "Darr;": 81, "Dashv;": 82, "Dcaron;": 83, "Dcy;": 84, "Del;": 85, "Delta;": 86, "Dfr;": 87, "DiacriticalAcute;": 88, "DiacriticalDot;": 89, "DiacriticalDoubleAcute;": 90, "DiacriticalGrave;": 91, "DiacriticalTilde;": 92, "Diamond;": 93, "DifferentialD;": 94, "Dopf;": 95, "Dot;": 96, "DotDot;": 97, "DotEqual;": 98, "DoubleContourIntegral;": 99, "DoubleDot;": 100, "DoubleDownArrow;": 101, "DoubleLeftArrow;": 102, "DoubleLeftRightArrow;": 103, "DoubleLeftTee;": 104, "DoubleLongLeftArrow;": 105, "DoubleLongLeftRightArrow;": 106, "DoubleLongRightArrow;": 107, "DoubleRightArrow;": 108, "DoubleRightTee;": 109, "DoubleUpArrow;": 110, "DoubleUpDownArrow;": 111, "DoubleVerticalBar;": 112, "DownArrow;": 113, "DownArrowBar;": 114, "DownArrowUpArrow;": 115, "DownBreve;": 116, "DownLeftRightVector;": 117, "DownLeftTeeVector;": 118, "DownLeftVector;": 119, "DownLeftVectorBar;": 120, "DownRightTeeVector;": 121, "DownRightVector;": 122, "DownRightVectorBar;": 123, "DownTee;": 124, "DownTeeArrow;": 125, "Downarrow;": 126, "Dscr;": 127, "Dstrok;": 128, "ENG;": 129, ETH: 130, "ETH;": 131, Eacute: 132, "Eacute;": 133, "Ecaron;": 134, Ecirc: 135, "Ecirc;": 136, "Ecy;": 137, "Edot;": 138, "Efr;": 139, Egrave: 140, "Egrave;": 141, "Element;": 142, "Emacr;": 143, "EmptySmallSquare;": 144, "EmptyVerySmallSquare;": 145, "Eogon;": 146, "Eopf;": 147, "Epsilon;": 148, "Equal;": 149, "EqualTilde;": 150, "Equilibrium;": 151, "Escr;": 152, "Esim;": 153, "Eta;": 154, Euml: 155, "Euml;": 156, "Exists;": 157, "ExponentialE;": 158, "Fcy;": 159, "Ffr;": 160, "FilledSmallSquare;": 161, "FilledVerySmallSquare;": 162, "Fopf;": 163, "ForAll;": 164, "Fouriertrf;": 165, "Fscr;": 166, "GJcy;": 167, GT: 168, "GT;": 169, "Gamma;": 170, "Gammad;": 171, "Gbreve;": 172, "Gcedil;": 173, "Gcirc;": 174, "Gcy;": 175, "Gdot;": 176, "Gfr;": 177, "Gg;": 178, "Gopf;": 179, "GreaterEqual;": 180, "GreaterEqualLess;": 181, "GreaterFullEqual;": 182, "GreaterGreater;": 183, "GreaterLess;": 184, "GreaterSlantEqual;": 185, "GreaterTilde;": 186, "Gscr;": 187, "Gt;": 188, "HARDcy;": 189, "Hacek;": 190, "Hat;": 191, "Hcirc;": 192, "Hfr;": 193, "HilbertSpace;": 194, "Hopf;": 195, "HorizontalLine;": 196, "Hscr;": 197, "Hstrok;": 198, "HumpDownHump;": 199, "HumpEqual;": 200, "IEcy;": 201, "IJlig;": 202, "IOcy;": 203, Iacute: 204, "Iacute;": 205, Icirc: 206, "Icirc;": 207, "Icy;": 208, "Idot;": 209, "Ifr;": 210, Igrave: 211, "Igrave;": 212, "Im;": 213, "Imacr;": 214, "ImaginaryI;": 215, "Implies;": 216, "Int;": 217, "Integral;": 218, "Intersection;": 219, "InvisibleComma;": 220, "InvisibleTimes;": 221, "Iogon;": 222, "Iopf;": 223, "Iota;": 224, "Iscr;": 225, "Itilde;": 226, "Iukcy;": 227, Iuml: 228, "Iuml;": 229, "Jcirc;": 230, "Jcy;": 231, "Jfr;": 232, "Jopf;": 233, "Jscr;": 234, "Jsercy;": 235, "Jukcy;": 236, "KHcy;": 237, "KJcy;": 238, "Kappa;": 239, "Kcedil;": 240, "Kcy;": 241, "Kfr;": 242, "Kopf;": 243, "Kscr;": 244, "LJcy;": 245, LT: 246, "LT;": 247, "Lacute;": 248, "Lambda;": 249, "Lang;": 250, "Laplacetrf;": 251, "Larr;": 252, "Lcaron;": 253, "Lcedil;": 254, "Lcy;": 255, "LeftAngleBracket;": 256, "LeftArrow;": 257, "LeftArrowBar;": 258, "LeftArrowRightArrow;": 259, "LeftCeiling;": 260, "LeftDoubleBracket;": 261, "LeftDownTeeVector;": 262, "LeftDownVector;": 263, "LeftDownVectorBar;": 264, "LeftFloor;": 265, "LeftRightArrow;": 266, "LeftRightVector;": 267, "LeftTee;": 268, "LeftTeeArrow;": 269, "LeftTeeVector;": 270, "LeftTriangle;": 271, "LeftTriangleBar;": 272, "LeftTriangleEqual;": 273, "LeftUpDownVector;": 274, "LeftUpTeeVector;": 275, "LeftUpVector;": 276, "LeftUpVectorBar;": 277, "LeftVector;": 278, "LeftVectorBar;": 279, "Leftarrow;": 280, "Leftrightarrow;": 281, "LessEqualGreater;": 282, "LessFullEqual;": 283, "LessGreater;": 284, "LessLess;": 285, "LessSlantEqual;": 286, "LessTilde;": 287, "Lfr;": 288, "Ll;": 289, "Lleftarrow;": 290, "Lmidot;": 291, "LongLeftArrow;": 292, "LongLeftRightArrow;": 293, "LongRightArrow;": 294, "Longleftarrow;": 295, "Longleftrightarrow;": 296, "Longrightarrow;": 297, "Lopf;": 298, "LowerLeftArrow;": 299, "LowerRightArrow;": 300, "Lscr;": 301, "Lsh;": 302, "Lstrok;": 303, "Lt;": 304, "Map;": 305, "Mcy;": 306, "MediumSpace;": 307, "Mellintrf;": 308, "Mfr;": 309, "MinusPlus;": 310, "Mopf;": 311, "Mscr;": 312, "Mu;": 313, "NJcy;": 314, "Nacute;": 315, "Ncaron;": 316, "Ncedil;": 317, "Ncy;": 318, "NegativeMediumSpace;": 319, "NegativeThickSpace;": 320, "NegativeThinSpace;": 321, "NegativeVeryThinSpace;": 322, "NestedGreaterGreater;": 323, "NestedLessLess;": 324, "NewLine;": 325, "Nfr;": 326, "NoBreak;": 327, "NonBreakingSpace;": 328, "Nopf;": 329, "Not;": 330, "NotCongruent;": 331, "NotCupCap;": 332, "NotDoubleVerticalBar;": 333, "NotElement;": 334, "NotEqual;": 335, "NotEqualTilde;": 336, "NotExists;": 337, "NotGreater;": 338, "NotGreaterEqual;": 339, "NotGreaterFullEqual;": 340, "NotGreaterGreater;": 341, "NotGreaterLess;": 342, "NotGreaterSlantEqual;": 343, "NotGreaterTilde;": 344, "NotHumpDownHump;": 345, "NotHumpEqual;": 346, "NotLeftTriangle;": 347, "NotLeftTriangleBar;": 348, "NotLeftTriangleEqual;": 349, "NotLess;": 350, "NotLessEqual;": 351, "NotLessGreater;": 352, "NotLessLess;": 353, "NotLessSlantEqual;": 354, "NotLessTilde;": 355, "NotNestedGreaterGreater;": 356, "NotNestedLessLess;": 357, "NotPrecedes;": 358, "NotPrecedesEqual;": 359, "NotPrecedesSlantEqual;": 360, "NotReverseElement;": 361, "NotRightTriangle;": 362, "NotRightTriangleBar;": 363, "NotRightTriangleEqual;": 364, "NotSquareSubset;": 365, "NotSquareSubsetEqual;": 366, "NotSquareSuperset;": 367, "NotSquareSupersetEqual;": 368, "NotSubset;": 369, "NotSubsetEqual;": 370, "NotSucceeds;": 371, "NotSucceedsEqual;": 372, "NotSucceedsSlantEqual;": 373, "NotSucceedsTilde;": 374, "NotSuperset;": 375, "NotSupersetEqual;": 376, "NotTilde;": 377, "NotTildeEqual;": 378, "NotTildeFullEqual;": 379, "NotTildeTilde;": 380, "NotVerticalBar;": 381, "Nscr;": 382, Ntilde: 383, "Ntilde;": 384, "Nu;": 385, "OElig;": 386, Oacute: 387, "Oacute;": 388, Ocirc: 389, "Ocirc;": 390, "Ocy;": 391, "Odblac;": 392, "Ofr;": 393, Ograve: 394, "Ograve;": 395, "Omacr;": 396, "Omega;": 397, "Omicron;": 398, "Oopf;": 399, "OpenCurlyDoubleQuote;": 400, "OpenCurlyQuote;": 401, "Or;": 402, "Oscr;": 403, Oslash: 404, "Oslash;": 405, Otilde: 406, "Otilde;": 407, "Otimes;": 408, Ouml: 409, "Ouml;": 410, "OverBar;": 411, "OverBrace;": 412, "OverBracket;": 413, "OverParenthesis;": 414, "PartialD;": 415, "Pcy;": 416, "Pfr;": 417, "Phi;": 418, "Pi;": 419, "PlusMinus;": 420, "Poincareplane;": 421, "Popf;": 422, "Pr;": 423, "Precedes;": 424, "PrecedesEqual;": 425, "PrecedesSlantEqual;": 426, "PrecedesTilde;": 427, "Prime;": 428, "Product;": 429, "Proportion;": 430, "Proportional;": 431, "Pscr;": 432, "Psi;": 433, QUOT: 434, "QUOT;": 435, "Qfr;": 436, "Qopf;": 437, "Qscr;": 438, "RBarr;": 439, REG: 440, "REG;": 441, "Racute;": 442, "Rang;": 443, "Rarr;": 444, "Rarrtl;": 445, "Rcaron;": 446, "Rcedil;": 447, "Rcy;": 448, "Re;": 449, "ReverseElement;": 450, "ReverseEquilibrium;": 451, "ReverseUpEquilibrium;": 452, "Rfr;": 453, "Rho;": 454, "RightAngleBracket;": 455, "RightArrow;": 456, "RightArrowBar;": 457, "RightArrowLeftArrow;": 458, "RightCeiling;": 459, "RightDoubleBracket;": 460, "RightDownTeeVector;": 461, "RightDownVector;": 462, "RightDownVectorBar;": 463, "RightFloor;": 464, "RightTee;": 465, "RightTeeArrow;": 466, "RightTeeVector;": 467, "RightTriangle;": 468, "RightTriangleBar;": 469, "RightTriangleEqual;": 470, "RightUpDownVector;": 471, "RightUpTeeVector;": 472, "RightUpVector;": 473, "RightUpVectorBar;": 474, "RightVector;": 475, "RightVectorBar;": 476, "Rightarrow;": 477, "Ropf;": 478, "RoundImplies;": 479, "Rrightarrow;": 480, "Rscr;": 481, "Rsh;": 482, "RuleDelayed;": 483, "SHCHcy;": 484, "SHcy;": 485, "SOFTcy;": 486, "Sacute;": 487, "Sc;": 488, "Scaron;": 489, "Scedil;": 490, "Scirc;": 491, "Scy;": 492, "Sfr;": 493, "ShortDownArrow;": 494, "ShortLeftArrow;": 495, "ShortRightArrow;": 496, "ShortUpArrow;": 497, "Sigma;": 498, "SmallCircle;": 499, "Sopf;": 500, "Sqrt;": 501, "Square;": 502, "SquareIntersection;": 503, "SquareSubset;": 504, "SquareSubsetEqual;": 505, "SquareSuperset;": 506, "SquareSupersetEqual;": 507, "SquareUnion;": 508, "Sscr;": 509, "Star;": 510, "Sub;": 511, "Subset;": 512, "SubsetEqual;": 513, "Succeeds;": 514, "SucceedsEqual;": 515, "SucceedsSlantEqual;": 516, "SucceedsTilde;": 517, "SuchThat;": 518, "Sum;": 519, "Sup;": 520, "Superset;": 521, "SupersetEqual;": 522, "Supset;": 523, THORN: 524, "THORN;": 525, "TRADE;": 526, "TSHcy;": 527, "TScy;": 528, "Tab;": 529, "Tau;": 530, "Tcaron;": 531, "Tcedil;": 532, "Tcy;": 533, "Tfr;": 534, "Therefore;": 535, "Theta;": 536, "ThickSpace;": 537, "ThinSpace;": 538, "Tilde;": 539, "TildeEqual;": 540, "TildeFullEqual;": 541, "TildeTilde;": 542, "Topf;": 543, "TripleDot;": 544, "Tscr;": 545, "Tstrok;": 546, Uacute: 547, "Uacute;": 548, "Uarr;": 549, "Uarrocir;": 550, "Ubrcy;": 551, "Ubreve;": 552, Ucirc: 553, "Ucirc;": 554, "Ucy;": 555, "Udblac;": 556, "Ufr;": 557, Ugrave: 558, "Ugrave;": 559, "Umacr;": 560, "UnderBar;": 561, "UnderBrace;": 562, "UnderBracket;": 563, "UnderParenthesis;": 564, "Union;": 565, "UnionPlus;": 566, "Uogon;": 567, "Uopf;": 568, "UpArrow;": 569, "UpArrowBar;": 570, "UpArrowDownArrow;": 571, "UpDownArrow;": 572, "UpEquilibrium;": 573, "UpTee;": 574, "UpTeeArrow;": 575, "Uparrow;": 576, "Updownarrow;": 577, "UpperLeftArrow;": 578, "UpperRightArrow;": 579, "Upsi;": 580, "Upsilon;": 581, "Uring;": 582, "Uscr;": 583, "Utilde;": 584, Uuml: 585, "Uuml;": 586, "VDash;": 587, "Vbar;": 588, "Vcy;": 589, "Vdash;": 590, "Vdashl;": 591, "Vee;": 592, "Verbar;": 593, "Vert;": 594, "VerticalBar;": 595, "VerticalLine;": 596, "VerticalSeparator;": 597, "VerticalTilde;": 598, "VeryThinSpace;": 599, "Vfr;": 600, "Vopf;": 601, "Vscr;": 602, "Vvdash;": 603, "Wcirc;": 604, "Wedge;": 605, "Wfr;": 606, "Wopf;": 607, "Wscr;": 608, "Xfr;": 609, "Xi;": 610, "Xopf;": 611, "Xscr;": 612, "YAcy;": 613, "YIcy;": 614, "YUcy;": 615, Yacute: 616, "Yacute;": 617, "Ycirc;": 618, "Ycy;": 619, "Yfr;": 620, "Yopf;": 621, "Yscr;": 622, "Yuml;": 623, "ZHcy;": 624, "Zacute;": 625, "Zcaron;": 626, "Zcy;": 627, "Zdot;": 628, "ZeroWidthSpace;": 629, "Zeta;": 630, "Zfr;": 631, "Zopf;": 632, "Zscr;": 633, aacute: 634, "aacute;": 635, "abreve;": 636, "ac;": 637, "acE;": 638, "acd;": 639, acirc: 640, "acirc;": 641, acute: 642, "acute;": 643, "acy;": 644, aelig: 645, "aelig;": 646, "af;": 647, "afr;": 648, agrave: 649, "agrave;": 650, "alefsym;": 651, "aleph;": 652, "alpha;": 653, "amacr;": 654, "amalg;": 655, amp: 656, "amp;": 657, "and;": 658, "andand;": 659, "andd;": 660, "andslope;": 661, "andv;": 662, "ang;": 663, "ange;": 664, "angle;": 665, "angmsd;": 666, "angmsdaa;": 667, "angmsdab;": 668, "angmsdac;": 669, "angmsdad;": 670, "angmsdae;": 671, "angmsdaf;": 672, "angmsdag;": 673, "angmsdah;": 674, "angrt;": 675, "angrtvb;": 676, "angrtvbd;": 677, "angsph;": 678, "angst;": 679, "angzarr;": 680, "aogon;": 681, "aopf;": 682, "ap;": 683, "apE;": 684, "apacir;": 685, "ape;": 686, "apid;": 687, "apos;": 688, "approx;": 689, "approxeq;": 690, aring: 691, "aring;": 692, "ascr;": 693, "ast;": 694, "asymp;": 695, "asympeq;": 696, atilde: 697, "atilde;": 698, auml: 699, "auml;": 700, "awconint;": 701, "awint;": 702, "bNot;": 703, "backcong;": 704, "backepsilon;": 705, "backprime;": 706, "backsim;": 707, "backsimeq;": 708, "barvee;": 709, "barwed;": 710, "barwedge;": 711, "bbrk;": 712, "bbrktbrk;": 713, "bcong;": 714, "bcy;": 715, "bdquo;": 716, "becaus;": 717, "because;": 718, "bemptyv;": 719, "bepsi;": 720, "bernou;": 721, "beta;": 722, "beth;": 723, "between;": 724, "bfr;": 725, "bigcap;": 726, "bigcirc;": 727, "bigcup;": 728, "bigodot;": 729, "bigoplus;": 730, "bigotimes;": 731, "bigsqcup;": 732, "bigstar;": 733, "bigtriangledown;": 734, "bigtriangleup;": 735, "biguplus;": 736, "bigvee;": 737, "bigwedge;": 738, "bkarow;": 739, "blacklozenge;": 740, "blacksquare;": 741, "blacktriangle;": 742, "blacktriangledown;": 743, "blacktriangleleft;": 744, "blacktriangleright;": 745, "blank;": 746, "blk12;": 747, "blk14;": 748, "blk34;": 749, "block;": 750, "bne;": 751, "bnequiv;": 752, "bnot;": 753, "bopf;": 754, "bot;": 755, "bottom;": 756, "bowtie;": 757, "boxDL;": 758, "boxDR;": 759, "boxDl;": 760, "boxDr;": 761, "boxH;": 762, "boxHD;": 763, "boxHU;": 764, "boxHd;": 765, "boxHu;": 766, "boxUL;": 767, "boxUR;": 768, "boxUl;": 769, "boxUr;": 770, "boxV;": 771, "boxVH;": 772, "boxVL;": 773, "boxVR;": 774, "boxVh;": 775, "boxVl;": 776, "boxVr;": 777, "boxbox;": 778, "boxdL;": 779, "boxdR;": 780, "boxdl;": 781, "boxdr;": 782, "boxh;": 783, "boxhD;": 784, "boxhU;": 785, "boxhd;": 786, "boxhu;": 787, "boxminus;": 788, "boxplus;": 789, "boxtimes;": 790, "boxuL;": 791, "boxuR;": 792, "boxul;": 793, "boxur;": 794, "boxv;": 795, "boxvH;": 796, "boxvL;": 797, "boxvR;": 798, "boxvh;": 799, "boxvl;": 800, "boxvr;": 801, "bprime;": 802, "breve;": 803, brvbar: 804, "brvbar;": 805, "bscr;": 806, "bsemi;": 807, "bsim;": 808, "bsime;": 809, "bsol;": 810, "bsolb;": 811, "bsolhsub;": 812, "bull;": 813, "bullet;": 814, "bump;": 815, "bumpE;": 816, "bumpe;": 817, "bumpeq;": 818, "cacute;": 819, "cap;": 820, "capand;": 821, "capbrcup;": 822, "capcap;": 823, "capcup;": 824, "capdot;": 825, "caps;": 826, "caret;": 827, "caron;": 828, "ccaps;": 829, "ccaron;": 830, ccedil: 831, "ccedil;": 832, "ccirc;": 833, "ccups;": 834, "ccupssm;": 835, "cdot;": 836, cedil: 837, "cedil;": 838, "cemptyv;": 839, cent: 840, "cent;": 841, "centerdot;": 842, "cfr;": 843, "chcy;": 844, "check;": 845, "checkmark;": 846, "chi;": 847, "cir;": 848, "cirE;": 849, "circ;": 850, "circeq;": 851, "circlearrowleft;": 852, "circlearrowright;": 853, "circledR;": 854, "circledS;": 855, "circledast;": 856, "circledcirc;": 857, "circleddash;": 858, "cire;": 859, "cirfnint;": 860, "cirmid;": 861, "cirscir;": 862, "clubs;": 863, "clubsuit;": 864, "colon;": 865, "colone;": 866, "coloneq;": 867, "comma;": 868, "commat;": 869, "comp;": 870, "compfn;": 871, "complement;": 872, "complexes;": 873, "cong;": 874, "congdot;": 875, "conint;": 876, "copf;": 877, "coprod;": 878, copy: 879, "copy;": 880, "copysr;": 881, "crarr;": 882, "cross;": 883, "cscr;": 884, "csub;": 885, "csube;": 886, "csup;": 887, "csupe;": 888, "ctdot;": 889, "cudarrl;": 890, "cudarrr;": 891, "cuepr;": 892, "cuesc;": 893, "cularr;": 894, "cularrp;": 895, "cup;": 896, "cupbrcap;": 897, "cupcap;": 898, "cupcup;": 899, "cupdot;": 900, "cupor;": 901, "cups;": 902, "curarr;": 903, "curarrm;": 904, "curlyeqprec;": 905, "curlyeqsucc;": 906, "curlyvee;": 907, "curlywedge;": 908, curren: 909, "curren;": 910, "curvearrowleft;": 911, "curvearrowright;": 912, "cuvee;": 913, "cuwed;": 914, "cwconint;": 915, "cwint;": 916, "cylcty;": 917, "dArr;": 918, "dHar;": 919, "dagger;": 920, "daleth;": 921, "darr;": 922, "dash;": 923, "dashv;": 924, "dbkarow;": 925, "dblac;": 926, "dcaron;": 927, "dcy;": 928, "dd;": 929, "ddagger;": 930, "ddarr;": 931, "ddotseq;": 932, deg: 933, "deg;": 934, "delta;": 935, "demptyv;": 936, "dfisht;": 937, "dfr;": 938, "dharl;": 939, "dharr;": 940, "diam;": 941, "diamond;": 942, "diamondsuit;": 943, "diams;": 944, "die;": 945, "digamma;": 946, "disin;": 947, "div;": 948, divide: 949, "divide;": 950, "divideontimes;": 951, "divonx;": 952, "djcy;": 953, "dlcorn;": 954, "dlcrop;": 955, "dollar;": 956, "dopf;": 957, "dot;": 958, "doteq;": 959, "doteqdot;": 960, "dotminus;": 961, "dotplus;": 962, "dotsquare;": 963, "doublebarwedge;": 964, "downarrow;": 965, "downdownarrows;": 966, "downharpoonleft;": 967, "downharpoonright;": 968, "drbkarow;": 969, "drcorn;": 970, "drcrop;": 971, "dscr;": 972, "dscy;": 973, "dsol;": 974, "dstrok;": 975, "dtdot;": 976, "dtri;": 977, "dtrif;": 978, "duarr;": 979, "duhar;": 980, "dwangle;": 981, "dzcy;": 982, "dzigrarr;": 983, "eDDot;": 984, "eDot;": 985, eacute: 986, "eacute;": 987, "easter;": 988, "ecaron;": 989, "ecir;": 990, ecirc: 991, "ecirc;": 992, "ecolon;": 993, "ecy;": 994, "edot;": 995, "ee;": 996, "efDot;": 997, "efr;": 998, "eg;": 999, egrave: 1000, "egrave;": 1001, "egs;": 1002, "egsdot;": 1003, "el;": 1004, "elinters;": 1005, "ell;": 1006, "els;": 1007, "elsdot;": 1008, "emacr;": 1009, "empty;": 1010, "emptyset;": 1011, "emptyv;": 1012, "emsp13;": 1013, "emsp14;": 1014, "emsp;": 1015, "eng;": 1016, "ensp;": 1017, "eogon;": 1018, "eopf;": 1019, "epar;": 1020, "eparsl;": 1021, "eplus;": 1022, "epsi;": 1023, "epsilon;": 1024, "epsiv;": 1025, "eqcirc;": 1026, "eqcolon;": 1027, "eqsim;": 1028, "eqslantgtr;": 1029, "eqslantless;": 1030, "equals;": 1031, "equest;": 1032, "equiv;": 1033, "equivDD;": 1034, "eqvparsl;": 1035, "erDot;": 1036, "erarr;": 1037, "escr;": 1038, "esdot;": 1039, "esim;": 1040, "eta;": 1041, eth: 1042, "eth;": 1043, euml: 1044, "euml;": 1045, "euro;": 1046, "excl;": 1047, "exist;": 1048, "expectation;": 1049, "exponentiale;": 1050, "fallingdotseq;": 1051, "fcy;": 1052, "female;": 1053, "ffilig;": 1054, "fflig;": 1055, "ffllig;": 1056, "ffr;": 1057, "filig;": 1058, "fjlig;": 1059, "flat;": 1060, "fllig;": 1061, "fltns;": 1062, "fnof;": 1063, "fopf;": 1064, "forall;": 1065, "fork;": 1066, "forkv;": 1067, "fpartint;": 1068, frac12: 1069, "frac12;": 1070, "frac13;": 1071, frac14: 1072, "frac14;": 1073, "frac15;": 1074, "frac16;": 1075, "frac18;": 1076, "frac23;": 1077, "frac25;": 1078, frac34: 1079, "frac34;": 1080, "frac35;": 1081, "frac38;": 1082, "frac45;": 1083, "frac56;": 1084, "frac58;": 1085, "frac78;": 1086, "frasl;": 1087, "frown;": 1088, "fscr;": 1089, "gE;": 1090, "gEl;": 1091, "gacute;": 1092, "gamma;": 1093, "gammad;": 1094, "gap;": 1095, "gbreve;": 1096, "gcirc;": 1097, "gcy;": 1098, "gdot;": 1099, "ge;": 1100, "gel;": 1101, "geq;": 1102, "geqq;": 1103, "geqslant;": 1104, "ges;": 1105, "gescc;": 1106, "gesdot;": 1107, "gesdoto;": 1108, "gesdotol;": 1109, "gesl;": 1110, "gesles;": 1111, "gfr;": 1112, "gg;": 1113, "ggg;": 1114, "gimel;": 1115, "gjcy;": 1116, "gl;": 1117, "glE;": 1118, "gla;": 1119, "glj;": 1120, "gnE;": 1121, "gnap;": 1122, "gnapprox;": 1123, "gne;": 1124, "gneq;": 1125, "gneqq;": 1126, "gnsim;": 1127, "gopf;": 1128, "grave;": 1129, "gscr;": 1130, "gsim;": 1131, "gsime;": 1132, "gsiml;": 1133, gt: 1134, "gt;": 1135, "gtcc;": 1136, "gtcir;": 1137, "gtdot;": 1138, "gtlPar;": 1139, "gtquest;": 1140, "gtrapprox;": 1141, "gtrarr;": 1142, "gtrdot;": 1143, "gtreqless;": 1144, "gtreqqless;": 1145, "gtrless;": 1146, "gtrsim;": 1147, "gvertneqq;": 1148, "gvnE;": 1149, "hArr;": 1150, "hairsp;": 1151, "half;": 1152, "hamilt;": 1153, "hardcy;": 1154, "harr;": 1155, "harrcir;": 1156, "harrw;": 1157, "hbar;": 1158, "hcirc;": 1159, "hearts;": 1160, "heartsuit;": 1161, "hellip;": 1162, "hercon;": 1163, "hfr;": 1164, "hksearow;": 1165, "hkswarow;": 1166, "hoarr;": 1167, "homtht;": 1168, "hookleftarrow;": 1169, "hookrightarrow;": 1170, "hopf;": 1171, "horbar;": 1172, "hscr;": 1173, "hslash;": 1174, "hstrok;": 1175, "hybull;": 1176, "hyphen;": 1177, iacute: 1178, "iacute;": 1179, "ic;": 1180, icirc: 1181, "icirc;": 1182, "icy;": 1183, "iecy;": 1184, iexcl: 1185, "iexcl;": 1186, "iff;": 1187, "ifr;": 1188, igrave: 1189, "igrave;": 1190, "ii;": 1191, "iiiint;": 1192, "iiint;": 1193, "iinfin;": 1194, "iiota;": 1195, "ijlig;": 1196, "imacr;": 1197, "image;": 1198, "imagline;": 1199, "imagpart;": 1200, "imath;": 1201, "imof;": 1202, "imped;": 1203, "in;": 1204, "incare;": 1205, "infin;": 1206, "infintie;": 1207, "inodot;": 1208, "int;": 1209, "intcal;": 1210, "integers;": 1211, "intercal;": 1212, "intlarhk;": 1213, "intprod;": 1214, "iocy;": 1215, "iogon;": 1216, "iopf;": 1217, "iota;": 1218, "iprod;": 1219, iquest: 1220, "iquest;": 1221, "iscr;": 1222, "isin;": 1223, "isinE;": 1224, "isindot;": 1225, "isins;": 1226, "isinsv;": 1227, "isinv;": 1228, "it;": 1229, "itilde;": 1230, "iukcy;": 1231, iuml: 1232, "iuml;": 1233, "jcirc;": 1234, "jcy;": 1235, "jfr;": 1236, "jmath;": 1237, "jopf;": 1238, "jscr;": 1239, "jsercy;": 1240, "jukcy;": 1241, "kappa;": 1242, "kappav;": 1243, "kcedil;": 1244, "kcy;": 1245, "kfr;": 1246, "kgreen;": 1247, "khcy;": 1248, "kjcy;": 1249, "kopf;": 1250, "kscr;": 1251, "lAarr;": 1252, "lArr;": 1253, "lAtail;": 1254, "lBarr;": 1255, "lE;": 1256, "lEg;": 1257, "lHar;": 1258, "lacute;": 1259, "laemptyv;": 1260, "lagran;": 1261, "lambda;": 1262, "lang;": 1263, "langd;": 1264, "langle;": 1265, "lap;": 1266, laquo: 1267, "laquo;": 1268, "larr;": 1269, "larrb;": 1270, "larrbfs;": 1271, "larrfs;": 1272, "larrhk;": 1273, "larrlp;": 1274, "larrpl;": 1275, "larrsim;": 1276, "larrtl;": 1277, "lat;": 1278, "latail;": 1279, "late;": 1280, "lates;": 1281, "lbarr;": 1282, "lbbrk;": 1283, "lbrace;": 1284, "lbrack;": 1285, "lbrke;": 1286, "lbrksld;": 1287, "lbrkslu;": 1288, "lcaron;": 1289, "lcedil;": 1290, "lceil;": 1291, "lcub;": 1292, "lcy;": 1293, "ldca;": 1294, "ldquo;": 1295, "ldquor;": 1296, "ldrdhar;": 1297, "ldrushar;": 1298, "ldsh;": 1299, "le;": 1300, "leftarrow;": 1301, "leftarrowtail;": 1302, "leftharpoondown;": 1303, "leftharpoonup;": 1304, "leftleftarrows;": 1305, "leftrightarrow;": 1306, "leftrightarrows;": 1307, "leftrightharpoons;": 1308, "leftrightsquigarrow;": 1309, "leftthreetimes;": 1310, "leg;": 1311, "leq;": 1312, "leqq;": 1313, "leqslant;": 1314, "les;": 1315, "lescc;": 1316, "lesdot;": 1317, "lesdoto;": 1318, "lesdotor;": 1319, "lesg;": 1320, "lesges;": 1321, "lessapprox;": 1322, "lessdot;": 1323, "lesseqgtr;": 1324, "lesseqqgtr;": 1325, "lessgtr;": 1326, "lesssim;": 1327, "lfisht;": 1328, "lfloor;": 1329, "lfr;": 1330, "lg;": 1331, "lgE;": 1332, "lhard;": 1333, "lharu;": 1334, "lharul;": 1335, "lhblk;": 1336, "ljcy;": 1337, "ll;": 1338, "llarr;": 1339, "llcorner;": 1340, "llhard;": 1341, "lltri;": 1342, "lmidot;": 1343, "lmoust;": 1344, "lmoustache;": 1345, "lnE;": 1346, "lnap;": 1347, "lnapprox;": 1348, "lne;": 1349, "lneq;": 1350, "lneqq;": 1351, "lnsim;": 1352, "loang;": 1353, "loarr;": 1354, "lobrk;": 1355, "longleftarrow;": 1356, "longleftrightarrow;": 1357, "longmapsto;": 1358, "longrightarrow;": 1359, "looparrowleft;": 1360, "looparrowright;": 1361, "lopar;": 1362, "lopf;": 1363, "loplus;": 1364, "lotimes;": 1365, "lowast;": 1366, "lowbar;": 1367, "loz;": 1368, "lozenge;": 1369, "lozf;": 1370, "lpar;": 1371, "lparlt;": 1372, "lrarr;": 1373, "lrcorner;": 1374, "lrhar;": 1375, "lrhard;": 1376, "lrm;": 1377, "lrtri;": 1378, "lsaquo;": 1379, "lscr;": 1380, "lsh;": 1381, "lsim;": 1382, "lsime;": 1383, "lsimg;": 1384, "lsqb;": 1385, "lsquo;": 1386, "lsquor;": 1387, "lstrok;": 1388, lt: 1389, "lt;": 1390, "ltcc;": 1391, "ltcir;": 1392, "ltdot;": 1393, "lthree;": 1394, "ltimes;": 1395, "ltlarr;": 1396, "ltquest;": 1397, "ltrPar;": 1398, "ltri;": 1399, "ltrie;": 1400, "ltrif;": 1401, "lurdshar;": 1402, "luruhar;": 1403, "lvertneqq;": 1404, "lvnE;": 1405, "mDDot;": 1406, macr: 1407, "macr;": 1408, "male;": 1409, "malt;": 1410, "maltese;": 1411, "map;": 1412, "mapsto;": 1413, "mapstodown;": 1414, "mapstoleft;": 1415, "mapstoup;": 1416, "marker;": 1417, "mcomma;": 1418, "mcy;": 1419, "mdash;": 1420, "measuredangle;": 1421, "mfr;": 1422, "mho;": 1423, micro: 1424, "micro;": 1425, "mid;": 1426, "midast;": 1427, "midcir;": 1428, middot: 1429, "middot;": 1430, "minus;": 1431, "minusb;": 1432, "minusd;": 1433, "minusdu;": 1434, "mlcp;": 1435, "mldr;": 1436, "mnplus;": 1437, "models;": 1438, "mopf;": 1439, "mp;": 1440, "mscr;": 1441, "mstpos;": 1442, "mu;": 1443, "multimap;": 1444, "mumap;": 1445, "nGg;": 1446, "nGt;": 1447, "nGtv;": 1448, "nLeftarrow;": 1449, "nLeftrightarrow;": 1450, "nLl;": 1451, "nLt;": 1452, "nLtv;": 1453, "nRightarrow;": 1454, "nVDash;": 1455, "nVdash;": 1456, "nabla;": 1457, "nacute;": 1458, "nang;": 1459, "nap;": 1460, "napE;": 1461, "napid;": 1462, "napos;": 1463, "napprox;": 1464, "natur;": 1465, "natural;": 1466, "naturals;": 1467, nbsp: 1468, "nbsp;": 1469, "nbump;": 1470, "nbumpe;": 1471, "ncap;": 1472, "ncaron;": 1473, "ncedil;": 1474, "ncong;": 1475, "ncongdot;": 1476, "ncup;": 1477, "ncy;": 1478, "ndash;": 1479, "ne;": 1480, "neArr;": 1481, "nearhk;": 1482, "nearr;": 1483, "nearrow;": 1484, "nedot;": 1485, "nequiv;": 1486, "nesear;": 1487, "nesim;": 1488, "nexist;": 1489, "nexists;": 1490, "nfr;": 1491, "ngE;": 1492, "nge;": 1493, "ngeq;": 1494, "ngeqq;": 1495, "ngeqslant;": 1496, "nges;": 1497, "ngsim;": 1498, "ngt;": 1499, "ngtr;": 1500, "nhArr;": 1501, "nharr;": 1502, "nhpar;": 1503, "ni;": 1504, "nis;": 1505, "nisd;": 1506, "niv;": 1507, "njcy;": 1508, "nlArr;": 1509, "nlE;": 1510, "nlarr;": 1511, "nldr;": 1512, "nle;": 1513, "nleftarrow;": 1514, "nleftrightarrow;": 1515, "nleq;": 1516, "nleqq;": 1517, "nleqslant;": 1518, "nles;": 1519, "nless;": 1520, "nlsim;": 1521, "nlt;": 1522, "nltri;": 1523, "nltrie;": 1524, "nmid;": 1525, "nopf;": 1526, not: 1527, "not;": 1528, "notin;": 1529, "notinE;": 1530, "notindot;": 1531, "notinva;": 1532, "notinvb;": 1533, "notinvc;": 1534, "notni;": 1535, "notniva;": 1536, "notnivb;": 1537, "notnivc;": 1538, "npar;": 1539, "nparallel;": 1540, "nparsl;": 1541, "npart;": 1542, "npolint;": 1543, "npr;": 1544, "nprcue;": 1545, "npre;": 1546, "nprec;": 1547, "npreceq;": 1548, "nrArr;": 1549, "nrarr;": 1550, "nrarrc;": 1551, "nrarrw;": 1552, "nrightarrow;": 1553, "nrtri;": 1554, "nrtrie;": 1555, "nsc;": 1556, "nsccue;": 1557, "nsce;": 1558, "nscr;": 1559, "nshortmid;": 1560, "nshortparallel;": 1561, "nsim;": 1562, "nsime;": 1563, "nsimeq;": 1564, "nsmid;": 1565, "nspar;": 1566, "nsqsube;": 1567, "nsqsupe;": 1568, "nsub;": 1569, "nsubE;": 1570, "nsube;": 1571, "nsubset;": 1572, "nsubseteq;": 1573, "nsubseteqq;": 1574, "nsucc;": 1575, "nsucceq;": 1576, "nsup;": 1577, "nsupE;": 1578, "nsupe;": 1579, "nsupset;": 1580, "nsupseteq;": 1581, "nsupseteqq;": 1582, "ntgl;": 1583, ntilde: 1584, "ntilde;": 1585, "ntlg;": 1586, "ntriangleleft;": 1587, "ntrianglelefteq;": 1588, "ntriangleright;": 1589, "ntrianglerighteq;": 1590, "nu;": 1591, "num;": 1592, "numero;": 1593, "numsp;": 1594, "nvDash;": 1595, "nvHarr;": 1596, "nvap;": 1597, "nvdash;": 1598, "nvge;": 1599, "nvgt;": 1600, "nvinfin;": 1601, "nvlArr;": 1602, "nvle;": 1603, "nvlt;": 1604, "nvltrie;": 1605, "nvrArr;": 1606, "nvrtrie;": 1607, "nvsim;": 1608, "nwArr;": 1609, "nwarhk;": 1610, "nwarr;": 1611, "nwarrow;": 1612, "nwnear;": 1613, "oS;": 1614, oacute: 1615, "oacute;": 1616, "oast;": 1617, "ocir;": 1618, ocirc: 1619, "ocirc;": 1620, "ocy;": 1621, "odash;": 1622, "odblac;": 1623, "odiv;": 1624, "odot;": 1625, "odsold;": 1626, "oelig;": 1627, "ofcir;": 1628, "ofr;": 1629, "ogon;": 1630, ograve: 1631, "ograve;": 1632, "ogt;": 1633, "ohbar;": 1634, "ohm;": 1635, "oint;": 1636, "olarr;": 1637, "olcir;": 1638, "olcross;": 1639, "oline;": 1640, "olt;": 1641, "omacr;": 1642, "omega;": 1643, "omicron;": 1644, "omid;": 1645, "ominus;": 1646, "oopf;": 1647, "opar;": 1648, "operp;": 1649, "oplus;": 1650, "or;": 1651, "orarr;": 1652, "ord;": 1653, "order;": 1654, "orderof;": 1655, ordf: 1656, "ordf;": 1657, ordm: 1658, "ordm;": 1659, "origof;": 1660, "oror;": 1661, "orslope;": 1662, "orv;": 1663, "oscr;": 1664, oslash: 1665, "oslash;": 1666, "osol;": 1667, otilde: 1668, "otilde;": 1669, "otimes;": 1670, "otimesas;": 1671, ouml: 1672, "ouml;": 1673, "ovbar;": 1674, "par;": 1675, para: 1676, "para;": 1677, "parallel;": 1678, "parsim;": 1679, "parsl;": 1680, "part;": 1681, "pcy;": 1682, "percnt;": 1683, "period;": 1684, "permil;": 1685, "perp;": 1686, "pertenk;": 1687, "pfr;": 1688, "phi;": 1689, "phiv;": 1690, "phmmat;": 1691, "phone;": 1692, "pi;": 1693, "pitchfork;": 1694, "piv;": 1695, "planck;": 1696, "planckh;": 1697, "plankv;": 1698, "plus;": 1699, "plusacir;": 1700, "plusb;": 1701, "pluscir;": 1702, "plusdo;": 1703, "plusdu;": 1704, "pluse;": 1705, plusmn: 1706, "plusmn;": 1707, "plussim;": 1708, "plustwo;": 1709, "pm;": 1710, "pointint;": 1711, "popf;": 1712, pound: 1713, "pound;": 1714, "pr;": 1715, "prE;": 1716, "prap;": 1717, "prcue;": 1718, "pre;": 1719, "prec;": 1720, "precapprox;": 1721, "preccurlyeq;": 1722, "preceq;": 1723, "precnapprox;": 1724, "precneqq;": 1725, "precnsim;": 1726, "precsim;": 1727, "prime;": 1728, "primes;": 1729, "prnE;": 1730, "prnap;": 1731, "prnsim;": 1732, "prod;": 1733, "profalar;": 1734, "profline;": 1735, "profsurf;": 1736, "prop;": 1737, "propto;": 1738, "prsim;": 1739, "prurel;": 1740, "pscr;": 1741, "psi;": 1742, "puncsp;": 1743, "qfr;": 1744, "qint;": 1745, "qopf;": 1746, "qprime;": 1747, "qscr;": 1748, "quaternions;": 1749, "quatint;": 1750, "quest;": 1751, "questeq;": 1752, quot: 1753, "quot;": 1754, "rAarr;": 1755, "rArr;": 1756, "rAtail;": 1757, "rBarr;": 1758, "rHar;": 1759, "race;": 1760, "racute;": 1761, "radic;": 1762, "raemptyv;": 1763, "rang;": 1764, "rangd;": 1765, "range;": 1766, "rangle;": 1767, raquo: 1768, "raquo;": 1769, "rarr;": 1770, "rarrap;": 1771, "rarrb;": 1772, "rarrbfs;": 1773, "rarrc;": 1774, "rarrfs;": 1775, "rarrhk;": 1776, "rarrlp;": 1777, "rarrpl;": 1778, "rarrsim;": 1779, "rarrtl;": 1780, "rarrw;": 1781, "ratail;": 1782, "ratio;": 1783, "rationals;": 1784, "rbarr;": 1785, "rbbrk;": 1786, "rbrace;": 1787, "rbrack;": 1788, "rbrke;": 1789, "rbrksld;": 1790, "rbrkslu;": 1791, "rcaron;": 1792, "rcedil;": 1793, "rceil;": 1794, "rcub;": 1795, "rcy;": 1796, "rdca;": 1797, "rdldhar;": 1798, "rdquo;": 1799, "rdquor;": 1800, "rdsh;": 1801, "real;": 1802, "realine;": 1803, "realpart;": 1804, "reals;": 1805, "rect;": 1806, reg: 1807, "reg;": 1808, "rfisht;": 1809, "rfloor;": 1810, "rfr;": 1811, "rhard;": 1812, "rharu;": 1813, "rharul;": 1814, "rho;": 1815, "rhov;": 1816, "rightarrow;": 1817, "rightarrowtail;": 1818, "rightharpoondown;": 1819, "rightharpoonup;": 1820, "rightleftarrows;": 1821, "rightleftharpoons;": 1822, "rightrightarrows;": 1823, "rightsquigarrow;": 1824, "rightthreetimes;": 1825, "ring;": 1826, "risingdotseq;": 1827, "rlarr;": 1828, "rlhar;": 1829, "rlm;": 1830, "rmoust;": 1831, "rmoustache;": 1832, "rnmid;": 1833, "roang;": 1834, "roarr;": 1835, "robrk;": 1836, "ropar;": 1837, "ropf;": 1838, "roplus;": 1839, "rotimes;": 1840, "rpar;": 1841, "rpargt;": 1842, "rppolint;": 1843, "rrarr;": 1844, "rsaquo;": 1845, "rscr;": 1846, "rsh;": 1847, "rsqb;": 1848, "rsquo;": 1849, "rsquor;": 1850, "rthree;": 1851, "rtimes;": 1852, "rtri;": 1853, "rtrie;": 1854, "rtrif;": 1855, "rtriltri;": 1856, "ruluhar;": 1857, "rx;": 1858, "sacute;": 1859, "sbquo;": 1860, "sc;": 1861, "scE;": 1862, "scap;": 1863, "scaron;": 1864, "sccue;": 1865, "sce;": 1866, "scedil;": 1867, "scirc;": 1868, "scnE;": 1869, "scnap;": 1870, "scnsim;": 1871, "scpolint;": 1872, "scsim;": 1873, "scy;": 1874, "sdot;": 1875, "sdotb;": 1876, "sdote;": 1877, "seArr;": 1878, "searhk;": 1879, "searr;": 1880, "searrow;": 1881, sect: 1882, "sect;": 1883, "semi;": 1884, "seswar;": 1885, "setminus;": 1886, "setmn;": 1887, "sext;": 1888, "sfr;": 1889, "sfrown;": 1890, "sharp;": 1891, "shchcy;": 1892, "shcy;": 1893, "shortmid;": 1894, "shortparallel;": 1895, shy: 1896, "shy;": 1897, "sigma;": 1898, "sigmaf;": 1899, "sigmav;": 1900, "sim;": 1901, "simdot;": 1902, "sime;": 1903, "simeq;": 1904, "simg;": 1905, "simgE;": 1906, "siml;": 1907, "simlE;": 1908, "simne;": 1909, "simplus;": 1910, "simrarr;": 1911, "slarr;": 1912, "smallsetminus;": 1913, "smashp;": 1914, "smeparsl;": 1915, "smid;": 1916, "smile;": 1917, "smt;": 1918, "smte;": 1919, "smtes;": 1920, "softcy;": 1921, "sol;": 1922, "solb;": 1923, "solbar;": 1924, "sopf;": 1925, "spades;": 1926, "spadesuit;": 1927, "spar;": 1928, "sqcap;": 1929, "sqcaps;": 1930, "sqcup;": 1931, "sqcups;": 1932, "sqsub;": 1933, "sqsube;": 1934, "sqsubset;": 1935, "sqsubseteq;": 1936, "sqsup;": 1937, "sqsupe;": 1938, "sqsupset;": 1939, "sqsupseteq;": 1940, "squ;": 1941, "square;": 1942, "squarf;": 1943, "squf;": 1944, "srarr;": 1945, "sscr;": 1946, "ssetmn;": 1947, "ssmile;": 1948, "sstarf;": 1949, "star;": 1950, "starf;": 1951, "straightepsilon;": 1952, "straightphi;": 1953, "strns;": 1954, "sub;": 1955, "subE;": 1956, "subdot;": 1957, "sube;": 1958, "subedot;": 1959, "submult;": 1960, "subnE;": 1961, "subne;": 1962, "subplus;": 1963, "subrarr;": 1964, "subset;": 1965, "subseteq;": 1966, "subseteqq;": 1967, "subsetneq;": 1968, "subsetneqq;": 1969, "subsim;": 1970, "subsub;": 1971, "subsup;": 1972, "succ;": 1973, "succapprox;": 1974, "succcurlyeq;": 1975, "succeq;": 1976, "succnapprox;": 1977, "succneqq;": 1978, "succnsim;": 1979, "succsim;": 1980, "sum;": 1981, "sung;": 1982, sup1: 1983, "sup1;": 1984, sup2: 1985, "sup2;": 1986, sup3: 1987, "sup3;": 1988, "sup;": 1989, "supE;": 1990, "supdot;": 1991, "supdsub;": 1992, "supe;": 1993, "supedot;": 1994, "suphsol;": 1995, "suphsub;": 1996, "suplarr;": 1997, "supmult;": 1998, "supnE;": 1999, "supne;": 2000, "supplus;": 2001, "supset;": 2002, "supseteq;": 2003, "supseteqq;": 2004, "supsetneq;": 2005, "supsetneqq;": 2006, "supsim;": 2007, "supsub;": 2008, "supsup;": 2009, "swArr;": 2010, "swarhk;": 2011, "swarr;": 2012, "swarrow;": 2013, "swnwar;": 2014, szlig: 2015, "szlig;": 2016, "target;": 2017, "tau;": 2018, "tbrk;": 2019, "tcaron;": 2020, "tcedil;": 2021, "tcy;": 2022, "tdot;": 2023, "telrec;": 2024, "tfr;": 2025, "there4;": 2026, "therefore;": 2027, "theta;": 2028, "thetasym;": 2029, "thetav;": 2030, "thickapprox;": 2031, "thicksim;": 2032, "thinsp;": 2033, "thkap;": 2034, "thksim;": 2035, thorn: 2036, "thorn;": 2037, "tilde;": 2038, times: 2039, "times;": 2040, "timesb;": 2041, "timesbar;": 2042, "timesd;": 2043, "tint;": 2044, "toea;": 2045, "top;": 2046, "topbot;": 2047, "topcir;": 2048, "topf;": 2049, "topfork;": 2050, "tosa;": 2051, "tprime;": 2052, "trade;": 2053, "triangle;": 2054, "triangledown;": 2055, "triangleleft;": 2056, "trianglelefteq;": 2057, "triangleq;": 2058, "triangleright;": 2059, "trianglerighteq;": 2060, "tridot;": 2061, "trie;": 2062, "triminus;": 2063, "triplus;": 2064, "trisb;": 2065, "tritime;": 2066, "trpezium;": 2067, "tscr;": 2068, "tscy;": 2069, "tshcy;": 2070, "tstrok;": 2071, "twixt;": 2072, "twoheadleftarrow;": 2073, "twoheadrightarrow;": 2074, "uArr;": 2075, "uHar;": 2076, uacute: 2077, "uacute;": 2078, "uarr;": 2079, "ubrcy;": 2080, "ubreve;": 2081, ucirc: 2082, "ucirc;": 2083, "ucy;": 2084, "udarr;": 2085, "udblac;": 2086, "udhar;": 2087, "ufisht;": 2088, "ufr;": 2089, ugrave: 2090, "ugrave;": 2091, "uharl;": 2092, "uharr;": 2093, "uhblk;": 2094, "ulcorn;": 2095, "ulcorner;": 2096, "ulcrop;": 2097, "ultri;": 2098, "umacr;": 2099, uml: 2100, "uml;": 2101, "uogon;": 2102, "uopf;": 2103, "uparrow;": 2104, "updownarrow;": 2105, "upharpoonleft;": 2106, "upharpoonright;": 2107, "uplus;": 2108, "upsi;": 2109, "upsih;": 2110, "upsilon;": 2111, "upuparrows;": 2112, "urcorn;": 2113, "urcorner;": 2114, "urcrop;": 2115, "uring;": 2116, "urtri;": 2117, "uscr;": 2118, "utdot;": 2119, "utilde;": 2120, "utri;": 2121, "utrif;": 2122, "uuarr;": 2123, uuml: 2124, "uuml;": 2125, "uwangle;": 2126, "vArr;": 2127, "vBar;": 2128, "vBarv;": 2129, "vDash;": 2130, "vangrt;": 2131, "varepsilon;": 2132, "varkappa;": 2133, "varnothing;": 2134, "varphi;": 2135, "varpi;": 2136, "varpropto;": 2137, "varr;": 2138, "varrho;": 2139, "varsigma;": 2140, "varsubsetneq;": 2141, "varsubsetneqq;": 2142, "varsupsetneq;": 2143, "varsupsetneqq;": 2144, "vartheta;": 2145, "vartriangleleft;": 2146, "vartriangleright;": 2147, "vcy;": 2148, "vdash;": 2149, "vee;": 2150, "veebar;": 2151, "veeeq;": 2152, "vellip;": 2153, "verbar;": 2154, "vert;": 2155, "vfr;": 2156, "vltri;": 2157, "vnsub;": 2158, "vnsup;": 2159, "vopf;": 2160, "vprop;": 2161, "vrtri;": 2162, "vscr;": 2163, "vsubnE;": 2164, "vsubne;": 2165, "vsupnE;": 2166, "vsupne;": 2167, "vzigzag;": 2168, "wcirc;": 2169, "wedbar;": 2170, "wedge;": 2171, "wedgeq;": 2172, "weierp;": 2173, "wfr;": 2174, "wopf;": 2175, "wp;": 2176, "wr;": 2177, "wreath;": 2178, "wscr;": 2179, "xcap;": 2180, "xcirc;": 2181, "xcup;": 2182, "xdtri;": 2183, "xfr;": 2184, "xhArr;": 2185, "xharr;": 2186, "xi;": 2187, "xlArr;": 2188, "xlarr;": 2189, "xmap;": 2190, "xnis;": 2191, "xodot;": 2192, "xopf;": 2193, "xoplus;": 2194, "xotime;": 2195, "xrArr;": 2196, "xrarr;": 2197, "xscr;": 2198, "xsqcup;": 2199, "xuplus;": 2200, "xutri;": 2201, "xvee;": 2202, "xwedge;": 2203, yacute: 2204, "yacute;": 2205, "yacy;": 2206, "ycirc;": 2207, "ycy;": 2208, yen: 2209, "yen;": 2210, "yfr;": 2211, "yicy;": 2212, "yopf;": 2213, "yscr;": 2214, "yucy;": 2215, yuml: 2216, "yuml;": 2217, "zacute;": 2218, "zcaron;": 2219, "zcy;": 2220, "zdot;": 2221, "zeetrf;": 2222, "zeta;": 2223, "zfr;": 2224, "zhcy;": 2225, "zigrarr;": 2226, "zopf;": 2227, "zscr;": 2228, "zwj;": 2229, "zwnj;": 2230};
    B.Map_kiql0 = new A.ConstantStringMap(B.Object_xO7, ["\xc6", "\xc6", "&", "&", "\xc1", "\xc1", "\u0102", "\xc2", "\xc2", "\u0410", "\ud835\udd04", "\xc0", "\xc0", "\u0391", "\u0100", "\u2a53", "\u0104", "\ud835\udd38", "\u2061", "\xc5", "\xc5", "\ud835\udc9c", "\u2254", "\xc3", "\xc3", "\xc4", "\xc4", "\u2216", "\u2ae7", "\u2306", "\u0411", "\u2235", "\u212c", "\u0392", "\ud835\udd05", "\ud835\udd39", "\u02d8", "\u212c", "\u224e", "\u0427", "\xa9", "\xa9", "\u0106", "\u22d2", "\u2145", "\u212d", "\u010c", "\xc7", "\xc7", "\u0108", "\u2230", "\u010a", "\xb8", "\xb7", "\u212d", "\u03a7", "\u2299", "\u2296", "\u2295", "\u2297", "\u2232", "\u201d", "\u2019", "\u2237", "\u2a74", "\u2261", "\u222f", "\u222e", "\u2102", "\u2210", "\u2233", "\u2a2f", "\ud835\udc9e", "\u22d3", "\u224d", "\u2145", "\u2911", "\u0402", "\u0405", "\u040f", "\u2021", "\u21a1", "\u2ae4", "\u010e", "\u0414", "\u2207", "\u0394", "\ud835\udd07", "\xb4", "\u02d9", "\u02dd", "`", "\u02dc", "\u22c4", "\u2146", "\ud835\udd3b", "\xa8", "\u20dc", "\u2250", "\u222f", "\xa8", "\u21d3", "\u21d0", "\u21d4", "\u2ae4", "\u27f8", "\u27fa", "\u27f9", "\u21d2", "\u22a8", "\u21d1", "\u21d5", "\u2225", "\u2193", "\u2913", "\u21f5", "\u0311", "\u2950", "\u295e", "\u21bd", "\u2956", "\u295f", "\u21c1", "\u2957", "\u22a4", "\u21a7", "\u21d3", "\ud835\udc9f", "\u0110", "\u014a", "\xd0", "\xd0", "\xc9", "\xc9", "\u011a", "\xca", "\xca", "\u042d", "\u0116", "\ud835\udd08", "\xc8", "\xc8", "\u2208", "\u0112", "\u25fb", "\u25ab", "\u0118", "\ud835\udd3c", "\u0395", "\u2a75", "\u2242", "\u21cc", "\u2130", "\u2a73", "\u0397", "\xcb", "\xcb", "\u2203", "\u2147", "\u0424", "\ud835\udd09", "\u25fc", "\u25aa", "\ud835\udd3d", "\u2200", "\u2131", "\u2131", "\u0403", ">", ">", "\u0393", "\u03dc", "\u011e", "\u0122", "\u011c", "\u0413", "\u0120", "\ud835\udd0a", "\u22d9", "\ud835\udd3e", "\u2265", "\u22db", "\u2267", "\u2aa2", "\u2277", "\u2a7e", "\u2273", "\ud835\udca2", "\u226b", "\u042a", "\u02c7", "^", "\u0124", "\u210c", "\u210b", "\u210d", "\u2500", "\u210b", "\u0126", "\u224e", "\u224f", "\u0415", "\u0132", "\u0401", "\xcd", "\xcd", "\xce", "\xce", "\u0418", "\u0130", "\u2111", "\xcc", "\xcc", "\u2111", "\u012a", "\u2148", "\u21d2", "\u222c", "\u222b", "\u22c2", "\u2063", "\u2062", "\u012e", "\ud835\udd40", "\u0399", "\u2110", "\u0128", "\u0406", "\xcf", "\xcf", "\u0134", "\u0419", "\ud835\udd0d", "\ud835\udd41", "\ud835\udca5", "\u0408", "\u0404", "\u0425", "\u040c", "\u039a", "\u0136", "\u041a", "\ud835\udd0e", "\ud835\udd42", "\ud835\udca6", "\u0409", "<", "<", "\u0139", "\u039b", "\u27ea", "\u2112", "\u219e", "\u013d", "\u013b", "\u041b", "\u27e8", "\u2190", "\u21e4", "\u21c6", "\u2308", "\u27e6", "\u2961", "\u21c3", "\u2959", "\u230a", "\u2194", "\u294e", "\u22a3", "\u21a4", "\u295a", "\u22b2", "\u29cf", "\u22b4", "\u2951", "\u2960", "\u21bf", "\u2958", "\u21bc", "\u2952", "\u21d0", "\u21d4", "\u22da", "\u2266", "\u2276", "\u2aa1", "\u2a7d", "\u2272", "\ud835\udd0f", "\u22d8", "\u21da", "\u013f", "\u27f5", "\u27f7", "\u27f6", "\u27f8", "\u27fa", "\u27f9", "\ud835\udd43", "\u2199", "\u2198", "\u2112", "\u21b0", "\u0141", "\u226a", "\u2905", "\u041c", "\u205f", "\u2133", "\ud835\udd10", "\u2213", "\ud835\udd44", "\u2133", "\u039c", "\u040a", "\u0143", "\u0147", "\u0145", "\u041d", "\u200b", "\u200b", "\u200b", "\u200b", "\u226b", "\u226a", "\n", "\ud835\udd11", "\u2060", "\xa0", "\u2115", "\u2aec", "\u2262", "\u226d", "\u2226", "\u2209", "\u2260", "\u2242\u0338", "\u2204", "\u226f", "\u2271", "\u2267\u0338", "\u226b\u0338", "\u2279", "\u2a7e\u0338", "\u2275", "\u224e\u0338", "\u224f\u0338", "\u22ea", "\u29cf\u0338", "\u22ec", "\u226e", "\u2270", "\u2278", "\u226a\u0338", "\u2a7d\u0338", "\u2274", "\u2aa2\u0338", "\u2aa1\u0338", "\u2280", "\u2aaf\u0338", "\u22e0", "\u220c", "\u22eb", "\u29d0\u0338", "\u22ed", "\u228f\u0338", "\u22e2", "\u2290\u0338", "\u22e3", "\u2282\u20d2", "\u2288", "\u2281", "\u2ab0\u0338", "\u22e1", "\u227f\u0338", "\u2283\u20d2", "\u2289", "\u2241", "\u2244", "\u2247", "\u2249", "\u2224", "\ud835\udca9", "\xd1", "\xd1", "\u039d", "\u0152", "\xd3", "\xd3", "\xd4", "\xd4", "\u041e", "\u0150", "\ud835\udd12", "\xd2", "\xd2", "\u014c", "\u03a9", "\u039f", "\ud835\udd46", "\u201c", "\u2018", "\u2a54", "\ud835\udcaa", "\xd8", "\xd8", "\xd5", "\xd5", "\u2a37", "\xd6", "\xd6", "\u203e", "\u23de", "\u23b4", "\u23dc", "\u2202", "\u041f", "\ud835\udd13", "\u03a6", "\u03a0", "\xb1", "\u210c", "\u2119", "\u2abb", "\u227a", "\u2aaf", "\u227c", "\u227e", "\u2033", "\u220f", "\u2237", "\u221d", "\ud835\udcab", "\u03a8", '"', '"', "\ud835\udd14", "\u211a", "\ud835\udcac", "\u2910", "\xae", "\xae", "\u0154", "\u27eb", "\u21a0", "\u2916", "\u0158", "\u0156", "\u0420", "\u211c", "\u220b", "\u21cb", "\u296f", "\u211c", "\u03a1", "\u27e9", "\u2192", "\u21e5", "\u21c4", "\u2309", "\u27e7", "\u295d", "\u21c2", "\u2955", "\u230b", "\u22a2", "\u21a6", "\u295b", "\u22b3", "\u29d0", "\u22b5", "\u294f", "\u295c", "\u21be", "\u2954", "\u21c0", "\u2953", "\u21d2", "\u211d", "\u2970", "\u21db", "\u211b", "\u21b1", "\u29f4", "\u0429", "\u0428", "\u042c", "\u015a", "\u2abc", "\u0160", "\u015e", "\u015c", "\u0421", "\ud835\udd16", "\u2193", "\u2190", "\u2192", "\u2191", "\u03a3", "\u2218", "\ud835\udd4a", "\u221a", "\u25a1", "\u2293", "\u228f", "\u2291", "\u2290", "\u2292", "\u2294", "\ud835\udcae", "\u22c6", "\u22d0", "\u22d0", "\u2286", "\u227b", "\u2ab0", "\u227d", "\u227f", "\u220b", "\u2211", "\u22d1", "\u2283", "\u2287", "\u22d1", "\xde", "\xde", "\u2122", "\u040b", "\u0426", "\t", "\u03a4", "\u0164", "\u0162", "\u0422", "\ud835\udd17", "\u2234", "\u0398", "\u205f\u200a", "\u2009", "\u223c", "\u2243", "\u2245", "\u2248", "\ud835\udd4b", "\u20db", "\ud835\udcaf", "\u0166", "\xda", "\xda", "\u219f", "\u2949", "\u040e", "\u016c", "\xdb", "\xdb", "\u0423", "\u0170", "\ud835\udd18", "\xd9", "\xd9", "\u016a", "_", "\u23df", "\u23b5", "\u23dd", "\u22c3", "\u228e", "\u0172", "\ud835\udd4c", "\u2191", "\u2912", "\u21c5", "\u2195", "\u296e", "\u22a5", "\u21a5", "\u21d1", "\u21d5", "\u2196", "\u2197", "\u03d2", "\u03a5", "\u016e", "\ud835\udcb0", "\u0168", "\xdc", "\xdc", "\u22ab", "\u2aeb", "\u0412", "\u22a9", "\u2ae6", "\u22c1", "\u2016", "\u2016", "\u2223", "|", "\u2758", "\u2240", "\u200a", "\ud835\udd19", "\ud835\udd4d", "\ud835\udcb1", "\u22aa", "\u0174", "\u22c0", "\ud835\udd1a", "\ud835\udd4e", "\ud835\udcb2", "\ud835\udd1b", "\u039e", "\ud835\udd4f", "\ud835\udcb3", "\u042f", "\u0407", "\u042e", "\xdd", "\xdd", "\u0176", "\u042b", "\ud835\udd1c", "\ud835\udd50", "\ud835\udcb4", "\u0178", "\u0416", "\u0179", "\u017d", "\u0417", "\u017b", "\u200b", "\u0396", "\u2128", "\u2124", "\ud835\udcb5", "\xe1", "\xe1", "\u0103", "\u223e", "\u223e\u0333", "\u223f", "\xe2", "\xe2", "\xb4", "\xb4", "\u0430", "\xe6", "\xe6", "\u2061", "\ud835\udd1e", "\xe0", "\xe0", "\u2135", "\u2135", "\u03b1", "\u0101", "\u2a3f", "&", "&", "\u2227", "\u2a55", "\u2a5c", "\u2a58", "\u2a5a", "\u2220", "\u29a4", "\u2220", "\u2221", "\u29a8", "\u29a9", "\u29aa", "\u29ab", "\u29ac", "\u29ad", "\u29ae", "\u29af", "\u221f", "\u22be", "\u299d", "\u2222", "\xc5", "\u237c", "\u0105", "\ud835\udd52", "\u2248", "\u2a70", "\u2a6f", "\u224a", "\u224b", "'", "\u2248", "\u224a", "\xe5", "\xe5", "\ud835\udcb6", "*", "\u2248", "\u224d", "\xe3", "\xe3", "\xe4", "\xe4", "\u2233", "\u2a11", "\u2aed", "\u224c", "\u03f6", "\u2035", "\u223d", "\u22cd", "\u22bd", "\u2305", "\u2305", "\u23b5", "\u23b6", "\u224c", "\u0431", "\u201e", "\u2235", "\u2235", "\u29b0", "\u03f6", "\u212c", "\u03b2", "\u2136", "\u226c", "\ud835\udd1f", "\u22c2", "\u25ef", "\u22c3", "\u2a00", "\u2a01", "\u2a02", "\u2a06", "\u2605", "\u25bd", "\u25b3", "\u2a04", "\u22c1", "\u22c0", "\u290d", "\u29eb", "\u25aa", "\u25b4", "\u25be", "\u25c2", "\u25b8", "\u2423", "\u2592", "\u2591", "\u2593", "\u2588", "=\u20e5", "\u2261\u20e5", "\u2310", "\ud835\udd53", "\u22a5", "\u22a5", "\u22c8", "\u2557", "\u2554", "\u2556", "\u2553", "\u2550", "\u2566", "\u2569", "\u2564", "\u2567", "\u255d", "\u255a", "\u255c", "\u2559", "\u2551", "\u256c", "\u2563", "\u2560", "\u256b", "\u2562", "\u255f", "\u29c9", "\u2555", "\u2552", "\u2510", "\u250c", "\u2500", "\u2565", "\u2568", "\u252c", "\u2534", "\u229f", "\u229e", "\u22a0", "\u255b", "\u2558", "\u2518", "\u2514", "\u2502", "\u256a", "\u2561", "\u255e", "\u253c", "\u2524", "\u251c", "\u2035", "\u02d8", "\xa6", "\xa6", "\ud835\udcb7", "\u204f", "\u223d", "\u22cd", "\\", "\u29c5", "\u27c8", "\u2022", "\u2022", "\u224e", "\u2aae", "\u224f", "\u224f", "\u0107", "\u2229", "\u2a44", "\u2a49", "\u2a4b", "\u2a47", "\u2a40", "\u2229\ufe00", "\u2041", "\u02c7", "\u2a4d", "\u010d", "\xe7", "\xe7", "\u0109", "\u2a4c", "\u2a50", "\u010b", "\xb8", "\xb8", "\u29b2", "\xa2", "\xa2", "\xb7", "\ud835\udd20", "\u0447", "\u2713", "\u2713", "\u03c7", "\u25cb", "\u29c3", "\u02c6", "\u2257", "\u21ba", "\u21bb", "\xae", "\u24c8", "\u229b", "\u229a", "\u229d", "\u2257", "\u2a10", "\u2aef", "\u29c2", "\u2663", "\u2663", ":", "\u2254", "\u2254", ",", "@", "\u2201", "\u2218", "\u2201", "\u2102", "\u2245", "\u2a6d", "\u222e", "\ud835\udd54", "\u2210", "\xa9", "\xa9", "\u2117", "\u21b5", "\u2717", "\ud835\udcb8", "\u2acf", "\u2ad1", "\u2ad0", "\u2ad2", "\u22ef", "\u2938", "\u2935", "\u22de", "\u22df", "\u21b6", "\u293d", "\u222a", "\u2a48", "\u2a46", "\u2a4a", "\u228d", "\u2a45", "\u222a\ufe00", "\u21b7", "\u293c", "\u22de", "\u22df", "\u22ce", "\u22cf", "\xa4", "\xa4", "\u21b6", "\u21b7", "\u22ce", "\u22cf", "\u2232", "\u2231", "\u232d", "\u21d3", "\u2965", "\u2020", "\u2138", "\u2193", "\u2010", "\u22a3", "\u290f", "\u02dd", "\u010f", "\u0434", "\u2146", "\u2021", "\u21ca", "\u2a77", "\xb0", "\xb0", "\u03b4", "\u29b1", "\u297f", "\ud835\udd21", "\u21c3", "\u21c2", "\u22c4", "\u22c4", "\u2666", "\u2666", "\xa8", "\u03dd", "\u22f2", "\xf7", "\xf7", "\xf7", "\u22c7", "\u22c7", "\u0452", "\u231e", "\u230d", "$", "\ud835\udd55", "\u02d9", "\u2250", "\u2251", "\u2238", "\u2214", "\u22a1", "\u2306", "\u2193", "\u21ca", "\u21c3", "\u21c2", "\u2910", "\u231f", "\u230c", "\ud835\udcb9", "\u0455", "\u29f6", "\u0111", "\u22f1", "\u25bf", "\u25be", "\u21f5", "\u296f", "\u29a6", "\u045f", "\u27ff", "\u2a77", "\u2251", "\xe9", "\xe9", "\u2a6e", "\u011b", "\u2256", "\xea", "\xea", "\u2255", "\u044d", "\u0117", "\u2147", "\u2252", "\ud835\udd22", "\u2a9a", "\xe8", "\xe8", "\u2a96", "\u2a98", "\u2a99", "\u23e7", "\u2113", "\u2a95", "\u2a97", "\u0113", "\u2205", "\u2205", "\u2205", "\u2004", "\u2005", "\u2003", "\u014b", "\u2002", "\u0119", "\ud835\udd56", "\u22d5", "\u29e3", "\u2a71", "\u03b5", "\u03b5", "\u03f5", "\u2256", "\u2255", "\u2242", "\u2a96", "\u2a95", "=", "\u225f", "\u2261", "\u2a78", "\u29e5", "\u2253", "\u2971", "\u212f", "\u2250", "\u2242", "\u03b7", "\xf0", "\xf0", "\xeb", "\xeb", "\u20ac", "!", "\u2203", "\u2130", "\u2147", "\u2252", "\u0444", "\u2640", "\ufb03", "\ufb00", "\ufb04", "\ud835\udd23", "\ufb01", "fj", "\u266d", "\ufb02", "\u25b1", "\u0192", "\ud835\udd57", "\u2200", "\u22d4", "\u2ad9", "\u2a0d", "\xbd", "\xbd", "\u2153", "\xbc", "\xbc", "\u2155", "\u2159", "\u215b", "\u2154", "\u2156", "\xbe", "\xbe", "\u2157", "\u215c", "\u2158", "\u215a", "\u215d", "\u215e", "\u2044", "\u2322", "\ud835\udcbb", "\u2267", "\u2a8c", "\u01f5", "\u03b3", "\u03dd", "\u2a86", "\u011f", "\u011d", "\u0433", "\u0121", "\u2265", "\u22db", "\u2265", "\u2267", "\u2a7e", "\u2a7e", "\u2aa9", "\u2a80", "\u2a82", "\u2a84", "\u22db\ufe00", "\u2a94", "\ud835\udd24", "\u226b", "\u22d9", "\u2137", "\u0453", "\u2277", "\u2a92", "\u2aa5", "\u2aa4", "\u2269", "\u2a8a", "\u2a8a", "\u2a88", "\u2a88", "\u2269", "\u22e7", "\ud835\udd58", "`", "\u210a", "\u2273", "\u2a8e", "\u2a90", ">", ">", "\u2aa7", "\u2a7a", "\u22d7", "\u2995", "\u2a7c", "\u2a86", "\u2978", "\u22d7", "\u22db", "\u2a8c", "\u2277", "\u2273", "\u2269\ufe00", "\u2269\ufe00", "\u21d4", "\u200a", "\xbd", "\u210b", "\u044a", "\u2194", "\u2948", "\u21ad", "\u210f", "\u0125", "\u2665", "\u2665", "\u2026", "\u22b9", "\ud835\udd25", "\u2925", "\u2926", "\u21ff", "\u223b", "\u21a9", "\u21aa", "\ud835\udd59", "\u2015", "\ud835\udcbd", "\u210f", "\u0127", "\u2043", "\u2010", "\xed", "\xed", "\u2063", "\xee", "\xee", "\u0438", "\u0435", "\xa1", "\xa1", "\u21d4", "\ud835\udd26", "\xec", "\xec", "\u2148", "\u2a0c", "\u222d", "\u29dc", "\u2129", "\u0133", "\u012b", "\u2111", "\u2110", "\u2111", "\u0131", "\u22b7", "\u01b5", "\u2208", "\u2105", "\u221e", "\u29dd", "\u0131", "\u222b", "\u22ba", "\u2124", "\u22ba", "\u2a17", "\u2a3c", "\u0451", "\u012f", "\ud835\udd5a", "\u03b9", "\u2a3c", "\xbf", "\xbf", "\ud835\udcbe", "\u2208", "\u22f9", "\u22f5", "\u22f4", "\u22f3", "\u2208", "\u2062", "\u0129", "\u0456", "\xef", "\xef", "\u0135", "\u0439", "\ud835\udd27", "\u0237", "\ud835\udd5b", "\ud835\udcbf", "\u0458", "\u0454", "\u03ba", "\u03f0", "\u0137", "\u043a", "\ud835\udd28", "\u0138", "\u0445", "\u045c", "\ud835\udd5c", "\ud835\udcc0", "\u21da", "\u21d0", "\u291b", "\u290e", "\u2266", "\u2a8b", "\u2962", "\u013a", "\u29b4", "\u2112", "\u03bb", "\u27e8", "\u2991", "\u27e8", "\u2a85", "\xab", "\xab", "\u2190", "\u21e4", "\u291f", "\u291d", "\u21a9", "\u21ab", "\u2939", "\u2973", "\u21a2", "\u2aab", "\u2919", "\u2aad", "\u2aad\ufe00", "\u290c", "\u2772", "{", "[", "\u298b", "\u298f", "\u298d", "\u013e", "\u013c", "\u2308", "{", "\u043b", "\u2936", "\u201c", "\u201e", "\u2967", "\u294b", "\u21b2", "\u2264", "\u2190", "\u21a2", "\u21bd", "\u21bc", "\u21c7", "\u2194", "\u21c6", "\u21cb", "\u21ad", "\u22cb", "\u22da", "\u2264", "\u2266", "\u2a7d", "\u2a7d", "\u2aa8", "\u2a7f", "\u2a81", "\u2a83", "\u22da\ufe00", "\u2a93", "\u2a85", "\u22d6", "\u22da", "\u2a8b", "\u2276", "\u2272", "\u297c", "\u230a", "\ud835\udd29", "\u2276", "\u2a91", "\u21bd", "\u21bc", "\u296a", "\u2584", "\u0459", "\u226a", "\u21c7", "\u231e", "\u296b", "\u25fa", "\u0140", "\u23b0", "\u23b0", "\u2268", "\u2a89", "\u2a89", "\u2a87", "\u2a87", "\u2268", "\u22e6", "\u27ec", "\u21fd", "\u27e6", "\u27f5", "\u27f7", "\u27fc", "\u27f6", "\u21ab", "\u21ac", "\u2985", "\ud835\udd5d", "\u2a2d", "\u2a34", "\u2217", "_", "\u25ca", "\u25ca", "\u29eb", "(", "\u2993", "\u21c6", "\u231f", "\u21cb", "\u296d", "\u200e", "\u22bf", "\u2039", "\ud835\udcc1", "\u21b0", "\u2272", "\u2a8d", "\u2a8f", "[", "\u2018", "\u201a", "\u0142", "<", "<", "\u2aa6", "\u2a79", "\u22d6", "\u22cb", "\u22c9", "\u2976", "\u2a7b", "\u2996", "\u25c3", "\u22b4", "\u25c2", "\u294a", "\u2966", "\u2268\ufe00", "\u2268\ufe00", "\u223a", "\xaf", "\xaf", "\u2642", "\u2720", "\u2720", "\u21a6", "\u21a6", "\u21a7", "\u21a4", "\u21a5", "\u25ae", "\u2a29", "\u043c", "\u2014", "\u2221", "\ud835\udd2a", "\u2127", "\xb5", "\xb5", "\u2223", "*", "\u2af0", "\xb7", "\xb7", "\u2212", "\u229f", "\u2238", "\u2a2a", "\u2adb", "\u2026", "\u2213", "\u22a7", "\ud835\udd5e", "\u2213", "\ud835\udcc2", "\u223e", "\u03bc", "\u22b8", "\u22b8", "\u22d9\u0338", "\u226b\u20d2", "\u226b\u0338", "\u21cd", "\u21ce", "\u22d8\u0338", "\u226a\u20d2", "\u226a\u0338", "\u21cf", "\u22af", "\u22ae", "\u2207", "\u0144", "\u2220\u20d2", "\u2249", "\u2a70\u0338", "\u224b\u0338", "\u0149", "\u2249", "\u266e", "\u266e", "\u2115", "\xa0", "\xa0", "\u224e\u0338", "\u224f\u0338", "\u2a43", "\u0148", "\u0146", "\u2247", "\u2a6d\u0338", "\u2a42", "\u043d", "\u2013", "\u2260", "\u21d7", "\u2924", "\u2197", "\u2197", "\u2250\u0338", "\u2262", "\u2928", "\u2242\u0338", "\u2204", "\u2204", "\ud835\udd2b", "\u2267\u0338", "\u2271", "\u2271", "\u2267\u0338", "\u2a7e\u0338", "\u2a7e\u0338", "\u2275", "\u226f", "\u226f", "\u21ce", "\u21ae", "\u2af2", "\u220b", "\u22fc", "\u22fa", "\u220b", "\u045a", "\u21cd", "\u2266\u0338", "\u219a", "\u2025", "\u2270", "\u219a", "\u21ae", "\u2270", "\u2266\u0338", "\u2a7d\u0338", "\u2a7d\u0338", "\u226e", "\u2274", "\u226e", "\u22ea", "\u22ec", "\u2224", "\ud835\udd5f", "\xac", "\xac", "\u2209", "\u22f9\u0338", "\u22f5\u0338", "\u2209", "\u22f7", "\u22f6", "\u220c", "\u220c", "\u22fe", "\u22fd", "\u2226", "\u2226", "\u2afd\u20e5", "\u2202\u0338", "\u2a14", "\u2280", "\u22e0", "\u2aaf\u0338", "\u2280", "\u2aaf\u0338", "\u21cf", "\u219b", "\u2933\u0338", "\u219d\u0338", "\u219b", "\u22eb", "\u22ed", "\u2281", "\u22e1", "\u2ab0\u0338", "\ud835\udcc3", "\u2224", "\u2226", "\u2241", "\u2244", "\u2244", "\u2224", "\u2226", "\u22e2", "\u22e3", "\u2284", "\u2ac5\u0338", "\u2288", "\u2282\u20d2", "\u2288", "\u2ac5\u0338", "\u2281", "\u2ab0\u0338", "\u2285", "\u2ac6\u0338", "\u2289", "\u2283\u20d2", "\u2289", "\u2ac6\u0338", "\u2279", "\xf1", "\xf1", "\u2278", "\u22ea", "\u22ec", "\u22eb", "\u22ed", "\u03bd", "#", "\u2116", "\u2007", "\u22ad", "\u2904", "\u224d\u20d2", "\u22ac", "\u2265\u20d2", ">\u20d2", "\u29de", "\u2902", "\u2264\u20d2", "<\u20d2", "\u22b4\u20d2", "\u2903", "\u22b5\u20d2", "\u223c\u20d2", "\u21d6", "\u2923", "\u2196", "\u2196", "\u2927", "\u24c8", "\xf3", "\xf3", "\u229b", "\u229a", "\xf4", "\xf4", "\u043e", "\u229d", "\u0151", "\u2a38", "\u2299", "\u29bc", "\u0153", "\u29bf", "\ud835\udd2c", "\u02db", "\xf2", "\xf2", "\u29c1", "\u29b5", "\u03a9", "\u222e", "\u21ba", "\u29be", "\u29bb", "\u203e", "\u29c0", "\u014d", "\u03c9", "\u03bf", "\u29b6", "\u2296", "\ud835\udd60", "\u29b7", "\u29b9", "\u2295", "\u2228", "\u21bb", "\u2a5d", "\u2134", "\u2134", "\xaa", "\xaa", "\xba", "\xba", "\u22b6", "\u2a56", "\u2a57", "\u2a5b", "\u2134", "\xf8", "\xf8", "\u2298", "\xf5", "\xf5", "\u2297", "\u2a36", "\xf6", "\xf6", "\u233d", "\u2225", "\xb6", "\xb6", "\u2225", "\u2af3", "\u2afd", "\u2202", "\u043f", "%", ".", "\u2030", "\u22a5", "\u2031", "\ud835\udd2d", "\u03c6", "\u03d5", "\u2133", "\u260e", "\u03c0", "\u22d4", "\u03d6", "\u210f", "\u210e", "\u210f", "+", "\u2a23", "\u229e", "\u2a22", "\u2214", "\u2a25", "\u2a72", "\xb1", "\xb1", "\u2a26", "\u2a27", "\xb1", "\u2a15", "\ud835\udd61", "\xa3", "\xa3", "\u227a", "\u2ab3", "\u2ab7", "\u227c", "\u2aaf", "\u227a", "\u2ab7", "\u227c", "\u2aaf", "\u2ab9", "\u2ab5", "\u22e8", "\u227e", "\u2032", "\u2119", "\u2ab5", "\u2ab9", "\u22e8", "\u220f", "\u232e", "\u2312", "\u2313", "\u221d", "\u221d", "\u227e", "\u22b0", "\ud835\udcc5", "\u03c8", "\u2008", "\ud835\udd2e", "\u2a0c", "\ud835\udd62", "\u2057", "\ud835\udcc6", "\u210d", "\u2a16", "?", "\u225f", '"', '"', "\u21db", "\u21d2", "\u291c", "\u290f", "\u2964", "\u223d\u0331", "\u0155", "\u221a", "\u29b3", "\u27e9", "\u2992", "\u29a5", "\u27e9", "\xbb", "\xbb", "\u2192", "\u2975", "\u21e5", "\u2920", "\u2933", "\u291e", "\u21aa", "\u21ac", "\u2945", "\u2974", "\u21a3", "\u219d", "\u291a", "\u2236", "\u211a", "\u290d", "\u2773", "}", "]", "\u298c", "\u298e", "\u2990", "\u0159", "\u0157", "\u2309", "}", "\u0440", "\u2937", "\u2969", "\u201d", "\u201d", "\u21b3", "\u211c", "\u211b", "\u211c", "\u211d", "\u25ad", "\xae", "\xae", "\u297d", "\u230b", "\ud835\udd2f", "\u21c1", "\u21c0", "\u296c", "\u03c1", "\u03f1", "\u2192", "\u21a3", "\u21c1", "\u21c0", "\u21c4", "\u21cc", "\u21c9", "\u219d", "\u22cc", "\u02da", "\u2253", "\u21c4", "\u21cc", "\u200f", "\u23b1", "\u23b1", "\u2aee", "\u27ed", "\u21fe", "\u27e7", "\u2986", "\ud835\udd63", "\u2a2e", "\u2a35", ")", "\u2994", "\u2a12", "\u21c9", "\u203a", "\ud835\udcc7", "\u21b1", "]", "\u2019", "\u2019", "\u22cc", "\u22ca", "\u25b9", "\u22b5", "\u25b8", "\u29ce", "\u2968", "\u211e", "\u015b", "\u201a", "\u227b", "\u2ab4", "\u2ab8", "\u0161", "\u227d", "\u2ab0", "\u015f", "\u015d", "\u2ab6", "\u2aba", "\u22e9", "\u2a13", "\u227f", "\u0441", "\u22c5", "\u22a1", "\u2a66", "\u21d8", "\u2925", "\u2198", "\u2198", "\xa7", "\xa7", ";", "\u2929", "\u2216", "\u2216", "\u2736", "\ud835\udd30", "\u2322", "\u266f", "\u0449", "\u0448", "\u2223", "\u2225", "\xad", "\xad", "\u03c3", "\u03c2", "\u03c2", "\u223c", "\u2a6a", "\u2243", "\u2243", "\u2a9e", "\u2aa0", "\u2a9d", "\u2a9f", "\u2246", "\u2a24", "\u2972", "\u2190", "\u2216", "\u2a33", "\u29e4", "\u2223", "\u2323", "\u2aaa", "\u2aac", "\u2aac\ufe00", "\u044c", "/", "\u29c4", "\u233f", "\ud835\udd64", "\u2660", "\u2660", "\u2225", "\u2293", "\u2293\ufe00", "\u2294", "\u2294\ufe00", "\u228f", "\u2291", "\u228f", "\u2291", "\u2290", "\u2292", "\u2290", "\u2292", "\u25a1", "\u25a1", "\u25aa", "\u25aa", "\u2192", "\ud835\udcc8", "\u2216", "\u2323", "\u22c6", "\u2606", "\u2605", "\u03f5", "\u03d5", "\xaf", "\u2282", "\u2ac5", "\u2abd", "\u2286", "\u2ac3", "\u2ac1", "\u2acb", "\u228a", "\u2abf", "\u2979", "\u2282", "\u2286", "\u2ac5", "\u228a", "\u2acb", "\u2ac7", "\u2ad5", "\u2ad3", "\u227b", "\u2ab8", "\u227d", "\u2ab0", "\u2aba", "\u2ab6", "\u22e9", "\u227f", "\u2211", "\u266a", "\xb9", "\xb9", "\xb2", "\xb2", "\xb3", "\xb3", "\u2283", "\u2ac6", "\u2abe", "\u2ad8", "\u2287", "\u2ac4", "\u27c9", "\u2ad7", "\u297b", "\u2ac2", "\u2acc", "\u228b", "\u2ac0", "\u2283", "\u2287", "\u2ac6", "\u228b", "\u2acc", "\u2ac8", "\u2ad4", "\u2ad6", "\u21d9", "\u2926", "\u2199", "\u2199", "\u292a", "\xdf", "\xdf", "\u2316", "\u03c4", "\u23b4", "\u0165", "\u0163", "\u0442", "\u20db", "\u2315", "\ud835\udd31", "\u2234", "\u2234", "\u03b8", "\u03d1", "\u03d1", "\u2248", "\u223c", "\u2009", "\u2248", "\u223c", "\xfe", "\xfe", "\u02dc", "\xd7", "\xd7", "\u22a0", "\u2a31", "\u2a30", "\u222d", "\u2928", "\u22a4", "\u2336", "\u2af1", "\ud835\udd65", "\u2ada", "\u2929", "\u2034", "\u2122", "\u25b5", "\u25bf", "\u25c3", "\u22b4", "\u225c", "\u25b9", "\u22b5", "\u25ec", "\u225c", "\u2a3a", "\u2a39", "\u29cd", "\u2a3b", "\u23e2", "\ud835\udcc9", "\u0446", "\u045b", "\u0167", "\u226c", "\u219e", "\u21a0", "\u21d1", "\u2963", "\xfa", "\xfa", "\u2191", "\u045e", "\u016d", "\xfb", "\xfb", "\u0443", "\u21c5", "\u0171", "\u296e", "\u297e", "\ud835\udd32", "\xf9", "\xf9", "\u21bf", "\u21be", "\u2580", "\u231c", "\u231c", "\u230f", "\u25f8", "\u016b", "\xa8", "\xa8", "\u0173", "\ud835\udd66", "\u2191", "\u2195", "\u21bf", "\u21be", "\u228e", "\u03c5", "\u03d2", "\u03c5", "\u21c8", "\u231d", "\u231d", "\u230e", "\u016f", "\u25f9", "\ud835\udcca", "\u22f0", "\u0169", "\u25b5", "\u25b4", "\u21c8", "\xfc", "\xfc", "\u29a7", "\u21d5", "\u2ae8", "\u2ae9", "\u22a8", "\u299c", "\u03f5", "\u03f0", "\u2205", "\u03d5", "\u03d6", "\u221d", "\u2195", "\u03f1", "\u03c2", "\u228a\ufe00", "\u2acb\ufe00", "\u228b\ufe00", "\u2acc\ufe00", "\u03d1", "\u22b2", "\u22b3", "\u0432", "\u22a2", "\u2228", "\u22bb", "\u225a", "\u22ee", "|", "|", "\ud835\udd33", "\u22b2", "\u2282\u20d2", "\u2283\u20d2", "\ud835\udd67", "\u221d", "\u22b3", "\ud835\udccb", "\u2acb\ufe00", "\u228a\ufe00", "\u2acc\ufe00", "\u228b\ufe00", "\u299a", "\u0175", "\u2a5f", "\u2227", "\u2259", "\u2118", "\ud835\udd34", "\ud835\udd68", "\u2118", "\u2240", "\u2240", "\ud835\udccc", "\u22c2", "\u25ef", "\u22c3", "\u25bd", "\ud835\udd35", "\u27fa", "\u27f7", "\u03be", "\u27f8", "\u27f5", "\u27fc", "\u22fb", "\u2a00", "\ud835\udd69", "\u2a01", "\u2a02", "\u27f9", "\u27f6", "\ud835\udccd", "\u2a06", "\u2a04", "\u25b3", "\u22c1", "\u22c0", "\xfd", "\xfd", "\u044f", "\u0177", "\u044b", "\xa5", "\xa5", "\ud835\udd36", "\u0457", "\ud835\udd6a", "\ud835\udcce", "\u044e", "\xff", "\xff", "\u017a", "\u017e", "\u0437", "\u017c", "\u2128", "\u03b6", "\ud835\udd37", "\u0436", "\u21dd", "\ud835\udd6b", "\ud835\udccf", "\u200d", "\u200c"], type$.ConstantStringMap_String_String);
    B.Object_EWB = {"null-character": 0, "invalid-codepoint": 1, "incorrectly-placed-solidus": 2, "incorrect-cr-newline-entity": 3, "illegal-windows-1252-entity": 4, "cant-convert-numeric-entity": 5, "illegal-codepoint-for-numeric-entity": 6, "numeric-entity-without-semicolon": 7, "expected-numeric-entity-but-got-eof": 8, "expected-numeric-entity": 9, "named-entity-without-semicolon": 10, "expected-named-entity": 11, "attributes-in-end-tag": 12, "self-closing-flag-on-end-tag": 13, "expected-tag-name-but-got-right-bracket": 14, "expected-tag-name-but-got-question-mark": 15, "expected-tag-name": 16, [string$.expectc]: 17, "expected-closing-tag-but-got-eof": 18, "expected-closing-tag-but-got-char": 19, "eof-in-tag-name": 20, "expected-attribute-name-but-got-eof": 21, "eof-in-attribute-name": 22, "invalid-character-in-attribute-name": 23, "duplicate-attribute": 24, "expected-end-of-tag-name-but-got-eof": 25, "expected-attribute-value-but-got-eof": 26, [string$.expecta]: 27, "equals-in-unquoted-attribute-value": 28, [string$.unexpeci]: 29, "invalid-character-after-attribute-name": 30, [string$.unexpecaa]: 31, "eof-in-attribute-value-double-quote": 32, "eof-in-attribute-value-single-quote": 33, "eof-in-attribute-value-no-quotes": 34, "unexpected-EOF-after-solidus-in-tag": 35, [string$.unexpecas]: 36, "expected-dashes-or-doctype": 37, [string$.unexpeb]: 38, "unexpected-space-after-double-dash-in-comment": 39, "incorrect-comment": 40, "eof-in-comment": 41, "eof-in-comment-end-dash": 42, [string$.unexped]: 43, "eof-in-comment-double-dash": 44, "eof-in-comment-end-space-state": 45, "eof-in-comment-end-bang-state": 46, "unexpected-char-in-comment": 47, "need-space-after-doctype": 48, [string$.expectd]: 49, "expected-doctype-name-but-got-eof": 50, "eof-in-doctype-name": 51, "eof-in-doctype": 52, [string$.expects]: 53, "unexpected-end-of-doctype": 54, "unexpected-char-in-doctype": 55, "eof-in-innerhtml": 56, "unexpected-doctype": 57, "non-html-root": 58, "expected-doctype-but-got-eof": 59, "unknown-doctype": 60, "expected-doctype-but-got-chars": 61, "expected-doctype-but-got-start-tag": 62, "expected-doctype-but-got-end-tag": 63, "end-tag-after-implied-root": 64, "expected-named-closing-tag-but-got-eof": 65, "two-heads-are-not-better-than-one": 66, "unexpected-end-tag": 67, "unexpected-start-tag-out-of-my-head": 68, "unexpected-start-tag": 69, "missing-end-tag": 70, "missing-end-tags": 71, "unexpected-start-tag-implies-end-tag": 72, "unexpected-start-tag-treated-as": 73, "deprecated-tag": 74, "unexpected-start-tag-ignored": 75, "expected-one-end-tag-but-got-another": 76, "end-tag-too-early": 77, "end-tag-too-early-named": 78, "end-tag-too-early-ignored": 79, "adoption-agency-1.1": 80, "adoption-agency-1.2": 81, "adoption-agency-1.3": 82, "unexpected-end-tag-treated-as": 83, "no-end-tag": 84, "unexpected-implied-end-tag-in-table": 85, "unexpected-implied-end-tag-in-table-body": 86, "unexpected-char-implies-table-voodoo": 87, "unexpected-hidden-input-in-table": 88, "unexpected-form-in-table": 89, [string$.unexpes]: 90, "unexpected-end-tag-implies-table-voodoo": 91, "unexpected-cell-in-table-body": 92, "unexpected-cell-end-tag": 93, "unexpected-end-tag-in-table-body": 94, "unexpected-implied-end-tag-in-table-row": 95, "unexpected-end-tag-in-table-row": 96, "unexpected-select-in-select": 97, "unexpected-input-in-select": 98, "unexpected-start-tag-in-select": 99, "unexpected-end-tag-in-select": 100, [string$.unexpets]: 101, [string$.unexpete]: 102, "unexpected-char-after-body": 103, "unexpected-start-tag-after-body": 104, "unexpected-end-tag-after-body": 105, "unexpected-char-in-frameset": 106, "unexpected-start-tag-in-frameset": 107, [string$.unexpef]: 108, "unexpected-end-tag-in-frameset": 109, "unexpected-char-after-frameset": 110, "unexpected-start-tag-after-frameset": 111, "unexpected-end-tag-after-frameset": 112, "unexpected-end-tag-after-body-innerhtml": 113, "expected-eof-but-got-char": 114, "expected-eof-but-got-start-tag": 115, "expected-eof-but-got-end-tag": 116, "eof-in-table": 117, "eof-in-select": 118, "eof-in-frameset": 119, "eof-in-script-in-script": 120, "eof-in-foreign-lands": 121, "non-void-element-with-trailing-solidus": 122, [string$.unexpeh]: 123, "unexpected-end-tag-before-html": 124, "undefined-error": 125};
    B.Map_yfGJk = new A.ConstantStringMap(B.Object_EWB, ["Null character in input stream, replaced with U+FFFD.", "Invalid codepoint in stream.", "Solidus (/) incorrectly placed in tag.", "Incorrect CR newline entity, replaced with LF.", "Entity used with illegal number (windows-1252 reference).", "Numeric entity couldn't be converted to character (codepoint U+%(charAsInt)08x).", "Numeric entity represents an illegal codepoint: U+%(charAsInt)08x.", "Numeric entity didn't end with ';'.", "Numeric entity expected. Got end of file instead.", "Numeric entity expected but none found.", "Named entity didn't end with ';'.", "Named entity expected. Got none.", "End tag contains unexpected attributes.", "End tag contains unexpected self-closing flag.", "Expected tag name. Got '>' instead.", "Expected tag name. Got '?' instead. (HTML doesn't support processing instructions.)", "Expected tag name. Got something else instead", "Expected closing tag. Got '>' instead. Ignoring '</>'.", "Expected closing tag. Unexpected end of file.", "Expected closing tag. Unexpected character '%(data)s' found.", "Unexpected end of file in the tag name.", "Unexpected end of file. Expected attribute name instead.", "Unexpected end of file in attribute name.", "Invalid character in attribute name", "Dropped duplicate attribute on tag.", "Unexpected end of file. Expected = or end of tag.", "Unexpected end of file. Expected attribute value.", "Expected attribute value. Got '>' instead.", "Unexpected = in unquoted attribute", "Unexpected character in unquoted attribute", "Unexpected character after attribute name.", "Unexpected character after attribute value.", 'Unexpected end of file in attribute value (".', "Unexpected end of file in attribute value (').", "Unexpected end of file in attribute value.", "Unexpected end of file in tag. Expected >", "Unexpected character after / in tag. Expected >", "Expected '--' or 'DOCTYPE'. Not found.", "Unexpected ! after -- in comment", "Unexpected space after -- in comment", "Incorrect comment.", "Unexpected end of file in comment.", "Unexpected end of file in comment (-)", "Unexpected '-' after '--' found in comment.", "Unexpected end of file in comment (--).", "Unexpected end of file in comment.", "Unexpected end of file in comment.", "Unexpected character in comment found.", "No space after literal string 'DOCTYPE'.", "Unexpected > character. Expected DOCTYPE name.", "Unexpected end of file. Expected DOCTYPE name.", "Unexpected end of file in DOCTYPE name.", "Unexpected end of file in DOCTYPE.", "Expected space or '>'. Got '%(data)s'", "Unexpected end of DOCTYPE.", "Unexpected character in DOCTYPE.", "XXX innerHTML EOF", "Unexpected DOCTYPE. Ignored.", "html needs to be the first start tag.", "Unexpected End of file. Expected DOCTYPE.", "Erroneous DOCTYPE.", "Unexpected non-space characters. Expected DOCTYPE.", "Unexpected start tag (%(name)s). Expected DOCTYPE.", "Unexpected end tag (%(name)s). Expected DOCTYPE.", "Unexpected end tag (%(name)s) after the (implied) root element.", "Unexpected end of file. Expected end tag (%(name)s).", "Unexpected start tag head in existing head. Ignored.", "Unexpected end tag (%(name)s). Ignored.", "Unexpected start tag (%(name)s) that can be in head. Moved.", "Unexpected start tag (%(name)s).", "Missing end tag (%(name)s).", "Missing end tags (%(name)s).", "Unexpected start tag (%(startName)s) implies end tag (%(endName)s).", "Unexpected start tag (%(originalName)s). Treated as %(newName)s.", "Unexpected start tag %(name)s. Don't use it!", "Unexpected start tag %(name)s. Ignored.", "Unexpected end tag (%(gotName)s). Missing end tag (%(expectedName)s).", "End tag (%(name)s) seen too early. Expected other end tag.", "Unexpected end tag (%(gotName)s). Expected end tag (%(expectedName)s).", "End tag (%(name)s) seen too early. Ignored.", "End tag (%(name)s) violates step 1, paragraph 1 of the adoption agency algorithm.", "End tag (%(name)s) violates step 1, paragraph 2 of the adoption agency algorithm.", "End tag (%(name)s) violates step 1, paragraph 3 of the adoption agency algorithm.", "Unexpected end tag (%(originalName)s). Treated as %(newName)s.", "This element (%(name)s) has no end tag.", "Unexpected implied end tag (%(name)s) in the table phase.", "Unexpected implied end tag (%(name)s) in the table body phase.", "Unexpected non-space characters in table context caused voodoo mode.", "Unexpected input with type hidden in table context.", "Unexpected form in table context.", "Unexpected start tag (%(name)s) in table context caused voodoo mode.", "Unexpected end tag (%(name)s) in table context caused voodoo mode.", "Unexpected table cell start tag (%(name)s) in the table body phase.", "Got table cell end tag (%(name)s) while required end tags are missing.", "Unexpected end tag (%(name)s) in the table body phase. Ignored.", "Unexpected implied end tag (%(name)s) in the table row phase.", "Unexpected end tag (%(name)s) in the table row phase. Ignored.", "Unexpected select start tag in the select phase treated as select end tag.", "Unexpected input start tag in the select phase.", "Unexpected start tag token (%(name)s in the select phase. Ignored.", "Unexpected end tag (%(name)s) in the select phase. Ignored.", "Unexpected table element start tag (%(name)s) in the select in table phase.", "Unexpected table element end tag (%(name)s) in the select in table phase.", "Unexpected non-space characters in the after body phase.", "Unexpected start tag token (%(name)s) in the after body phase.", "Unexpected end tag token (%(name)s) in the after body phase.", "Unexpected characters in the frameset phase. Characters ignored.", "Unexpected start tag token (%(name)s) in the frameset phase. Ignored.", "Unexpected end tag token (frameset) in the frameset phase (innerHTML).", "Unexpected end tag token (%(name)s) in the frameset phase. Ignored.", "Unexpected non-space characters in the after frameset phase. Ignored.", "Unexpected start tag (%(name)s) in the after frameset phase. Ignored.", "Unexpected end tag (%(name)s) in the after frameset phase. Ignored.", "Unexpected end tag after body(innerHtml)", "Unexpected non-space characters. Expected end of file.", "Unexpected start tag (%(name)s). Expected end of file.", "Unexpected end tag (%(name)s). Expected end of file.", "Unexpected end of file. Expected table content.", "Unexpected end of file. Expected select content.", "Unexpected end of file. Expected frameset content.", "Unexpected end of file. Expected script content.", "Unexpected end of file. Expected foreign content", "Trailing solidus not allowed on element %(name)s", "Element %(name)s not allowed in a non-html context", "Unexpected end tag (%(name)s) before html.", "Undefined error (this sucks and should be fixed)"], type$.ConstantStringMap_String_String);
    B.Object_KxL = {altglyph: 0, altglyphdef: 1, altglyphitem: 2, animatecolor: 3, animatemotion: 4, animatetransform: 5, clippath: 6, feblend: 7, fecolormatrix: 8, fecomponenttransfer: 9, fecomposite: 10, feconvolvematrix: 11, fediffuselighting: 12, fedisplacementmap: 13, fedistantlight: 14, feflood: 15, fefunca: 16, fefuncb: 17, fefuncg: 18, fefuncr: 19, fegaussianblur: 20, feimage: 21, femerge: 22, femergenode: 23, femorphology: 24, feoffset: 25, fepointlight: 26, fespecularlighting: 27, fespotlight: 28, fetile: 29, feturbulence: 30, foreignobject: 31, glyphref: 32, lineargradient: 33, radialgradient: 34, textpath: 35};
    B.Map_yzEtd = new A.ConstantStringMap(B.Object_KxL, ["altGlyph", "altGlyphDef", "altGlyphItem", "animateColor", "animateMotion", "animateTransform", "clipPath", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "foreignObject", "glyphRef", "linearGradient", "radialGradient", "textPath"], type$.ConstantStringMap_String_String);
    B.SchedulerPhase_0 = new A.SchedulerPhase("idle");
    B.SchedulerPhase_1 = new A.SchedulerPhase("midFrameCallback");
    B.SchedulerPhase_2 = new A.SchedulerPhase("postFrameCallbacks");
    B.Type_ByteBuffer_RkP = A.typeLiteral("ByteBuffer");
    B.Type_ByteData_zNC = A.typeLiteral("ByteData");
    B.Type_Int8List_ekJ = A.typeLiteral("Int8List");
    B.Type_Object_xQ6 = A.typeLiteral("Object");
    B.Type_Uint32List_2bx = A.typeLiteral("Uint32List");
    B.Type_Uint8List_WLA = A.typeLiteral("Uint8List");
    B.Type__WrappingDomComponent_yfz = A.typeLiteral("_WrappingDomComponent");
    B.Utf8Decoder_false = new A.Utf8Decoder(false);
    B._ElementLifecycle_0 = new A._ElementLifecycle("initial");
    B._ElementLifecycle_1 = new A._ElementLifecycle("active");
    B._ElementLifecycle_2 = new A._ElementLifecycle("inactive");
    B._ElementLifecycle_3 = new A._ElementLifecycle("defunct");
    B._StateLifecycle_0 = new A._StateLifecycle("created");
    B._StringStackTrace_3uE = new A._StringStackTrace("");
  })();
  (function staticFields() {
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.toStringVisiting = A._setArrayType([], type$.JSArray_Object);
    $.Primitives__identityHashCodeProperty = null;
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._Record__computedFieldKeys = A._setArrayType([], A.findType("JSArray<List<Object>?>"));
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $.Uri__cachedBaseString = "";
    $.Uri__cachedBaseUri = null;
    $.Element__nextHashCode = 1;
    $._unsupportedAttributes = A._setArrayType(["autocomplete", "required"], type$.JSArray_String);
    $._components = A._setArrayType(["a", "b", "br", "code", "em", "i", "s", "small", "span", "strong", "u", "audio", "img", "video", "embed", "iframe", "object", "source", "svg", "rect", "circle", "ellipse", "line", "path", "polygon", "polyline", "button", "form", "input", "label", "datalist", "legend", "meter", "progress", "optgroup", "option", "select", "fieldset", "textarea", "details", "dialog", "summary", "link", "script", "article", "aside", "body", "footer", "head", "header", "html", "h1", "h2", "h3", "h4", "h5", "h6", "nav", "section", "blockquote", "div", "ul", "ol", "li", "hr", "p", "pre"], type$.JSArray_String);
    $._currentUriBase = null;
    $._current = null;
    $._circularDependencyLock = null;
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => B.C__RootZone.run$1$1(new A.nullFuture_closure(), A.findType("Future<Null>")));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "_Utf8Decoder__reusableBuffer", "$get$_Utf8Decoder__reusableBuffer", () => A.NativeUint8List_NativeUint8List(4096));
    _lazyFinal($, "_Utf8Decoder__decoder", "$get$_Utf8Decoder__decoder", () => new A._Utf8Decoder__decoder_closure().call$0());
    _lazyFinal($, "_Utf8Decoder__decoderNonfatal", "$get$_Utf8Decoder__decoderNonfatal", () => new A._Utf8Decoder__decoderNonfatal_closure().call$0());
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List__create1(A._ensureNativeList(A._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int))));
    _lazy($, "_Base64Decoder__emptyBuffer", "$get$_Base64Decoder__emptyBuffer", () => A.NativeUint8List_NativeUint8List(0));
    _lazyFinal($, "_Uri__isWindowsCached", "$get$_Uri__isWindowsCached", () => typeof process != "undefined" && Object.prototype.toString.call(process) == "[object process]" && process.platform == "win32");
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", () => A.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", false));
    _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_xQ6));
    _lazyFinal($, "_scannerTables", "$get$_scannerTables", () => A._createTables());
    _lazyFinal($, "ElementEvents_webkitEvents", "$get$ElementEvents_webkitEvents", () => {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["animationend", "webkitAnimationEnd", "animationiteration", "webkitAnimationIteration", "animationstart", "webkitAnimationStart", "fullscreenchange", "webkitfullscreenchange", "fullscreenerror", "webkitfullscreenerror", "keyadded", "webkitkeyadded", "keyerror", "webkitkeyerror", "keymessage", "webkitkeymessage", "needkey", "webkitneedkey", "pointerlockchange", "webkitpointerlockchange", "pointerlockerror", "webkitpointerlockerror", "resourcetimingbufferfull", "webkitresourcetimingbufferfull", "transitionend", "webkitTransitionEnd", "speechchange", "webkitSpeechChange"], t1, t1);
    });
    _lazyFinal($, "Device_isOpera", "$get$Device_isOpera", () => B.JSString_methods.contains$2(A.Device_userAgent(), "Opera", 0));
    _lazyFinal($, "Device_isWebKit", "$get$Device_isWebKit", () => !$.$get$Device_isOpera() && B.JSString_methods.contains$2(A.Device_userAgent(), "WebKit", 0));
    _lazy($, "entitiesByFirstChar", "$get$entitiesByFirstChar", () => new A.entitiesByFirstChar_closure().call$0());
    _lazyFinal($, "_queryReg", "$get$_queryReg", () => A.RegExp_RegExp("^(.*?)(?:\\((\\d+):(\\d+)\\))?$", false));
    _lazyFinal($, "inputProvider", "$get$inputProvider", () => A.StateProvider$(new A.inputProvider_closure(), type$.String));
    _lazyFinal($, "outputProvider", "$get$outputProvider", () => A.StateProvider$(new A.outputProvider_closure(), type$.String));
    _lazyFinal($, "classAsListProvider", "$get$classAsListProvider", () => A.StateProvider$(new A.classAsListProvider_closure(), type$.bool));
    _lazyFinal($, "_bindingProvider", "$get$_bindingProvider", () => {
      var _null = null;
      return new A.Provider(new A._bindingProvider_closure(), _null, _null, _null, _null, _null, A.computeAllTransitiveDependencies(_null), A.findType("Provider<AppBinding>"));
    });
    _lazyFinal($, "_syncStateProvider", "$get$_syncStateProvider", () => A.StateProvider$(new A._syncStateProvider_closure(), type$.Map_String_dynamic));
    _lazyFinal($, "windows", "$get$windows", () => A.Context_Context($.$get$Style_windows()));
    _lazyFinal($, "context", "$get$context", () => new A.Context($.$get$Style_platform(), null));
    _lazyFinal($, "Style_posix", "$get$Style_posix", () => new A.PosixStyle(A.RegExp_RegExp("/", false), A.RegExp_RegExp("[^/]$", false), A.RegExp_RegExp("^/", false)));
    _lazyFinal($, "Style_windows", "$get$Style_windows", () => new A.WindowsStyle(A.RegExp_RegExp("[/\\\\]", false), A.RegExp_RegExp("[^/\\\\]$", false), A.RegExp_RegExp("^(\\\\\\\\[^\\\\]+\\\\[^\\\\/]+|[a-zA-Z]:[/\\\\])", false), A.RegExp_RegExp("^[/\\\\](?![/\\\\])", false)));
    _lazyFinal($, "Style_url", "$get$Style_url", () => new A.UrlStyle(A.RegExp_RegExp("/", false), A.RegExp_RegExp("(^[a-zA-Z][-+.a-zA-Z\\d]*://|[^/])$", false), A.RegExp_RegExp("[a-zA-Z][-+.a-zA-Z\\d]*://[^/]*", false), A.RegExp_RegExp("^/", false)));
    _lazyFinal($, "Style_platform", "$get$Style_platform", () => A.Style__getPlatformStyle());
    _lazyFinal($, "_specKey", "$get$_specKey", () => new A.Object());
    _lazyFinal($, "_vmFrame", "$get$_vmFrame", () => A.RegExp_RegExp("^#\\d+\\s+(\\S.*) \\((.+?)((?::\\d+){0,2})\\)$", false));
    _lazyFinal($, "_v8Frame", "$get$_v8Frame", () => A.RegExp_RegExp("^\\s*at (?:(\\S.*?)(?: \\[as [^\\]]+\\])? \\((.*)\\)|(.*))$", false));
    _lazyFinal($, "_v8UrlLocation", "$get$_v8UrlLocation", () => A.RegExp_RegExp("^(.*?):(\\d+)(?::(\\d+))?$|native$", false));
    _lazyFinal($, "_v8EvalLocation", "$get$_v8EvalLocation", () => A.RegExp_RegExp("^eval at (?:\\S.*?) \\((.*)\\)(?:, .*?:\\d+:\\d+)?$", false));
    _lazyFinal($, "_firefoxEvalLocation", "$get$_firefoxEvalLocation", () => A.RegExp_RegExp("(\\S+)@(\\S+) line (\\d+) >.* (Function|eval):\\d+:\\d+", false));
    _lazyFinal($, "_firefoxSafariFrame", "$get$_firefoxSafariFrame", () => A.RegExp_RegExp("^(?:([^@(/]*)(?:\\(.*\\))?((?:/[^/]*)*)(?:\\(.*\\))?@)?(.*?):(\\d*)(?::(\\d*))?$", false));
    _lazyFinal($, "_friendlyFrame", "$get$_friendlyFrame", () => A.RegExp_RegExp("^(\\S+)(?: (\\d+)(?::(\\d+))?)?\\s+([^\\d].*)$", false));
    _lazyFinal($, "_asyncBody", "$get$_asyncBody", () => A.RegExp_RegExp("<(<anonymous closure>|[^>]+)_async_body>", false));
    _lazyFinal($, "_initialDot", "$get$_initialDot", () => A.RegExp_RegExp("^\\.", false));
    _lazyFinal($, "Frame__uriRegExp", "$get$Frame__uriRegExp", () => A.RegExp_RegExp("^[a-zA-Z][-+.a-zA-Z\\d]*://", false));
    _lazyFinal($, "Frame__windowsRegExp", "$get$Frame__windowsRegExp", () => A.RegExp_RegExp("^([a-zA-Z]:[\\\\/]|\\\\\\\\)", false));
    _lazyFinal($, "_v8Trace", "$get$_v8Trace", () => A.RegExp_RegExp("\\n    ?at ", false));
    _lazyFinal($, "_v8TraceLine", "$get$_v8TraceLine", () => A.RegExp_RegExp("    ?at ", false));
    _lazyFinal($, "_firefoxEvalTrace", "$get$_firefoxEvalTrace", () => A.RegExp_RegExp("@\\S+ line \\d+ >.* (Function|eval):\\d+:\\d+", false));
    _lazyFinal($, "_firefoxSafariTrace", "$get$_firefoxSafariTrace", () => A.RegExp_RegExp("^(([.0-9A-Za-z_$/<]|\\(.*\\))*@)?[^\\s]*:\\d*$", true));
    _lazyFinal($, "_friendlyTrace", "$get$_friendlyTrace", () => A.RegExp_RegExp("^[^\\s<][^\\s]*( \\d+(:\\d+)?)?[ \\t]+[^\\s]+$", true));
    _lazyFinal($, "vmChainGap", "$get$vmChainGap", () => A.RegExp_RegExp("^<asynchronous suspension>\\n?$", true));
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({DOMError: J.JavaScriptObject, DOMImplementation: J.JavaScriptObject, MediaError: J.JavaScriptObject, Navigator: J.JavaScriptObject, NavigatorConcurrentHardware: J.JavaScriptObject, NavigatorUserMediaError: J.JavaScriptObject, OverconstrainedError: J.JavaScriptObject, PositionError: J.JavaScriptObject, GeolocationPositionError: J.JavaScriptObject, Range: J.JavaScriptObject, ArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Int8Array: A.NativeInt8List, Uint32Array: A.NativeUint32List, Uint8Array: A.NativeUint8List, HTMLAudioElement: A.HtmlElement, HTMLBRElement: A.HtmlElement, HTMLBaseElement: A.HtmlElement, HTMLBodyElement: A.HtmlElement, HTMLButtonElement: A.HtmlElement, HTMLCanvasElement: A.HtmlElement, HTMLContentElement: A.HtmlElement, HTMLDListElement: A.HtmlElement, HTMLDataElement: A.HtmlElement, HTMLDataListElement: A.HtmlElement, HTMLDetailsElement: A.HtmlElement, HTMLDialogElement: A.HtmlElement, HTMLDivElement: A.HtmlElement, HTMLEmbedElement: A.HtmlElement, HTMLFieldSetElement: A.HtmlElement, HTMLHRElement: A.HtmlElement, HTMLHeadElement: A.HtmlElement, HTMLHeadingElement: A.HtmlElement, HTMLHtmlElement: A.HtmlElement, HTMLIFrameElement: A.HtmlElement, HTMLImageElement: A.HtmlElement, HTMLLIElement: A.HtmlElement, HTMLLabelElement: A.HtmlElement, HTMLLegendElement: A.HtmlElement, HTMLLinkElement: A.HtmlElement, HTMLMapElement: A.HtmlElement, HTMLMediaElement: A.HtmlElement, HTMLMenuElement: A.HtmlElement, HTMLMetaElement: A.HtmlElement, HTMLMeterElement: A.HtmlElement, HTMLModElement: A.HtmlElement, HTMLOListElement: A.HtmlElement, HTMLObjectElement: A.HtmlElement, HTMLOptGroupElement: A.HtmlElement, HTMLOutputElement: A.HtmlElement, HTMLParagraphElement: A.HtmlElement, HTMLParamElement: A.HtmlElement, HTMLPictureElement: A.HtmlElement, HTMLPreElement: A.HtmlElement, HTMLProgressElement: A.HtmlElement, HTMLQuoteElement: A.HtmlElement, HTMLScriptElement: A.HtmlElement, HTMLShadowElement: A.HtmlElement, HTMLSlotElement: A.HtmlElement, HTMLSourceElement: A.HtmlElement, HTMLSpanElement: A.HtmlElement, HTMLStyleElement: A.HtmlElement, HTMLTableCaptionElement: A.HtmlElement, HTMLTableCellElement: A.HtmlElement, HTMLTableDataCellElement: A.HtmlElement, HTMLTableHeaderCellElement: A.HtmlElement, HTMLTableColElement: A.HtmlElement, HTMLTableElement: A.HtmlElement, HTMLTableRowElement: A.HtmlElement, HTMLTableSectionElement: A.HtmlElement, HTMLTemplateElement: A.HtmlElement, HTMLTimeElement: A.HtmlElement, HTMLTitleElement: A.HtmlElement, HTMLTrackElement: A.HtmlElement, HTMLUListElement: A.HtmlElement, HTMLUnknownElement: A.HtmlElement, HTMLVideoElement: A.HtmlElement, HTMLDirectoryElement: A.HtmlElement, HTMLFontElement: A.HtmlElement, HTMLFrameElement: A.HtmlElement, HTMLFrameSetElement: A.HtmlElement, HTMLMarqueeElement: A.HtmlElement, HTMLElement: A.HtmlElement, HTMLAnchorElement: A.AnchorElement, HTMLAreaElement: A.AreaElement, Blob: A.Blob, Comment: A.CharacterData, ProcessingInstruction: A.CharacterData, CharacterData: A.CharacterData, DOMException: A.DomException, MathMLElement: A.Element1, SVGAElement: A.Element1, SVGAnimateElement: A.Element1, SVGAnimateMotionElement: A.Element1, SVGAnimateTransformElement: A.Element1, SVGAnimationElement: A.Element1, SVGCircleElement: A.Element1, SVGClipPathElement: A.Element1, SVGDefsElement: A.Element1, SVGDescElement: A.Element1, SVGDiscardElement: A.Element1, SVGEllipseElement: A.Element1, SVGFEBlendElement: A.Element1, SVGFEColorMatrixElement: A.Element1, SVGFEComponentTransferElement: A.Element1, SVGFECompositeElement: A.Element1, SVGFEConvolveMatrixElement: A.Element1, SVGFEDiffuseLightingElement: A.Element1, SVGFEDisplacementMapElement: A.Element1, SVGFEDistantLightElement: A.Element1, SVGFEFloodElement: A.Element1, SVGFEFuncAElement: A.Element1, SVGFEFuncBElement: A.Element1, SVGFEFuncGElement: A.Element1, SVGFEFuncRElement: A.Element1, SVGFEGaussianBlurElement: A.Element1, SVGFEImageElement: A.Element1, SVGFEMergeElement: A.Element1, SVGFEMergeNodeElement: A.Element1, SVGFEMorphologyElement: A.Element1, SVGFEOffsetElement: A.Element1, SVGFEPointLightElement: A.Element1, SVGFESpecularLightingElement: A.Element1, SVGFESpotLightElement: A.Element1, SVGFETileElement: A.Element1, SVGFETurbulenceElement: A.Element1, SVGFilterElement: A.Element1, SVGForeignObjectElement: A.Element1, SVGGElement: A.Element1, SVGGeometryElement: A.Element1, SVGGraphicsElement: A.Element1, SVGImageElement: A.Element1, SVGLineElement: A.Element1, SVGLinearGradientElement: A.Element1, SVGMarkerElement: A.Element1, SVGMaskElement: A.Element1, SVGMetadataElement: A.Element1, SVGPathElement: A.Element1, SVGPatternElement: A.Element1, SVGPolygonElement: A.Element1, SVGPolylineElement: A.Element1, SVGRadialGradientElement: A.Element1, SVGRectElement: A.Element1, SVGScriptElement: A.Element1, SVGSetElement: A.Element1, SVGStopElement: A.Element1, SVGStyleElement: A.Element1, SVGElement: A.Element1, SVGSVGElement: A.Element1, SVGSwitchElement: A.Element1, SVGSymbolElement: A.Element1, SVGTSpanElement: A.Element1, SVGTextContentElement: A.Element1, SVGTextElement: A.Element1, SVGTextPathElement: A.Element1, SVGTextPositioningElement: A.Element1, SVGTitleElement: A.Element1, SVGUseElement: A.Element1, SVGViewElement: A.Element1, SVGGradientElement: A.Element1, SVGComponentTransferFunctionElement: A.Element1, SVGFEDropShadowElement: A.Element1, SVGMPathElement: A.Element1, Element: A.Element1, AbortPaymentEvent: A.Event, AnimationEvent: A.Event, AnimationPlaybackEvent: A.Event, ApplicationCacheErrorEvent: A.Event, BackgroundFetchClickEvent: A.Event, BackgroundFetchEvent: A.Event, BackgroundFetchFailEvent: A.Event, BackgroundFetchedEvent: A.Event, BeforeInstallPromptEvent: A.Event, BeforeUnloadEvent: A.Event, BlobEvent: A.Event, CanMakePaymentEvent: A.Event, ClipboardEvent: A.Event, CloseEvent: A.Event, CompositionEvent: A.Event, CustomEvent: A.Event, DeviceMotionEvent: A.Event, DeviceOrientationEvent: A.Event, ErrorEvent: A.Event, ExtendableEvent: A.Event, ExtendableMessageEvent: A.Event, FetchEvent: A.Event, FocusEvent: A.Event, FontFaceSetLoadEvent: A.Event, ForeignFetchEvent: A.Event, GamepadEvent: A.Event, HashChangeEvent: A.Event, InstallEvent: A.Event, KeyboardEvent: A.Event, MediaEncryptedEvent: A.Event, MediaKeyMessageEvent: A.Event, MediaQueryListEvent: A.Event, MediaStreamEvent: A.Event, MediaStreamTrackEvent: A.Event, MessageEvent: A.Event, MIDIConnectionEvent: A.Event, MIDIMessageEvent: A.Event, MouseEvent: A.Event, DragEvent: A.Event, MutationEvent: A.Event, NotificationEvent: A.Event, PageTransitionEvent: A.Event, PaymentRequestEvent: A.Event, PaymentRequestUpdateEvent: A.Event, PointerEvent: A.Event, PopStateEvent: A.Event, PresentationConnectionAvailableEvent: A.Event, PresentationConnectionCloseEvent: A.Event, ProgressEvent: A.Event, PromiseRejectionEvent: A.Event, PushEvent: A.Event, RTCDataChannelEvent: A.Event, RTCDTMFToneChangeEvent: A.Event, RTCPeerConnectionIceEvent: A.Event, RTCTrackEvent: A.Event, SecurityPolicyViolationEvent: A.Event, SensorErrorEvent: A.Event, SpeechRecognitionError: A.Event, SpeechRecognitionEvent: A.Event, SpeechSynthesisEvent: A.Event, StorageEvent: A.Event, SyncEvent: A.Event, TextEvent: A.Event, TouchEvent: A.Event, TrackEvent: A.Event, TransitionEvent: A.Event, WebKitTransitionEvent: A.Event, UIEvent: A.Event, VRDeviceEvent: A.Event, VRDisplayEvent: A.Event, VRSessionEvent: A.Event, WheelEvent: A.Event, MojoInterfaceRequestEvent: A.Event, ResourceProgressEvent: A.Event, USBConnectionEvent: A.Event, AudioProcessingEvent: A.Event, OfflineAudioCompletionEvent: A.Event, WebGLContextEvent: A.Event, Event: A.Event, InputEvent: A.Event, SubmitEvent: A.Event, Clipboard: A.EventTarget, IDBOpenDBRequest: A.EventTarget, IDBVersionChangeRequest: A.EventTarget, IDBRequest: A.EventTarget, EventTarget: A.EventTarget, File: A.File, FileList: A.FileList, HTMLFormElement: A.FormElement, HTMLCollection: A.HtmlCollection, HTMLFormControlsCollection: A.HtmlCollection, HTMLOptionsCollection: A.HtmlCollection, HTMLInputElement: A.InputElement, Location: A.Location, Document: A.Node0, DocumentFragment: A.Node0, HTMLDocument: A.Node0, ShadowRoot: A.Node0, XMLDocument: A.Node0, DocumentType: A.Node0, Node: A.Node0, NodeList: A.NodeList0, RadioNodeList: A.NodeList0, HTMLOptionElement: A.OptionElement, HTMLSelectElement: A.SelectElement, CDATASection: A.Text1, Text: A.Text1, HTMLTextAreaElement: A.TextAreaElement, Window: A.Window, DOMWindow: A.Window, Attr: A._Attr, NamedNodeMap: A._NamedNodeMap, MozNamedAttrMap: A._NamedNodeMap, IDBVersionChangeEvent: A.VersionChangeEvent});
    hunkHelpers.setOrUpdateLeafTags({DOMError: true, DOMImplementation: true, MediaError: true, Navigator: true, NavigatorConcurrentHardware: true, NavigatorUserMediaError: true, OverconstrainedError: true, PositionError: true, GeolocationPositionError: true, Range: true, ArrayBuffer: true, ArrayBufferView: false, DataView: true, Int8Array: true, Uint32Array: true, Uint8Array: false, HTMLAudioElement: true, HTMLBRElement: true, HTMLBaseElement: true, HTMLBodyElement: true, HTMLButtonElement: true, HTMLCanvasElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLDivElement: true, HTMLEmbedElement: true, HTMLFieldSetElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLImageElement: true, HTMLLIElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMapElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptGroupElement: true, HTMLOutputElement: true, HTMLParagraphElement: true, HTMLParamElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLScriptElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLSourceElement: true, HTMLSpanElement: true, HTMLStyleElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, HTMLAnchorElement: true, HTMLAreaElement: true, Blob: false, Comment: true, ProcessingInstruction: true, CharacterData: false, DOMException: true, MathMLElement: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGScriptElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, Element: false, AbortPaymentEvent: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CloseEvent: true, CompositionEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FocusEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, KeyboardEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MessageEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MouseEvent: true, DragEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PointerEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, ProgressEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, SyncEvent: true, TextEvent: true, TouchEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, UIEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, WheelEvent: true, MojoInterfaceRequestEvent: true, ResourceProgressEvent: true, USBConnectionEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, SubmitEvent: false, Clipboard: true, IDBOpenDBRequest: true, IDBVersionChangeRequest: true, IDBRequest: true, EventTarget: false, File: true, FileList: true, HTMLFormElement: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, HTMLInputElement: true, Location: true, Document: true, DocumentFragment: true, HTMLDocument: true, ShadowRoot: true, XMLDocument: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, HTMLOptionElement: true, HTMLSelectElement: true, CDATASection: true, Text: true, HTMLTextAreaElement: true, Window: true, DOMWindow: true, Attr: true, NamedNodeMap: true, MozNamedAttrMap: true, IDBVersionChangeEvent: true});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$0 = function() {
    return this();
  };
  Function.prototype.call$2$0 = function() {
    return this();
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i) {
        scripts[i].removeEventListener("load", onLoad, false);
      }
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].addEventListener("load", onLoad, false);
    }
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function") {
      dartMainRunner(callMain, []);
    } else {
      callMain([]);
    }
  });
})();

//# sourceMappingURL=main.dart.js.map
